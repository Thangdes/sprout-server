
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Industry
 * Bảng Industries: Danh mục ngành nghề (Cần có dữ liệu đa dạng: Sản xuất, Dịch vụ, Nhà hàng, Khách sạn, IT, Y tế, Giáo dục, Xây dựng...)
 */
export type Industry = $Result.DefaultSelection<Prisma.$IndustryPayload>
/**
 * Model Skill
 * Bảng Skills: Danh mục kỹ năng (Cần có dữ liệu đa dạng)
 */
export type Skill = $Result.DefaultSelection<Prisma.$SkillPayload>
/**
 * Model User
 * Bảng Users: Thông tin tài khoản người dùng
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Session
 * Bảng Sessions: Quản lý phiên đăng nhập người dùng
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model Employer
 * Bảng Employers: Thông tin nhà tuyển dụng (công ty)
 */
export type Employer = $Result.DefaultSelection<Prisma.$EmployerPayload>
/**
 * Model Candidate
 * Bảng Candidates: Thông tin hồ sơ ứng viên (người tìm việc nước ngoài)
 */
export type Candidate = $Result.DefaultSelection<Prisma.$CandidatePayload>
/**
 * Model Job
 * Bảng Jobs: Thông tin tuyển dụng (Đa ngành nghề, cho người nước ngoài)
 */
export type Job = $Result.DefaultSelection<Prisma.$JobPayload>
/**
 * Model JobSkill
 * Bảng JobSkills: Liên kết giữa công việc và kỹ năng
 */
export type JobSkill = $Result.DefaultSelection<Prisma.$JobSkillPayload>
/**
 * Model CandidateSkill
 * Bảng CandidateSkills: Liên kết giữa ứng viên và kỹ năng
 */
export type CandidateSkill = $Result.DefaultSelection<Prisma.$CandidateSkillPayload>
/**
 * Model CV
 * Bảng CVs: Tệp CV/sơ yếu lý lịch của ứng viên (Có thể có CV tiếng Nhật và tiếng Anh/Việt)
 */
export type CV = $Result.DefaultSelection<Prisma.$CVPayload>
/**
 * Model Application
 * Bảng Applications: Thông tin ứng tuyển
 */
export type Application = $Result.DefaultSelection<Prisma.$ApplicationPayload>
/**
 * Model Education
 * Bảng Education: Thông tin học vấn của ứng viên
 */
export type Education = $Result.DefaultSelection<Prisma.$EducationPayload>
/**
 * Model WorkExperience
 * Bảng WorkExperience: Thông tin kinh nghiệm làm việc (đa ngành)
 */
export type WorkExperience = $Result.DefaultSelection<Prisma.$WorkExperiencePayload>
/**
 * Model Project
 * Bảng Projects: Kinh nghiệm dự án (đa ngành)
 */
export type Project = $Result.DefaultSelection<Prisma.$ProjectPayload>
/**
 * Model Qualification
 * Bảng Qualifications: Thông tin chứng chỉ/bằng cấp (đa ngành)
 */
export type Qualification = $Result.DefaultSelection<Prisma.$QualificationPayload>
/**
 * Model Award
 * Bảng Awards: Thông tin giải thưởng/thành tích
 */
export type Award = $Result.DefaultSelection<Prisma.$AwardPayload>
/**
 * Model CandidateMedia
 * Bảng CandidateMedia: Phương tiện portfolio của ứng viên
 */
export type CandidateMedia = $Result.DefaultSelection<Prisma.$CandidateMediaPayload>
/**
 * Model JobDocument
 * Bảng JobDocuments: Tài liệu liên quan đến công việc
 */
export type JobDocument = $Result.DefaultSelection<Prisma.$JobDocumentPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserType: {
  CANDIDATE: 'CANDIDATE',
  EMPLOYER: 'EMPLOYER',
  ADMIN: 'ADMIN'
};

export type UserType = (typeof UserType)[keyof typeof UserType]


export const GenderType: {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER',
  PREFER_NOT_TO_SAY: 'PREFER_NOT_TO_SAY'
};

export type GenderType = (typeof GenderType)[keyof typeof GenderType]


export const CompanySizeType: {
  SIZE_1_10: 'SIZE_1_10',
  SIZE_11_50: 'SIZE_11_50',
  SIZE_51_200: 'SIZE_51_200',
  SIZE_201_500: 'SIZE_201_500',
  SIZE_501_1000: 'SIZE_501_1000',
  SIZE_1000_PLUS: 'SIZE_1000_PLUS'
};

export type CompanySizeType = (typeof CompanySizeType)[keyof typeof CompanySizeType]


export const SalaryType: {
  range: 'range',
  starting_from: 'starting_from',
  up_to: 'up_to',
  negotiable: 'negotiable'
};

export type SalaryType = (typeof SalaryType)[keyof typeof SalaryType]


export const JobStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  CLOSED: 'CLOSED',
  DRAFT: 'DRAFT'
};

export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus]


export const ApplicationStatus: {
  submitted: 'submitted',
  under_review: 'under_review',
  screening: 'screening',
  interviewing: 'interviewing',
  offer_made: 'offer_made',
  offer_accepted: 'offer_accepted',
  offer_rejected: 'offer_rejected',
  rejected: 'rejected',
  withdrawn: 'withdrawn'
};

export type ApplicationStatus = (typeof ApplicationStatus)[keyof typeof ApplicationStatus]


export const ProficiencyLevel: {
  beginner: 'beginner',
  intermediate: 'intermediate',
  advanced: 'advanced',
  expert: 'expert',
  native: 'native'
};

export type ProficiencyLevel = (typeof ProficiencyLevel)[keyof typeof ProficiencyLevel]


export const JapaneseProficiencyLevel: {
  N1: 'N1',
  N2: 'N2',
  N3: 'N3',
  N4: 'N4',
  N5: 'N5',
  BUSINESS_LEVEL: 'BUSINESS_LEVEL',
  DAILY_CONVERSATION: 'DAILY_CONVERSATION',
  NATIVE: 'NATIVE',
  NONE: 'NONE'
};

export type JapaneseProficiencyLevel = (typeof JapaneseProficiencyLevel)[keyof typeof JapaneseProficiencyLevel]


export const JobTypeEnum: {
  full_time: 'full_time',
  part_time: 'part_time',
  contract: 'contract',
  temporary: 'temporary',
  internship: 'internship',
  volunteer: 'volunteer',
  freelance: 'freelance'
};

export type JobTypeEnum = (typeof JobTypeEnum)[keyof typeof JobTypeEnum]


export const FileTypeEnum: {
  pdf: 'pdf',
  doc: 'doc',
  docx: 'docx',
  image: 'image',
  other: 'other'
};

export type FileTypeEnum = (typeof FileTypeEnum)[keyof typeof FileTypeEnum]


export const SkillCategory: {
  PROFESSIONAL: 'PROFESSIONAL',
  TECHNICAL: 'TECHNICAL',
  LANGUAGE: 'LANGUAGE',
  SOFTWARE_TOOLS: 'SOFTWARE_TOOLS',
  INDUSTRY_SPECIFIC: 'INDUSTRY_SPECIFIC',
  SOFT_SKILL: 'SOFT_SKILL',
  CERTIFICATION: 'CERTIFICATION',
  OTHER: 'OTHER'
};

export type SkillCategory = (typeof SkillCategory)[keyof typeof SkillCategory]


export const DocumentType: {
  COMPANY_OVERVIEW: 'COMPANY_OVERVIEW',
  JOB_DESCRIPTION: 'JOB_DESCRIPTION',
  BENEFITS_INFO: 'BENEFITS_INFO',
  PRESENTATION: 'PRESENTATION',
  VIDEO: 'VIDEO',
  OTHER: 'OTHER'
};

export type DocumentType = (typeof DocumentType)[keyof typeof DocumentType]


export const MediaType: {
  SLIDE: 'SLIDE',
  VIDEO: 'VIDEO',
  PORTFOLIO_ITEM: 'PORTFOLIO_ITEM',
  OTHER: 'OTHER'
};

export type MediaType = (typeof MediaType)[keyof typeof MediaType]

}

export type UserType = $Enums.UserType

export const UserType: typeof $Enums.UserType

export type GenderType = $Enums.GenderType

export const GenderType: typeof $Enums.GenderType

export type CompanySizeType = $Enums.CompanySizeType

export const CompanySizeType: typeof $Enums.CompanySizeType

export type SalaryType = $Enums.SalaryType

export const SalaryType: typeof $Enums.SalaryType

export type JobStatus = $Enums.JobStatus

export const JobStatus: typeof $Enums.JobStatus

export type ApplicationStatus = $Enums.ApplicationStatus

export const ApplicationStatus: typeof $Enums.ApplicationStatus

export type ProficiencyLevel = $Enums.ProficiencyLevel

export const ProficiencyLevel: typeof $Enums.ProficiencyLevel

export type JapaneseProficiencyLevel = $Enums.JapaneseProficiencyLevel

export const JapaneseProficiencyLevel: typeof $Enums.JapaneseProficiencyLevel

export type JobTypeEnum = $Enums.JobTypeEnum

export const JobTypeEnum: typeof $Enums.JobTypeEnum

export type FileTypeEnum = $Enums.FileTypeEnum

export const FileTypeEnum: typeof $Enums.FileTypeEnum

export type SkillCategory = $Enums.SkillCategory

export const SkillCategory: typeof $Enums.SkillCategory

export type DocumentType = $Enums.DocumentType

export const DocumentType: typeof $Enums.DocumentType

export type MediaType = $Enums.MediaType

export const MediaType: typeof $Enums.MediaType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Industries
 * const industries = await prisma.industry.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Industries
   * const industries = await prisma.industry.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.industry`: Exposes CRUD operations for the **Industry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Industries
    * const industries = await prisma.industry.findMany()
    * ```
    */
  get industry(): Prisma.IndustryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skill`: Exposes CRUD operations for the **Skill** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Skills
    * const skills = await prisma.skill.findMany()
    * ```
    */
  get skill(): Prisma.SkillDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employer`: Exposes CRUD operations for the **Employer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employers
    * const employers = await prisma.employer.findMany()
    * ```
    */
  get employer(): Prisma.EmployerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.candidate`: Exposes CRUD operations for the **Candidate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Candidates
    * const candidates = await prisma.candidate.findMany()
    * ```
    */
  get candidate(): Prisma.CandidateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.job`: Exposes CRUD operations for the **Job** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Jobs
    * const jobs = await prisma.job.findMany()
    * ```
    */
  get job(): Prisma.JobDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.jobSkill`: Exposes CRUD operations for the **JobSkill** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobSkills
    * const jobSkills = await prisma.jobSkill.findMany()
    * ```
    */
  get jobSkill(): Prisma.JobSkillDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.candidateSkill`: Exposes CRUD operations for the **CandidateSkill** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CandidateSkills
    * const candidateSkills = await prisma.candidateSkill.findMany()
    * ```
    */
  get candidateSkill(): Prisma.CandidateSkillDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cV`: Exposes CRUD operations for the **CV** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CVS
    * const cVS = await prisma.cV.findMany()
    * ```
    */
  get cV(): Prisma.CVDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.application`: Exposes CRUD operations for the **Application** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Applications
    * const applications = await prisma.application.findMany()
    * ```
    */
  get application(): Prisma.ApplicationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.education`: Exposes CRUD operations for the **Education** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Educations
    * const educations = await prisma.education.findMany()
    * ```
    */
  get education(): Prisma.EducationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.workExperience`: Exposes CRUD operations for the **WorkExperience** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkExperiences
    * const workExperiences = await prisma.workExperience.findMany()
    * ```
    */
  get workExperience(): Prisma.WorkExperienceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project`: Exposes CRUD operations for the **Project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.project.findMany()
    * ```
    */
  get project(): Prisma.ProjectDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.qualification`: Exposes CRUD operations for the **Qualification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Qualifications
    * const qualifications = await prisma.qualification.findMany()
    * ```
    */
  get qualification(): Prisma.QualificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.award`: Exposes CRUD operations for the **Award** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Awards
    * const awards = await prisma.award.findMany()
    * ```
    */
  get award(): Prisma.AwardDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.candidateMedia`: Exposes CRUD operations for the **CandidateMedia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CandidateMedias
    * const candidateMedias = await prisma.candidateMedia.findMany()
    * ```
    */
  get candidateMedia(): Prisma.CandidateMediaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.jobDocument`: Exposes CRUD operations for the **JobDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobDocuments
    * const jobDocuments = await prisma.jobDocument.findMany()
    * ```
    */
  get jobDocument(): Prisma.JobDocumentDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Industry: 'Industry',
    Skill: 'Skill',
    User: 'User',
    Session: 'Session',
    Employer: 'Employer',
    Candidate: 'Candidate',
    Job: 'Job',
    JobSkill: 'JobSkill',
    CandidateSkill: 'CandidateSkill',
    CV: 'CV',
    Application: 'Application',
    Education: 'Education',
    WorkExperience: 'WorkExperience',
    Project: 'Project',
    Qualification: 'Qualification',
    Award: 'Award',
    CandidateMedia: 'CandidateMedia',
    JobDocument: 'JobDocument'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "industry" | "skill" | "user" | "session" | "employer" | "candidate" | "job" | "jobSkill" | "candidateSkill" | "cV" | "application" | "education" | "workExperience" | "project" | "qualification" | "award" | "candidateMedia" | "jobDocument"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Industry: {
        payload: Prisma.$IndustryPayload<ExtArgs>
        fields: Prisma.IndustryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IndustryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IndustryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>
          }
          findFirst: {
            args: Prisma.IndustryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IndustryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>
          }
          findMany: {
            args: Prisma.IndustryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>[]
          }
          create: {
            args: Prisma.IndustryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>
          }
          createMany: {
            args: Prisma.IndustryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IndustryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>[]
          }
          delete: {
            args: Prisma.IndustryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>
          }
          update: {
            args: Prisma.IndustryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>
          }
          deleteMany: {
            args: Prisma.IndustryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IndustryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.IndustryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>[]
          }
          upsert: {
            args: Prisma.IndustryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IndustryPayload>
          }
          aggregate: {
            args: Prisma.IndustryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIndustry>
          }
          groupBy: {
            args: Prisma.IndustryGroupByArgs<ExtArgs>
            result: $Utils.Optional<IndustryGroupByOutputType>[]
          }
          count: {
            args: Prisma.IndustryCountArgs<ExtArgs>
            result: $Utils.Optional<IndustryCountAggregateOutputType> | number
          }
        }
      }
      Skill: {
        payload: Prisma.$SkillPayload<ExtArgs>
        fields: Prisma.SkillFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SkillFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SkillFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>
          }
          findFirst: {
            args: Prisma.SkillFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SkillFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>
          }
          findMany: {
            args: Prisma.SkillFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>[]
          }
          create: {
            args: Prisma.SkillCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>
          }
          createMany: {
            args: Prisma.SkillCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SkillCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>[]
          }
          delete: {
            args: Prisma.SkillDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>
          }
          update: {
            args: Prisma.SkillUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>
          }
          deleteMany: {
            args: Prisma.SkillDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SkillUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SkillUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>[]
          }
          upsert: {
            args: Prisma.SkillUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkillPayload>
          }
          aggregate: {
            args: Prisma.SkillAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkill>
          }
          groupBy: {
            args: Prisma.SkillGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkillGroupByOutputType>[]
          }
          count: {
            args: Prisma.SkillCountArgs<ExtArgs>
            result: $Utils.Optional<SkillCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      Employer: {
        payload: Prisma.$EmployerPayload<ExtArgs>
        fields: Prisma.EmployerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmployerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmployerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>
          }
          findFirst: {
            args: Prisma.EmployerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmployerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>
          }
          findMany: {
            args: Prisma.EmployerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>[]
          }
          create: {
            args: Prisma.EmployerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>
          }
          createMany: {
            args: Prisma.EmployerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmployerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>[]
          }
          delete: {
            args: Prisma.EmployerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>
          }
          update: {
            args: Prisma.EmployerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>
          }
          deleteMany: {
            args: Prisma.EmployerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmployerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmployerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>[]
          }
          upsert: {
            args: Prisma.EmployerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployerPayload>
          }
          aggregate: {
            args: Prisma.EmployerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployer>
          }
          groupBy: {
            args: Prisma.EmployerGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmployerGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmployerCountArgs<ExtArgs>
            result: $Utils.Optional<EmployerCountAggregateOutputType> | number
          }
        }
      }
      Candidate: {
        payload: Prisma.$CandidatePayload<ExtArgs>
        fields: Prisma.CandidateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CandidateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CandidateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          findFirst: {
            args: Prisma.CandidateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CandidateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          findMany: {
            args: Prisma.CandidateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>[]
          }
          create: {
            args: Prisma.CandidateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          createMany: {
            args: Prisma.CandidateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CandidateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>[]
          }
          delete: {
            args: Prisma.CandidateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          update: {
            args: Prisma.CandidateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          deleteMany: {
            args: Prisma.CandidateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CandidateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CandidateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>[]
          }
          upsert: {
            args: Prisma.CandidateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          aggregate: {
            args: Prisma.CandidateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidate>
          }
          groupBy: {
            args: Prisma.CandidateGroupByArgs<ExtArgs>
            result: $Utils.Optional<CandidateGroupByOutputType>[]
          }
          count: {
            args: Prisma.CandidateCountArgs<ExtArgs>
            result: $Utils.Optional<CandidateCountAggregateOutputType> | number
          }
        }
      }
      Job: {
        payload: Prisma.$JobPayload<ExtArgs>
        fields: Prisma.JobFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          findFirst: {
            args: Prisma.JobFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          findMany: {
            args: Prisma.JobFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          create: {
            args: Prisma.JobCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          createMany: {
            args: Prisma.JobCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          delete: {
            args: Prisma.JobDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          update: {
            args: Prisma.JobUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          deleteMany: {
            args: Prisma.JobDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.JobUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          upsert: {
            args: Prisma.JobUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          aggregate: {
            args: Prisma.JobAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJob>
          }
          groupBy: {
            args: Prisma.JobGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobCountArgs<ExtArgs>
            result: $Utils.Optional<JobCountAggregateOutputType> | number
          }
        }
      }
      JobSkill: {
        payload: Prisma.$JobSkillPayload<ExtArgs>
        fields: Prisma.JobSkillFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobSkillFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobSkillFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>
          }
          findFirst: {
            args: Prisma.JobSkillFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobSkillFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>
          }
          findMany: {
            args: Prisma.JobSkillFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>[]
          }
          create: {
            args: Prisma.JobSkillCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>
          }
          createMany: {
            args: Prisma.JobSkillCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobSkillCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>[]
          }
          delete: {
            args: Prisma.JobSkillDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>
          }
          update: {
            args: Prisma.JobSkillUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>
          }
          deleteMany: {
            args: Prisma.JobSkillDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobSkillUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.JobSkillUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>[]
          }
          upsert: {
            args: Prisma.JobSkillUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobSkillPayload>
          }
          aggregate: {
            args: Prisma.JobSkillAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobSkill>
          }
          groupBy: {
            args: Prisma.JobSkillGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobSkillGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobSkillCountArgs<ExtArgs>
            result: $Utils.Optional<JobSkillCountAggregateOutputType> | number
          }
        }
      }
      CandidateSkill: {
        payload: Prisma.$CandidateSkillPayload<ExtArgs>
        fields: Prisma.CandidateSkillFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CandidateSkillFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CandidateSkillFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>
          }
          findFirst: {
            args: Prisma.CandidateSkillFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CandidateSkillFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>
          }
          findMany: {
            args: Prisma.CandidateSkillFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>[]
          }
          create: {
            args: Prisma.CandidateSkillCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>
          }
          createMany: {
            args: Prisma.CandidateSkillCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CandidateSkillCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>[]
          }
          delete: {
            args: Prisma.CandidateSkillDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>
          }
          update: {
            args: Prisma.CandidateSkillUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>
          }
          deleteMany: {
            args: Prisma.CandidateSkillDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CandidateSkillUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CandidateSkillUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>[]
          }
          upsert: {
            args: Prisma.CandidateSkillUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateSkillPayload>
          }
          aggregate: {
            args: Prisma.CandidateSkillAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidateSkill>
          }
          groupBy: {
            args: Prisma.CandidateSkillGroupByArgs<ExtArgs>
            result: $Utils.Optional<CandidateSkillGroupByOutputType>[]
          }
          count: {
            args: Prisma.CandidateSkillCountArgs<ExtArgs>
            result: $Utils.Optional<CandidateSkillCountAggregateOutputType> | number
          }
        }
      }
      CV: {
        payload: Prisma.$CVPayload<ExtArgs>
        fields: Prisma.CVFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CVFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CVFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>
          }
          findFirst: {
            args: Prisma.CVFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CVFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>
          }
          findMany: {
            args: Prisma.CVFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>[]
          }
          create: {
            args: Prisma.CVCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>
          }
          createMany: {
            args: Prisma.CVCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CVCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>[]
          }
          delete: {
            args: Prisma.CVDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>
          }
          update: {
            args: Prisma.CVUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>
          }
          deleteMany: {
            args: Prisma.CVDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CVUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CVUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>[]
          }
          upsert: {
            args: Prisma.CVUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CVPayload>
          }
          aggregate: {
            args: Prisma.CVAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCV>
          }
          groupBy: {
            args: Prisma.CVGroupByArgs<ExtArgs>
            result: $Utils.Optional<CVGroupByOutputType>[]
          }
          count: {
            args: Prisma.CVCountArgs<ExtArgs>
            result: $Utils.Optional<CVCountAggregateOutputType> | number
          }
        }
      }
      Application: {
        payload: Prisma.$ApplicationPayload<ExtArgs>
        fields: Prisma.ApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findFirst: {
            args: Prisma.ApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findMany: {
            args: Prisma.ApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          create: {
            args: Prisma.ApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          createMany: {
            args: Prisma.ApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          delete: {
            args: Prisma.ApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          update: {
            args: Prisma.ApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApplicationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          upsert: {
            args: Prisma.ApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          aggregate: {
            args: Prisma.ApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplication>
          }
          groupBy: {
            args: Prisma.ApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationCountAggregateOutputType> | number
          }
        }
      }
      Education: {
        payload: Prisma.$EducationPayload<ExtArgs>
        fields: Prisma.EducationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EducationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EducationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>
          }
          findFirst: {
            args: Prisma.EducationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EducationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>
          }
          findMany: {
            args: Prisma.EducationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>[]
          }
          create: {
            args: Prisma.EducationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>
          }
          createMany: {
            args: Prisma.EducationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EducationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>[]
          }
          delete: {
            args: Prisma.EducationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>
          }
          update: {
            args: Prisma.EducationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>
          }
          deleteMany: {
            args: Prisma.EducationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EducationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EducationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>[]
          }
          upsert: {
            args: Prisma.EducationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EducationPayload>
          }
          aggregate: {
            args: Prisma.EducationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEducation>
          }
          groupBy: {
            args: Prisma.EducationGroupByArgs<ExtArgs>
            result: $Utils.Optional<EducationGroupByOutputType>[]
          }
          count: {
            args: Prisma.EducationCountArgs<ExtArgs>
            result: $Utils.Optional<EducationCountAggregateOutputType> | number
          }
        }
      }
      WorkExperience: {
        payload: Prisma.$WorkExperiencePayload<ExtArgs>
        fields: Prisma.WorkExperienceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WorkExperienceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WorkExperienceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>
          }
          findFirst: {
            args: Prisma.WorkExperienceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WorkExperienceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>
          }
          findMany: {
            args: Prisma.WorkExperienceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>[]
          }
          create: {
            args: Prisma.WorkExperienceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>
          }
          createMany: {
            args: Prisma.WorkExperienceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WorkExperienceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>[]
          }
          delete: {
            args: Prisma.WorkExperienceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>
          }
          update: {
            args: Prisma.WorkExperienceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>
          }
          deleteMany: {
            args: Prisma.WorkExperienceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WorkExperienceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.WorkExperienceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>[]
          }
          upsert: {
            args: Prisma.WorkExperienceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkExperiencePayload>
          }
          aggregate: {
            args: Prisma.WorkExperienceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWorkExperience>
          }
          groupBy: {
            args: Prisma.WorkExperienceGroupByArgs<ExtArgs>
            result: $Utils.Optional<WorkExperienceGroupByOutputType>[]
          }
          count: {
            args: Prisma.WorkExperienceCountArgs<ExtArgs>
            result: $Utils.Optional<WorkExperienceCountAggregateOutputType> | number
          }
        }
      }
      Project: {
        payload: Prisma.$ProjectPayload<ExtArgs>
        fields: Prisma.ProjectFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findFirst: {
            args: Prisma.ProjectFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findMany: {
            args: Prisma.ProjectFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          create: {
            args: Prisma.ProjectCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          createMany: {
            args: Prisma.ProjectCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProjectCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          delete: {
            args: Prisma.ProjectDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          update: {
            args: Prisma.ProjectUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          deleteMany: {
            args: Prisma.ProjectDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProjectUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          upsert: {
            args: Prisma.ProjectUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          aggregate: {
            args: Prisma.ProjectAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject>
          }
          groupBy: {
            args: Prisma.ProjectGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectCountAggregateOutputType> | number
          }
        }
      }
      Qualification: {
        payload: Prisma.$QualificationPayload<ExtArgs>
        fields: Prisma.QualificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QualificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QualificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>
          }
          findFirst: {
            args: Prisma.QualificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QualificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>
          }
          findMany: {
            args: Prisma.QualificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>[]
          }
          create: {
            args: Prisma.QualificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>
          }
          createMany: {
            args: Prisma.QualificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QualificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>[]
          }
          delete: {
            args: Prisma.QualificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>
          }
          update: {
            args: Prisma.QualificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>
          }
          deleteMany: {
            args: Prisma.QualificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QualificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.QualificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>[]
          }
          upsert: {
            args: Prisma.QualificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualificationPayload>
          }
          aggregate: {
            args: Prisma.QualificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualification>
          }
          groupBy: {
            args: Prisma.QualificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.QualificationCountArgs<ExtArgs>
            result: $Utils.Optional<QualificationCountAggregateOutputType> | number
          }
        }
      }
      Award: {
        payload: Prisma.$AwardPayload<ExtArgs>
        fields: Prisma.AwardFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AwardFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AwardFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>
          }
          findFirst: {
            args: Prisma.AwardFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AwardFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>
          }
          findMany: {
            args: Prisma.AwardFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>[]
          }
          create: {
            args: Prisma.AwardCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>
          }
          createMany: {
            args: Prisma.AwardCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AwardCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>[]
          }
          delete: {
            args: Prisma.AwardDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>
          }
          update: {
            args: Prisma.AwardUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>
          }
          deleteMany: {
            args: Prisma.AwardDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AwardUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AwardUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>[]
          }
          upsert: {
            args: Prisma.AwardUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AwardPayload>
          }
          aggregate: {
            args: Prisma.AwardAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAward>
          }
          groupBy: {
            args: Prisma.AwardGroupByArgs<ExtArgs>
            result: $Utils.Optional<AwardGroupByOutputType>[]
          }
          count: {
            args: Prisma.AwardCountArgs<ExtArgs>
            result: $Utils.Optional<AwardCountAggregateOutputType> | number
          }
        }
      }
      CandidateMedia: {
        payload: Prisma.$CandidateMediaPayload<ExtArgs>
        fields: Prisma.CandidateMediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CandidateMediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CandidateMediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>
          }
          findFirst: {
            args: Prisma.CandidateMediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CandidateMediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>
          }
          findMany: {
            args: Prisma.CandidateMediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>[]
          }
          create: {
            args: Prisma.CandidateMediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>
          }
          createMany: {
            args: Prisma.CandidateMediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CandidateMediaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>[]
          }
          delete: {
            args: Prisma.CandidateMediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>
          }
          update: {
            args: Prisma.CandidateMediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>
          }
          deleteMany: {
            args: Prisma.CandidateMediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CandidateMediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CandidateMediaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>[]
          }
          upsert: {
            args: Prisma.CandidateMediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidateMediaPayload>
          }
          aggregate: {
            args: Prisma.CandidateMediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidateMedia>
          }
          groupBy: {
            args: Prisma.CandidateMediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CandidateMediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CandidateMediaCountArgs<ExtArgs>
            result: $Utils.Optional<CandidateMediaCountAggregateOutputType> | number
          }
        }
      }
      JobDocument: {
        payload: Prisma.$JobDocumentPayload<ExtArgs>
        fields: Prisma.JobDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>
          }
          findFirst: {
            args: Prisma.JobDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>
          }
          findMany: {
            args: Prisma.JobDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>[]
          }
          create: {
            args: Prisma.JobDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>
          }
          createMany: {
            args: Prisma.JobDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>[]
          }
          delete: {
            args: Prisma.JobDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>
          }
          update: {
            args: Prisma.JobDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>
          }
          deleteMany: {
            args: Prisma.JobDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.JobDocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>[]
          }
          upsert: {
            args: Prisma.JobDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobDocumentPayload>
          }
          aggregate: {
            args: Prisma.JobDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobDocument>
          }
          groupBy: {
            args: Prisma.JobDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<JobDocumentCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    industry?: IndustryOmit
    skill?: SkillOmit
    user?: UserOmit
    session?: SessionOmit
    employer?: EmployerOmit
    candidate?: CandidateOmit
    job?: JobOmit
    jobSkill?: JobSkillOmit
    candidateSkill?: CandidateSkillOmit
    cV?: CVOmit
    application?: ApplicationOmit
    education?: EducationOmit
    workExperience?: WorkExperienceOmit
    project?: ProjectOmit
    qualification?: QualificationOmit
    award?: AwardOmit
    candidateMedia?: CandidateMediaOmit
    jobDocument?: JobDocumentOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type IndustryCountOutputType
   */

  export type IndustryCountOutputType = {
    jobs: number
  }

  export type IndustryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jobs?: boolean | IndustryCountOutputTypeCountJobsArgs
  }

  // Custom InputTypes
  /**
   * IndustryCountOutputType without action
   */
  export type IndustryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IndustryCountOutputType
     */
    select?: IndustryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * IndustryCountOutputType without action
   */
  export type IndustryCountOutputTypeCountJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobWhereInput
  }


  /**
   * Count Type SkillCountOutputType
   */

  export type SkillCountOutputType = {
    jobSkills: number
    candidateSkills: number
  }

  export type SkillCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jobSkills?: boolean | SkillCountOutputTypeCountJobSkillsArgs
    candidateSkills?: boolean | SkillCountOutputTypeCountCandidateSkillsArgs
  }

  // Custom InputTypes
  /**
   * SkillCountOutputType without action
   */
  export type SkillCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkillCountOutputType
     */
    select?: SkillCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SkillCountOutputType without action
   */
  export type SkillCountOutputTypeCountJobSkillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobSkillWhereInput
  }

  /**
   * SkillCountOutputType without action
   */
  export type SkillCountOutputTypeCountCandidateSkillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidateSkillWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    applicationsUpdated: number
    sessions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applicationsUpdated?: boolean | UserCountOutputTypeCountApplicationsUpdatedArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApplicationsUpdatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }


  /**
   * Count Type EmployerCountOutputType
   */

  export type EmployerCountOutputType = {
    jobs: number
  }

  export type EmployerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jobs?: boolean | EmployerCountOutputTypeCountJobsArgs
  }

  // Custom InputTypes
  /**
   * EmployerCountOutputType without action
   */
  export type EmployerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployerCountOutputType
     */
    select?: EmployerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmployerCountOutputType without action
   */
  export type EmployerCountOutputTypeCountJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobWhereInput
  }


  /**
   * Count Type CandidateCountOutputType
   */

  export type CandidateCountOutputType = {
    skills: number
    cvs: number
    applications: number
    education: number
    workExperience: number
    projects: number
    qualifications: number
    awards: number
    media: number
  }

  export type CandidateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    skills?: boolean | CandidateCountOutputTypeCountSkillsArgs
    cvs?: boolean | CandidateCountOutputTypeCountCvsArgs
    applications?: boolean | CandidateCountOutputTypeCountApplicationsArgs
    education?: boolean | CandidateCountOutputTypeCountEducationArgs
    workExperience?: boolean | CandidateCountOutputTypeCountWorkExperienceArgs
    projects?: boolean | CandidateCountOutputTypeCountProjectsArgs
    qualifications?: boolean | CandidateCountOutputTypeCountQualificationsArgs
    awards?: boolean | CandidateCountOutputTypeCountAwardsArgs
    media?: boolean | CandidateCountOutputTypeCountMediaArgs
  }

  // Custom InputTypes
  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateCountOutputType
     */
    select?: CandidateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountSkillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidateSkillWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountCvsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CVWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountEducationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EducationWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountWorkExperienceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorkExperienceWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountProjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountQualificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualificationWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountAwardsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AwardWhereInput
  }

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountMediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidateMediaWhereInput
  }


  /**
   * Count Type JobCountOutputType
   */

  export type JobCountOutputType = {
    skills: number
    applications: number
    documents: number
  }

  export type JobCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    skills?: boolean | JobCountOutputTypeCountSkillsArgs
    applications?: boolean | JobCountOutputTypeCountApplicationsArgs
    documents?: boolean | JobCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes
  /**
   * JobCountOutputType without action
   */
  export type JobCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCountOutputType
     */
    select?: JobCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JobCountOutputType without action
   */
  export type JobCountOutputTypeCountSkillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobSkillWhereInput
  }

  /**
   * JobCountOutputType without action
   */
  export type JobCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * JobCountOutputType without action
   */
  export type JobCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobDocumentWhereInput
  }


  /**
   * Count Type CVCountOutputType
   */

  export type CVCountOutputType = {
    applications: number
  }

  export type CVCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applications?: boolean | CVCountOutputTypeCountApplicationsArgs
  }

  // Custom InputTypes
  /**
   * CVCountOutputType without action
   */
  export type CVCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CVCountOutputType
     */
    select?: CVCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CVCountOutputType without action
   */
  export type CVCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Industry
   */

  export type AggregateIndustry = {
    _count: IndustryCountAggregateOutputType | null
    _avg: IndustryAvgAggregateOutputType | null
    _sum: IndustrySumAggregateOutputType | null
    _min: IndustryMinAggregateOutputType | null
    _max: IndustryMaxAggregateOutputType | null
  }

  export type IndustryAvgAggregateOutputType = {
    id: number | null
  }

  export type IndustrySumAggregateOutputType = {
    id: number | null
  }

  export type IndustryMinAggregateOutputType = {
    id: number | null
    name: string | null
    nameJp: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IndustryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    nameJp: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IndustryCountAggregateOutputType = {
    id: number
    name: number
    nameJp: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type IndustryAvgAggregateInputType = {
    id?: true
  }

  export type IndustrySumAggregateInputType = {
    id?: true
  }

  export type IndustryMinAggregateInputType = {
    id?: true
    name?: true
    nameJp?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IndustryMaxAggregateInputType = {
    id?: true
    name?: true
    nameJp?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IndustryCountAggregateInputType = {
    id?: true
    name?: true
    nameJp?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type IndustryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Industry to aggregate.
     */
    where?: IndustryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Industries to fetch.
     */
    orderBy?: IndustryOrderByWithRelationInput | IndustryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IndustryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Industries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Industries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Industries
    **/
    _count?: true | IndustryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IndustryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IndustrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IndustryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IndustryMaxAggregateInputType
  }

  export type GetIndustryAggregateType<T extends IndustryAggregateArgs> = {
        [P in keyof T & keyof AggregateIndustry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIndustry[P]>
      : GetScalarType<T[P], AggregateIndustry[P]>
  }




  export type IndustryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IndustryWhereInput
    orderBy?: IndustryOrderByWithAggregationInput | IndustryOrderByWithAggregationInput[]
    by: IndustryScalarFieldEnum[] | IndustryScalarFieldEnum
    having?: IndustryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IndustryCountAggregateInputType | true
    _avg?: IndustryAvgAggregateInputType
    _sum?: IndustrySumAggregateInputType
    _min?: IndustryMinAggregateInputType
    _max?: IndustryMaxAggregateInputType
  }

  export type IndustryGroupByOutputType = {
    id: number
    name: string
    nameJp: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: IndustryCountAggregateOutputType | null
    _avg: IndustryAvgAggregateOutputType | null
    _sum: IndustrySumAggregateOutputType | null
    _min: IndustryMinAggregateOutputType | null
    _max: IndustryMaxAggregateOutputType | null
  }

  type GetIndustryGroupByPayload<T extends IndustryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IndustryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IndustryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IndustryGroupByOutputType[P]>
            : GetScalarType<T[P], IndustryGroupByOutputType[P]>
        }
      >
    >


  export type IndustrySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    nameJp?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    jobs?: boolean | Industry$jobsArgs<ExtArgs>
    _count?: boolean | IndustryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["industry"]>

  export type IndustrySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    nameJp?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["industry"]>

  export type IndustrySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    nameJp?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["industry"]>

  export type IndustrySelectScalar = {
    id?: boolean
    name?: boolean
    nameJp?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type IndustryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "nameJp" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["industry"]>
  export type IndustryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jobs?: boolean | Industry$jobsArgs<ExtArgs>
    _count?: boolean | IndustryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type IndustryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type IndustryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $IndustryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Industry"
    objects: {
      jobs: Prisma.$JobPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID ngành nghề
       */
      id: number
      /**
       * Tên ngành nghề (Tiếng Anh/Việt)
       */
      name: string
      /**
       * Tên ngành nghề (Tiếng Nhật)
       */
      nameJp: string | null
      /**
       * Mô tả ngành nghề
       */
      description: string | null
      /**
       * Thời gian tạo
       */
      createdAt: Date
      /**
       * Thời gian cập nhật
       */
      updatedAt: Date
    }, ExtArgs["result"]["industry"]>
    composites: {}
  }

  type IndustryGetPayload<S extends boolean | null | undefined | IndustryDefaultArgs> = $Result.GetResult<Prisma.$IndustryPayload, S>

  type IndustryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<IndustryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IndustryCountAggregateInputType | true
    }

  export interface IndustryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Industry'], meta: { name: 'Industry' } }
    /**
     * Find zero or one Industry that matches the filter.
     * @param {IndustryFindUniqueArgs} args - Arguments to find a Industry
     * @example
     * // Get one Industry
     * const industry = await prisma.industry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IndustryFindUniqueArgs>(args: SelectSubset<T, IndustryFindUniqueArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Industry that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {IndustryFindUniqueOrThrowArgs} args - Arguments to find a Industry
     * @example
     * // Get one Industry
     * const industry = await prisma.industry.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IndustryFindUniqueOrThrowArgs>(args: SelectSubset<T, IndustryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Industry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndustryFindFirstArgs} args - Arguments to find a Industry
     * @example
     * // Get one Industry
     * const industry = await prisma.industry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IndustryFindFirstArgs>(args?: SelectSubset<T, IndustryFindFirstArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Industry that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndustryFindFirstOrThrowArgs} args - Arguments to find a Industry
     * @example
     * // Get one Industry
     * const industry = await prisma.industry.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IndustryFindFirstOrThrowArgs>(args?: SelectSubset<T, IndustryFindFirstOrThrowArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Industries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndustryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Industries
     * const industries = await prisma.industry.findMany()
     * 
     * // Get first 10 Industries
     * const industries = await prisma.industry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const industryWithIdOnly = await prisma.industry.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IndustryFindManyArgs>(args?: SelectSubset<T, IndustryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Industry.
     * @param {IndustryCreateArgs} args - Arguments to create a Industry.
     * @example
     * // Create one Industry
     * const Industry = await prisma.industry.create({
     *   data: {
     *     // ... data to create a Industry
     *   }
     * })
     * 
     */
    create<T extends IndustryCreateArgs>(args: SelectSubset<T, IndustryCreateArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Industries.
     * @param {IndustryCreateManyArgs} args - Arguments to create many Industries.
     * @example
     * // Create many Industries
     * const industry = await prisma.industry.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IndustryCreateManyArgs>(args?: SelectSubset<T, IndustryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Industries and returns the data saved in the database.
     * @param {IndustryCreateManyAndReturnArgs} args - Arguments to create many Industries.
     * @example
     * // Create many Industries
     * const industry = await prisma.industry.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Industries and only return the `id`
     * const industryWithIdOnly = await prisma.industry.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IndustryCreateManyAndReturnArgs>(args?: SelectSubset<T, IndustryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Industry.
     * @param {IndustryDeleteArgs} args - Arguments to delete one Industry.
     * @example
     * // Delete one Industry
     * const Industry = await prisma.industry.delete({
     *   where: {
     *     // ... filter to delete one Industry
     *   }
     * })
     * 
     */
    delete<T extends IndustryDeleteArgs>(args: SelectSubset<T, IndustryDeleteArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Industry.
     * @param {IndustryUpdateArgs} args - Arguments to update one Industry.
     * @example
     * // Update one Industry
     * const industry = await prisma.industry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IndustryUpdateArgs>(args: SelectSubset<T, IndustryUpdateArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Industries.
     * @param {IndustryDeleteManyArgs} args - Arguments to filter Industries to delete.
     * @example
     * // Delete a few Industries
     * const { count } = await prisma.industry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IndustryDeleteManyArgs>(args?: SelectSubset<T, IndustryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Industries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndustryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Industries
     * const industry = await prisma.industry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IndustryUpdateManyArgs>(args: SelectSubset<T, IndustryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Industries and returns the data updated in the database.
     * @param {IndustryUpdateManyAndReturnArgs} args - Arguments to update many Industries.
     * @example
     * // Update many Industries
     * const industry = await prisma.industry.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Industries and only return the `id`
     * const industryWithIdOnly = await prisma.industry.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends IndustryUpdateManyAndReturnArgs>(args: SelectSubset<T, IndustryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Industry.
     * @param {IndustryUpsertArgs} args - Arguments to update or create a Industry.
     * @example
     * // Update or create a Industry
     * const industry = await prisma.industry.upsert({
     *   create: {
     *     // ... data to create a Industry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Industry we want to update
     *   }
     * })
     */
    upsert<T extends IndustryUpsertArgs>(args: SelectSubset<T, IndustryUpsertArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Industries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndustryCountArgs} args - Arguments to filter Industries to count.
     * @example
     * // Count the number of Industries
     * const count = await prisma.industry.count({
     *   where: {
     *     // ... the filter for the Industries we want to count
     *   }
     * })
    **/
    count<T extends IndustryCountArgs>(
      args?: Subset<T, IndustryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IndustryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Industry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndustryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IndustryAggregateArgs>(args: Subset<T, IndustryAggregateArgs>): Prisma.PrismaPromise<GetIndustryAggregateType<T>>

    /**
     * Group by Industry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndustryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IndustryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IndustryGroupByArgs['orderBy'] }
        : { orderBy?: IndustryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IndustryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIndustryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Industry model
   */
  readonly fields: IndustryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Industry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IndustryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    jobs<T extends Industry$jobsArgs<ExtArgs> = {}>(args?: Subset<T, Industry$jobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Industry model
   */
  interface IndustryFieldRefs {
    readonly id: FieldRef<"Industry", 'Int'>
    readonly name: FieldRef<"Industry", 'String'>
    readonly nameJp: FieldRef<"Industry", 'String'>
    readonly description: FieldRef<"Industry", 'String'>
    readonly createdAt: FieldRef<"Industry", 'DateTime'>
    readonly updatedAt: FieldRef<"Industry", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Industry findUnique
   */
  export type IndustryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * Filter, which Industry to fetch.
     */
    where: IndustryWhereUniqueInput
  }

  /**
   * Industry findUniqueOrThrow
   */
  export type IndustryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * Filter, which Industry to fetch.
     */
    where: IndustryWhereUniqueInput
  }

  /**
   * Industry findFirst
   */
  export type IndustryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * Filter, which Industry to fetch.
     */
    where?: IndustryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Industries to fetch.
     */
    orderBy?: IndustryOrderByWithRelationInput | IndustryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Industries.
     */
    cursor?: IndustryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Industries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Industries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Industries.
     */
    distinct?: IndustryScalarFieldEnum | IndustryScalarFieldEnum[]
  }

  /**
   * Industry findFirstOrThrow
   */
  export type IndustryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * Filter, which Industry to fetch.
     */
    where?: IndustryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Industries to fetch.
     */
    orderBy?: IndustryOrderByWithRelationInput | IndustryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Industries.
     */
    cursor?: IndustryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Industries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Industries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Industries.
     */
    distinct?: IndustryScalarFieldEnum | IndustryScalarFieldEnum[]
  }

  /**
   * Industry findMany
   */
  export type IndustryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * Filter, which Industries to fetch.
     */
    where?: IndustryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Industries to fetch.
     */
    orderBy?: IndustryOrderByWithRelationInput | IndustryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Industries.
     */
    cursor?: IndustryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Industries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Industries.
     */
    skip?: number
    distinct?: IndustryScalarFieldEnum | IndustryScalarFieldEnum[]
  }

  /**
   * Industry create
   */
  export type IndustryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * The data needed to create a Industry.
     */
    data: XOR<IndustryCreateInput, IndustryUncheckedCreateInput>
  }

  /**
   * Industry createMany
   */
  export type IndustryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Industries.
     */
    data: IndustryCreateManyInput | IndustryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Industry createManyAndReturn
   */
  export type IndustryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * The data used to create many Industries.
     */
    data: IndustryCreateManyInput | IndustryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Industry update
   */
  export type IndustryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * The data needed to update a Industry.
     */
    data: XOR<IndustryUpdateInput, IndustryUncheckedUpdateInput>
    /**
     * Choose, which Industry to update.
     */
    where: IndustryWhereUniqueInput
  }

  /**
   * Industry updateMany
   */
  export type IndustryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Industries.
     */
    data: XOR<IndustryUpdateManyMutationInput, IndustryUncheckedUpdateManyInput>
    /**
     * Filter which Industries to update
     */
    where?: IndustryWhereInput
    /**
     * Limit how many Industries to update.
     */
    limit?: number
  }

  /**
   * Industry updateManyAndReturn
   */
  export type IndustryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * The data used to update Industries.
     */
    data: XOR<IndustryUpdateManyMutationInput, IndustryUncheckedUpdateManyInput>
    /**
     * Filter which Industries to update
     */
    where?: IndustryWhereInput
    /**
     * Limit how many Industries to update.
     */
    limit?: number
  }

  /**
   * Industry upsert
   */
  export type IndustryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * The filter to search for the Industry to update in case it exists.
     */
    where: IndustryWhereUniqueInput
    /**
     * In case the Industry found by the `where` argument doesn't exist, create a new Industry with this data.
     */
    create: XOR<IndustryCreateInput, IndustryUncheckedCreateInput>
    /**
     * In case the Industry was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IndustryUpdateInput, IndustryUncheckedUpdateInput>
  }

  /**
   * Industry delete
   */
  export type IndustryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    /**
     * Filter which Industry to delete.
     */
    where: IndustryWhereUniqueInput
  }

  /**
   * Industry deleteMany
   */
  export type IndustryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Industries to delete
     */
    where?: IndustryWhereInput
    /**
     * Limit how many Industries to delete.
     */
    limit?: number
  }

  /**
   * Industry.jobs
   */
  export type Industry$jobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    where?: JobWhereInput
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    cursor?: JobWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Industry without action
   */
  export type IndustryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
  }


  /**
   * Model Skill
   */

  export type AggregateSkill = {
    _count: SkillCountAggregateOutputType | null
    _avg: SkillAvgAggregateOutputType | null
    _sum: SkillSumAggregateOutputType | null
    _min: SkillMinAggregateOutputType | null
    _max: SkillMaxAggregateOutputType | null
  }

  export type SkillAvgAggregateOutputType = {
    id: number | null
  }

  export type SkillSumAggregateOutputType = {
    id: number | null
  }

  export type SkillMinAggregateOutputType = {
    id: number | null
    name: string | null
    nameJp: string | null
    category: $Enums.SkillCategory | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SkillMaxAggregateOutputType = {
    id: number | null
    name: string | null
    nameJp: string | null
    category: $Enums.SkillCategory | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SkillCountAggregateOutputType = {
    id: number
    name: number
    nameJp: number
    category: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SkillAvgAggregateInputType = {
    id?: true
  }

  export type SkillSumAggregateInputType = {
    id?: true
  }

  export type SkillMinAggregateInputType = {
    id?: true
    name?: true
    nameJp?: true
    category?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SkillMaxAggregateInputType = {
    id?: true
    name?: true
    nameJp?: true
    category?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SkillCountAggregateInputType = {
    id?: true
    name?: true
    nameJp?: true
    category?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SkillAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Skill to aggregate.
     */
    where?: SkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Skills to fetch.
     */
    orderBy?: SkillOrderByWithRelationInput | SkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Skills
    **/
    _count?: true | SkillCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SkillAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SkillSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkillMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkillMaxAggregateInputType
  }

  export type GetSkillAggregateType<T extends SkillAggregateArgs> = {
        [P in keyof T & keyof AggregateSkill]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkill[P]>
      : GetScalarType<T[P], AggregateSkill[P]>
  }




  export type SkillGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkillWhereInput
    orderBy?: SkillOrderByWithAggregationInput | SkillOrderByWithAggregationInput[]
    by: SkillScalarFieldEnum[] | SkillScalarFieldEnum
    having?: SkillScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkillCountAggregateInputType | true
    _avg?: SkillAvgAggregateInputType
    _sum?: SkillSumAggregateInputType
    _min?: SkillMinAggregateInputType
    _max?: SkillMaxAggregateInputType
  }

  export type SkillGroupByOutputType = {
    id: number
    name: string
    nameJp: string | null
    category: $Enums.SkillCategory | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: SkillCountAggregateOutputType | null
    _avg: SkillAvgAggregateOutputType | null
    _sum: SkillSumAggregateOutputType | null
    _min: SkillMinAggregateOutputType | null
    _max: SkillMaxAggregateOutputType | null
  }

  type GetSkillGroupByPayload<T extends SkillGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkillGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkillGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkillGroupByOutputType[P]>
            : GetScalarType<T[P], SkillGroupByOutputType[P]>
        }
      >
    >


  export type SkillSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    nameJp?: boolean
    category?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    jobSkills?: boolean | Skill$jobSkillsArgs<ExtArgs>
    candidateSkills?: boolean | Skill$candidateSkillsArgs<ExtArgs>
    _count?: boolean | SkillCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skill"]>

  export type SkillSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    nameJp?: boolean
    category?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["skill"]>

  export type SkillSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    nameJp?: boolean
    category?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["skill"]>

  export type SkillSelectScalar = {
    id?: boolean
    name?: boolean
    nameJp?: boolean
    category?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SkillOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "nameJp" | "category" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["skill"]>
  export type SkillInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jobSkills?: boolean | Skill$jobSkillsArgs<ExtArgs>
    candidateSkills?: boolean | Skill$candidateSkillsArgs<ExtArgs>
    _count?: boolean | SkillCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SkillIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SkillIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SkillPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Skill"
    objects: {
      jobSkills: Prisma.$JobSkillPayload<ExtArgs>[]
      candidateSkills: Prisma.$CandidateSkillPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * ID kỹ năng
       */
      id: number
      /**
       * Tên kỹ năng (Tiếng Anh/Việt)
       */
      name: string
      /**
       * Tên kỹ năng (Tiếng Nhật)
       */
      nameJp: string | null
      /**
       * Danh mục kỹ năng (Tùy chọn, sử dụng Enum chung chung hơn)
       */
      category: $Enums.SkillCategory | null
      /**
       * Mô tả kỹ năng
       */
      description: string | null
      /**
       * Thời gian tạo
       */
      createdAt: Date
      /**
       * Thời gian cập nhật
       */
      updatedAt: Date
    }, ExtArgs["result"]["skill"]>
    composites: {}
  }

  type SkillGetPayload<S extends boolean | null | undefined | SkillDefaultArgs> = $Result.GetResult<Prisma.$SkillPayload, S>

  type SkillCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SkillFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkillCountAggregateInputType | true
    }

  export interface SkillDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Skill'], meta: { name: 'Skill' } }
    /**
     * Find zero or one Skill that matches the filter.
     * @param {SkillFindUniqueArgs} args - Arguments to find a Skill
     * @example
     * // Get one Skill
     * const skill = await prisma.skill.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SkillFindUniqueArgs>(args: SelectSubset<T, SkillFindUniqueArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Skill that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SkillFindUniqueOrThrowArgs} args - Arguments to find a Skill
     * @example
     * // Get one Skill
     * const skill = await prisma.skill.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SkillFindUniqueOrThrowArgs>(args: SelectSubset<T, SkillFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Skill that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillFindFirstArgs} args - Arguments to find a Skill
     * @example
     * // Get one Skill
     * const skill = await prisma.skill.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SkillFindFirstArgs>(args?: SelectSubset<T, SkillFindFirstArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Skill that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillFindFirstOrThrowArgs} args - Arguments to find a Skill
     * @example
     * // Get one Skill
     * const skill = await prisma.skill.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SkillFindFirstOrThrowArgs>(args?: SelectSubset<T, SkillFindFirstOrThrowArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Skills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Skills
     * const skills = await prisma.skill.findMany()
     * 
     * // Get first 10 Skills
     * const skills = await prisma.skill.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const skillWithIdOnly = await prisma.skill.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SkillFindManyArgs>(args?: SelectSubset<T, SkillFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Skill.
     * @param {SkillCreateArgs} args - Arguments to create a Skill.
     * @example
     * // Create one Skill
     * const Skill = await prisma.skill.create({
     *   data: {
     *     // ... data to create a Skill
     *   }
     * })
     * 
     */
    create<T extends SkillCreateArgs>(args: SelectSubset<T, SkillCreateArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Skills.
     * @param {SkillCreateManyArgs} args - Arguments to create many Skills.
     * @example
     * // Create many Skills
     * const skill = await prisma.skill.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SkillCreateManyArgs>(args?: SelectSubset<T, SkillCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Skills and returns the data saved in the database.
     * @param {SkillCreateManyAndReturnArgs} args - Arguments to create many Skills.
     * @example
     * // Create many Skills
     * const skill = await prisma.skill.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Skills and only return the `id`
     * const skillWithIdOnly = await prisma.skill.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SkillCreateManyAndReturnArgs>(args?: SelectSubset<T, SkillCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Skill.
     * @param {SkillDeleteArgs} args - Arguments to delete one Skill.
     * @example
     * // Delete one Skill
     * const Skill = await prisma.skill.delete({
     *   where: {
     *     // ... filter to delete one Skill
     *   }
     * })
     * 
     */
    delete<T extends SkillDeleteArgs>(args: SelectSubset<T, SkillDeleteArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Skill.
     * @param {SkillUpdateArgs} args - Arguments to update one Skill.
     * @example
     * // Update one Skill
     * const skill = await prisma.skill.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SkillUpdateArgs>(args: SelectSubset<T, SkillUpdateArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Skills.
     * @param {SkillDeleteManyArgs} args - Arguments to filter Skills to delete.
     * @example
     * // Delete a few Skills
     * const { count } = await prisma.skill.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SkillDeleteManyArgs>(args?: SelectSubset<T, SkillDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Skills
     * const skill = await prisma.skill.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SkillUpdateManyArgs>(args: SelectSubset<T, SkillUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Skills and returns the data updated in the database.
     * @param {SkillUpdateManyAndReturnArgs} args - Arguments to update many Skills.
     * @example
     * // Update many Skills
     * const skill = await prisma.skill.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Skills and only return the `id`
     * const skillWithIdOnly = await prisma.skill.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SkillUpdateManyAndReturnArgs>(args: SelectSubset<T, SkillUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Skill.
     * @param {SkillUpsertArgs} args - Arguments to update or create a Skill.
     * @example
     * // Update or create a Skill
     * const skill = await prisma.skill.upsert({
     *   create: {
     *     // ... data to create a Skill
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Skill we want to update
     *   }
     * })
     */
    upsert<T extends SkillUpsertArgs>(args: SelectSubset<T, SkillUpsertArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Skills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillCountArgs} args - Arguments to filter Skills to count.
     * @example
     * // Count the number of Skills
     * const count = await prisma.skill.count({
     *   where: {
     *     // ... the filter for the Skills we want to count
     *   }
     * })
    **/
    count<T extends SkillCountArgs>(
      args?: Subset<T, SkillCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkillCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Skill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkillAggregateArgs>(args: Subset<T, SkillAggregateArgs>): Prisma.PrismaPromise<GetSkillAggregateType<T>>

    /**
     * Group by Skill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkillGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SkillGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SkillGroupByArgs['orderBy'] }
        : { orderBy?: SkillGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SkillGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkillGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Skill model
   */
  readonly fields: SkillFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Skill.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SkillClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    jobSkills<T extends Skill$jobSkillsArgs<ExtArgs> = {}>(args?: Subset<T, Skill$jobSkillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    candidateSkills<T extends Skill$candidateSkillsArgs<ExtArgs> = {}>(args?: Subset<T, Skill$candidateSkillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Skill model
   */
  interface SkillFieldRefs {
    readonly id: FieldRef<"Skill", 'Int'>
    readonly name: FieldRef<"Skill", 'String'>
    readonly nameJp: FieldRef<"Skill", 'String'>
    readonly category: FieldRef<"Skill", 'SkillCategory'>
    readonly description: FieldRef<"Skill", 'String'>
    readonly createdAt: FieldRef<"Skill", 'DateTime'>
    readonly updatedAt: FieldRef<"Skill", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Skill findUnique
   */
  export type SkillFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * Filter, which Skill to fetch.
     */
    where: SkillWhereUniqueInput
  }

  /**
   * Skill findUniqueOrThrow
   */
  export type SkillFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * Filter, which Skill to fetch.
     */
    where: SkillWhereUniqueInput
  }

  /**
   * Skill findFirst
   */
  export type SkillFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * Filter, which Skill to fetch.
     */
    where?: SkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Skills to fetch.
     */
    orderBy?: SkillOrderByWithRelationInput | SkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Skills.
     */
    cursor?: SkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Skills.
     */
    distinct?: SkillScalarFieldEnum | SkillScalarFieldEnum[]
  }

  /**
   * Skill findFirstOrThrow
   */
  export type SkillFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * Filter, which Skill to fetch.
     */
    where?: SkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Skills to fetch.
     */
    orderBy?: SkillOrderByWithRelationInput | SkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Skills.
     */
    cursor?: SkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Skills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Skills.
     */
    distinct?: SkillScalarFieldEnum | SkillScalarFieldEnum[]
  }

  /**
   * Skill findMany
   */
  export type SkillFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * Filter, which Skills to fetch.
     */
    where?: SkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Skills to fetch.
     */
    orderBy?: SkillOrderByWithRelationInput | SkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Skills.
     */
    cursor?: SkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Skills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Skills.
     */
    skip?: number
    distinct?: SkillScalarFieldEnum | SkillScalarFieldEnum[]
  }

  /**
   * Skill create
   */
  export type SkillCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * The data needed to create a Skill.
     */
    data: XOR<SkillCreateInput, SkillUncheckedCreateInput>
  }

  /**
   * Skill createMany
   */
  export type SkillCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Skills.
     */
    data: SkillCreateManyInput | SkillCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Skill createManyAndReturn
   */
  export type SkillCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * The data used to create many Skills.
     */
    data: SkillCreateManyInput | SkillCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Skill update
   */
  export type SkillUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * The data needed to update a Skill.
     */
    data: XOR<SkillUpdateInput, SkillUncheckedUpdateInput>
    /**
     * Choose, which Skill to update.
     */
    where: SkillWhereUniqueInput
  }

  /**
   * Skill updateMany
   */
  export type SkillUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Skills.
     */
    data: XOR<SkillUpdateManyMutationInput, SkillUncheckedUpdateManyInput>
    /**
     * Filter which Skills to update
     */
    where?: SkillWhereInput
    /**
     * Limit how many Skills to update.
     */
    limit?: number
  }

  /**
   * Skill updateManyAndReturn
   */
  export type SkillUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * The data used to update Skills.
     */
    data: XOR<SkillUpdateManyMutationInput, SkillUncheckedUpdateManyInput>
    /**
     * Filter which Skills to update
     */
    where?: SkillWhereInput
    /**
     * Limit how many Skills to update.
     */
    limit?: number
  }

  /**
   * Skill upsert
   */
  export type SkillUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * The filter to search for the Skill to update in case it exists.
     */
    where: SkillWhereUniqueInput
    /**
     * In case the Skill found by the `where` argument doesn't exist, create a new Skill with this data.
     */
    create: XOR<SkillCreateInput, SkillUncheckedCreateInput>
    /**
     * In case the Skill was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SkillUpdateInput, SkillUncheckedUpdateInput>
  }

  /**
   * Skill delete
   */
  export type SkillDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
    /**
     * Filter which Skill to delete.
     */
    where: SkillWhereUniqueInput
  }

  /**
   * Skill deleteMany
   */
  export type SkillDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Skills to delete
     */
    where?: SkillWhereInput
    /**
     * Limit how many Skills to delete.
     */
    limit?: number
  }

  /**
   * Skill.jobSkills
   */
  export type Skill$jobSkillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    where?: JobSkillWhereInput
    orderBy?: JobSkillOrderByWithRelationInput | JobSkillOrderByWithRelationInput[]
    cursor?: JobSkillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobSkillScalarFieldEnum | JobSkillScalarFieldEnum[]
  }

  /**
   * Skill.candidateSkills
   */
  export type Skill$candidateSkillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    where?: CandidateSkillWhereInput
    orderBy?: CandidateSkillOrderByWithRelationInput | CandidateSkillOrderByWithRelationInput[]
    cursor?: CandidateSkillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidateSkillScalarFieldEnum | CandidateSkillScalarFieldEnum[]
  }

  /**
   * Skill without action
   */
  export type SkillDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Skill
     */
    select?: SkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Skill
     */
    omit?: SkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkillInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    email: string | null
    passwordHash: string | null
    fullName: string | null
    phoneNumber: string | null
    userType: $Enums.UserType | null
    avatarUrl: string | null
    isActive: boolean | null
    isEmailVerified: boolean | null
    emailVerifyToken: string | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    email: string | null
    passwordHash: string | null
    fullName: string | null
    phoneNumber: string | null
    userType: $Enums.UserType | null
    avatarUrl: string | null
    isActive: boolean | null
    isEmailVerified: boolean | null
    emailVerifyToken: string | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    passwordHash: number
    fullName: number
    phoneNumber: number
    userType: number
    avatarUrl: number
    isActive: number
    isEmailVerified: number
    emailVerifyToken: number
    passwordResetToken: number
    passwordResetExpires: number
    lastLogin: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    fullName?: true
    phoneNumber?: true
    userType?: true
    avatarUrl?: true
    isActive?: true
    isEmailVerified?: true
    emailVerifyToken?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    fullName?: true
    phoneNumber?: true
    userType?: true
    avatarUrl?: true
    isActive?: true
    isEmailVerified?: true
    emailVerifyToken?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    fullName?: true
    phoneNumber?: true
    userType?: true
    avatarUrl?: true
    isActive?: true
    isEmailVerified?: true
    emailVerifyToken?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    email: string
    passwordHash: string
    fullName: string
    phoneNumber: string | null
    userType: $Enums.UserType
    avatarUrl: string | null
    isActive: boolean
    isEmailVerified: boolean
    emailVerifyToken: string | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    lastLogin: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    phoneNumber?: boolean
    userType?: boolean
    avatarUrl?: boolean
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employer?: boolean | User$employerArgs<ExtArgs>
    candidate?: boolean | User$candidateArgs<ExtArgs>
    applicationsUpdated?: boolean | User$applicationsUpdatedArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    phoneNumber?: boolean
    userType?: boolean
    avatarUrl?: boolean
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    phoneNumber?: boolean
    userType?: boolean
    avatarUrl?: boolean
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    phoneNumber?: boolean
    userType?: boolean
    avatarUrl?: boolean
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "passwordHash" | "fullName" | "phoneNumber" | "userType" | "avatarUrl" | "isActive" | "isEmailVerified" | "emailVerifyToken" | "passwordResetToken" | "passwordResetExpires" | "lastLogin" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employer?: boolean | User$employerArgs<ExtArgs>
    candidate?: boolean | User$candidateArgs<ExtArgs>
    applicationsUpdated?: boolean | User$applicationsUpdatedArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      employer: Prisma.$EmployerPayload<ExtArgs> | null
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      applicationsUpdated: Prisma.$ApplicationPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      passwordHash: string
      fullName: string
      phoneNumber: string | null
      userType: $Enums.UserType
      avatarUrl: string | null
      isActive: boolean
      isEmailVerified: boolean
      emailVerifyToken: string | null
      passwordResetToken: string | null
      passwordResetExpires: Date | null
      lastLogin: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employer<T extends User$employerArgs<ExtArgs> = {}>(args?: Subset<T, User$employerArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    candidate<T extends User$candidateArgs<ExtArgs> = {}>(args?: Subset<T, User$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    applicationsUpdated<T extends User$applicationsUpdatedArgs<ExtArgs> = {}>(args?: Subset<T, User$applicationsUpdatedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly email: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly fullName: FieldRef<"User", 'String'>
    readonly phoneNumber: FieldRef<"User", 'String'>
    readonly userType: FieldRef<"User", 'UserType'>
    readonly avatarUrl: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly isEmailVerified: FieldRef<"User", 'Boolean'>
    readonly emailVerifyToken: FieldRef<"User", 'String'>
    readonly passwordResetToken: FieldRef<"User", 'String'>
    readonly passwordResetExpires: FieldRef<"User", 'DateTime'>
    readonly lastLogin: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.employer
   */
  export type User$employerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    where?: EmployerWhereInput
  }

  /**
   * User.candidate
   */
  export type User$candidateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }

  /**
   * User.applicationsUpdated
   */
  export type User$applicationsUpdatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionAvgAggregateOutputType = {
    userId: number | null
  }

  export type SessionSumAggregateOutputType = {
    userId: number | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: number | null
    expiresAt: Date | null
    createdAt: Date | null
    ipAddress: string | null
    userAgent: string | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: number | null
    expiresAt: Date | null
    createdAt: Date | null
    ipAddress: string | null
    userAgent: string | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    userId: number
    expiresAt: number
    createdAt: number
    ipAddress: number
    userAgent: number
    _all: number
  }


  export type SessionAvgAggregateInputType = {
    userId?: true
  }

  export type SessionSumAggregateInputType = {
    userId?: true
  }

  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    ipAddress?: true
    userAgent?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    ipAddress?: true
    userAgent?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    ipAddress?: true
    userAgent?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SessionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SessionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _avg?: SessionAvgAggregateInputType
    _sum?: SessionSumAggregateInputType
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    userId: number
    expiresAt: Date
    createdAt: Date
    ipAddress: string | null
    userAgent: string | null
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sessionToken" | "userId" | "expiresAt" | "createdAt" | "ipAddress" | "userAgent", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      userId: number
      expiresAt: Date
      createdAt: Date
      ipAddress: string | null
      userAgent: string | null
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'Int'>
    readonly expiresAt: FieldRef<"Session", 'DateTime'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly ipAddress: FieldRef<"Session", 'String'>
    readonly userAgent: FieldRef<"Session", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model Employer
   */

  export type AggregateEmployer = {
    _count: EmployerCountAggregateOutputType | null
    _avg: EmployerAvgAggregateOutputType | null
    _sum: EmployerSumAggregateOutputType | null
    _min: EmployerMinAggregateOutputType | null
    _max: EmployerMaxAggregateOutputType | null
  }

  export type EmployerAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type EmployerSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type EmployerMinAggregateOutputType = {
    id: number | null
    userId: number | null
    companyName: string | null
    companyNameKana: string | null
    companyNameJp: string | null
    companyLogoUrl: string | null
    companyWebsite: string | null
    companyDescription: string | null
    companyDescriptionJp: string | null
    businessOverview: string | null
    businessOverviewJp: string | null
    companyAddress: string | null
    companyAddressJp: string | null
    companyPhone: string | null
    establishmentDate: Date | null
    representativeName: string | null
    representativeTitle: string | null
    vietnamBranchExists: boolean | null
    companySize: $Enums.CompanySizeType | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EmployerMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    companyName: string | null
    companyNameKana: string | null
    companyNameJp: string | null
    companyLogoUrl: string | null
    companyWebsite: string | null
    companyDescription: string | null
    companyDescriptionJp: string | null
    businessOverview: string | null
    businessOverviewJp: string | null
    companyAddress: string | null
    companyAddressJp: string | null
    companyPhone: string | null
    establishmentDate: Date | null
    representativeName: string | null
    representativeTitle: string | null
    vietnamBranchExists: boolean | null
    companySize: $Enums.CompanySizeType | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EmployerCountAggregateOutputType = {
    id: number
    userId: number
    companyName: number
    companyNameKana: number
    companyNameJp: number
    companyLogoUrl: number
    companyWebsite: number
    companyDescription: number
    companyDescriptionJp: number
    businessOverview: number
    businessOverviewJp: number
    companyAddress: number
    companyAddressJp: number
    companyPhone: number
    establishmentDate: number
    representativeName: number
    representativeTitle: number
    vietnamBranchExists: number
    companySize: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EmployerAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type EmployerSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type EmployerMinAggregateInputType = {
    id?: true
    userId?: true
    companyName?: true
    companyNameKana?: true
    companyNameJp?: true
    companyLogoUrl?: true
    companyWebsite?: true
    companyDescription?: true
    companyDescriptionJp?: true
    businessOverview?: true
    businessOverviewJp?: true
    companyAddress?: true
    companyAddressJp?: true
    companyPhone?: true
    establishmentDate?: true
    representativeName?: true
    representativeTitle?: true
    vietnamBranchExists?: true
    companySize?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EmployerMaxAggregateInputType = {
    id?: true
    userId?: true
    companyName?: true
    companyNameKana?: true
    companyNameJp?: true
    companyLogoUrl?: true
    companyWebsite?: true
    companyDescription?: true
    companyDescriptionJp?: true
    businessOverview?: true
    businessOverviewJp?: true
    companyAddress?: true
    companyAddressJp?: true
    companyPhone?: true
    establishmentDate?: true
    representativeName?: true
    representativeTitle?: true
    vietnamBranchExists?: true
    companySize?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EmployerCountAggregateInputType = {
    id?: true
    userId?: true
    companyName?: true
    companyNameKana?: true
    companyNameJp?: true
    companyLogoUrl?: true
    companyWebsite?: true
    companyDescription?: true
    companyDescriptionJp?: true
    businessOverview?: true
    businessOverviewJp?: true
    companyAddress?: true
    companyAddressJp?: true
    companyPhone?: true
    establishmentDate?: true
    representativeName?: true
    representativeTitle?: true
    vietnamBranchExists?: true
    companySize?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EmployerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Employer to aggregate.
     */
    where?: EmployerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployerOrderByWithRelationInput | EmployerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmployerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Employers
    **/
    _count?: true | EmployerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmployerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmployerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmployerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmployerMaxAggregateInputType
  }

  export type GetEmployerAggregateType<T extends EmployerAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployer[P]>
      : GetScalarType<T[P], AggregateEmployer[P]>
  }




  export type EmployerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmployerWhereInput
    orderBy?: EmployerOrderByWithAggregationInput | EmployerOrderByWithAggregationInput[]
    by: EmployerScalarFieldEnum[] | EmployerScalarFieldEnum
    having?: EmployerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmployerCountAggregateInputType | true
    _avg?: EmployerAvgAggregateInputType
    _sum?: EmployerSumAggregateInputType
    _min?: EmployerMinAggregateInputType
    _max?: EmployerMaxAggregateInputType
  }

  export type EmployerGroupByOutputType = {
    id: number
    userId: number
    companyName: string
    companyNameKana: string | null
    companyNameJp: string | null
    companyLogoUrl: string | null
    companyWebsite: string | null
    companyDescription: string | null
    companyDescriptionJp: string | null
    businessOverview: string | null
    businessOverviewJp: string | null
    companyAddress: string | null
    companyAddressJp: string | null
    companyPhone: string | null
    establishmentDate: Date | null
    representativeName: string | null
    representativeTitle: string | null
    vietnamBranchExists: boolean | null
    companySize: $Enums.CompanySizeType | null
    createdAt: Date
    updatedAt: Date
    _count: EmployerCountAggregateOutputType | null
    _avg: EmployerAvgAggregateOutputType | null
    _sum: EmployerSumAggregateOutputType | null
    _min: EmployerMinAggregateOutputType | null
    _max: EmployerMaxAggregateOutputType | null
  }

  type GetEmployerGroupByPayload<T extends EmployerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmployerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmployerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmployerGroupByOutputType[P]>
            : GetScalarType<T[P], EmployerGroupByOutputType[P]>
        }
      >
    >


  export type EmployerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    companyName?: boolean
    companyNameKana?: boolean
    companyNameJp?: boolean
    companyLogoUrl?: boolean
    companyWebsite?: boolean
    companyDescription?: boolean
    companyDescriptionJp?: boolean
    businessOverview?: boolean
    businessOverviewJp?: boolean
    companyAddress?: boolean
    companyAddressJp?: boolean
    companyPhone?: boolean
    establishmentDate?: boolean
    representativeName?: boolean
    representativeTitle?: boolean
    vietnamBranchExists?: boolean
    companySize?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    jobs?: boolean | Employer$jobsArgs<ExtArgs>
    _count?: boolean | EmployerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employer"]>

  export type EmployerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    companyName?: boolean
    companyNameKana?: boolean
    companyNameJp?: boolean
    companyLogoUrl?: boolean
    companyWebsite?: boolean
    companyDescription?: boolean
    companyDescriptionJp?: boolean
    businessOverview?: boolean
    businessOverviewJp?: boolean
    companyAddress?: boolean
    companyAddressJp?: boolean
    companyPhone?: boolean
    establishmentDate?: boolean
    representativeName?: boolean
    representativeTitle?: boolean
    vietnamBranchExists?: boolean
    companySize?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employer"]>

  export type EmployerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    companyName?: boolean
    companyNameKana?: boolean
    companyNameJp?: boolean
    companyLogoUrl?: boolean
    companyWebsite?: boolean
    companyDescription?: boolean
    companyDescriptionJp?: boolean
    businessOverview?: boolean
    businessOverviewJp?: boolean
    companyAddress?: boolean
    companyAddressJp?: boolean
    companyPhone?: boolean
    establishmentDate?: boolean
    representativeName?: boolean
    representativeTitle?: boolean
    vietnamBranchExists?: boolean
    companySize?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employer"]>

  export type EmployerSelectScalar = {
    id?: boolean
    userId?: boolean
    companyName?: boolean
    companyNameKana?: boolean
    companyNameJp?: boolean
    companyLogoUrl?: boolean
    companyWebsite?: boolean
    companyDescription?: boolean
    companyDescriptionJp?: boolean
    businessOverview?: boolean
    businessOverviewJp?: boolean
    companyAddress?: boolean
    companyAddressJp?: boolean
    companyPhone?: boolean
    establishmentDate?: boolean
    representativeName?: boolean
    representativeTitle?: boolean
    vietnamBranchExists?: boolean
    companySize?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EmployerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "companyName" | "companyNameKana" | "companyNameJp" | "companyLogoUrl" | "companyWebsite" | "companyDescription" | "companyDescriptionJp" | "businessOverview" | "businessOverviewJp" | "companyAddress" | "companyAddressJp" | "companyPhone" | "establishmentDate" | "representativeName" | "representativeTitle" | "vietnamBranchExists" | "companySize" | "createdAt" | "updatedAt", ExtArgs["result"]["employer"]>
  export type EmployerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    jobs?: boolean | Employer$jobsArgs<ExtArgs>
    _count?: boolean | EmployerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EmployerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type EmployerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $EmployerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Employer"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      jobs: Prisma.$JobPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      /**
       * Tên công ty (Romaji/English)
       */
      companyName: string
      /**
       * Tên công ty (Furigana/Katakana)
       */
      companyNameKana: string | null
      /**
       * Tên công ty (Kanji - nếu có)
       */
      companyNameJp: string | null
      companyLogoUrl: string | null
      companyWebsite: string | null
      /**
       * Mô tả chung (có thể dùng tiếng Anh/Việt)
       */
      companyDescription: string | null
      /**
       * Mô tả bằng tiếng Nhật
       */
      companyDescriptionJp: string | null
      businessOverview: string | null
      /**
       * Tổng quan kinh doanh (tiếng Nhật)
       */
      businessOverviewJp: string | null
      /**
       * Địa chỉ (có thể là Romaji)
       */
      companyAddress: string | null
      /**
       * Địa chỉ (tiếng Nhật)
       */
      companyAddressJp: string | null
      companyPhone: string | null
      establishmentDate: Date | null
      representativeName: string | null
      representativeTitle: string | null
      /**
       * Có chi nhánh tại VN không (thông tin thêm)
       */
      vietnamBranchExists: boolean | null
      companySize: $Enums.CompanySizeType | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["employer"]>
    composites: {}
  }

  type EmployerGetPayload<S extends boolean | null | undefined | EmployerDefaultArgs> = $Result.GetResult<Prisma.$EmployerPayload, S>

  type EmployerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmployerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmployerCountAggregateInputType | true
    }

  export interface EmployerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Employer'], meta: { name: 'Employer' } }
    /**
     * Find zero or one Employer that matches the filter.
     * @param {EmployerFindUniqueArgs} args - Arguments to find a Employer
     * @example
     * // Get one Employer
     * const employer = await prisma.employer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmployerFindUniqueArgs>(args: SelectSubset<T, EmployerFindUniqueArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Employer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmployerFindUniqueOrThrowArgs} args - Arguments to find a Employer
     * @example
     * // Get one Employer
     * const employer = await prisma.employer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmployerFindUniqueOrThrowArgs>(args: SelectSubset<T, EmployerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployerFindFirstArgs} args - Arguments to find a Employer
     * @example
     * // Get one Employer
     * const employer = await prisma.employer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmployerFindFirstArgs>(args?: SelectSubset<T, EmployerFindFirstArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployerFindFirstOrThrowArgs} args - Arguments to find a Employer
     * @example
     * // Get one Employer
     * const employer = await prisma.employer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmployerFindFirstOrThrowArgs>(args?: SelectSubset<T, EmployerFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Employers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employers
     * const employers = await prisma.employer.findMany()
     * 
     * // Get first 10 Employers
     * const employers = await prisma.employer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const employerWithIdOnly = await prisma.employer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmployerFindManyArgs>(args?: SelectSubset<T, EmployerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Employer.
     * @param {EmployerCreateArgs} args - Arguments to create a Employer.
     * @example
     * // Create one Employer
     * const Employer = await prisma.employer.create({
     *   data: {
     *     // ... data to create a Employer
     *   }
     * })
     * 
     */
    create<T extends EmployerCreateArgs>(args: SelectSubset<T, EmployerCreateArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Employers.
     * @param {EmployerCreateManyArgs} args - Arguments to create many Employers.
     * @example
     * // Create many Employers
     * const employer = await prisma.employer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmployerCreateManyArgs>(args?: SelectSubset<T, EmployerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Employers and returns the data saved in the database.
     * @param {EmployerCreateManyAndReturnArgs} args - Arguments to create many Employers.
     * @example
     * // Create many Employers
     * const employer = await prisma.employer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Employers and only return the `id`
     * const employerWithIdOnly = await prisma.employer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmployerCreateManyAndReturnArgs>(args?: SelectSubset<T, EmployerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Employer.
     * @param {EmployerDeleteArgs} args - Arguments to delete one Employer.
     * @example
     * // Delete one Employer
     * const Employer = await prisma.employer.delete({
     *   where: {
     *     // ... filter to delete one Employer
     *   }
     * })
     * 
     */
    delete<T extends EmployerDeleteArgs>(args: SelectSubset<T, EmployerDeleteArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Employer.
     * @param {EmployerUpdateArgs} args - Arguments to update one Employer.
     * @example
     * // Update one Employer
     * const employer = await prisma.employer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmployerUpdateArgs>(args: SelectSubset<T, EmployerUpdateArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Employers.
     * @param {EmployerDeleteManyArgs} args - Arguments to filter Employers to delete.
     * @example
     * // Delete a few Employers
     * const { count } = await prisma.employer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmployerDeleteManyArgs>(args?: SelectSubset<T, EmployerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employers
     * const employer = await prisma.employer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmployerUpdateManyArgs>(args: SelectSubset<T, EmployerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employers and returns the data updated in the database.
     * @param {EmployerUpdateManyAndReturnArgs} args - Arguments to update many Employers.
     * @example
     * // Update many Employers
     * const employer = await prisma.employer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Employers and only return the `id`
     * const employerWithIdOnly = await prisma.employer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmployerUpdateManyAndReturnArgs>(args: SelectSubset<T, EmployerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Employer.
     * @param {EmployerUpsertArgs} args - Arguments to update or create a Employer.
     * @example
     * // Update or create a Employer
     * const employer = await prisma.employer.upsert({
     *   create: {
     *     // ... data to create a Employer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employer we want to update
     *   }
     * })
     */
    upsert<T extends EmployerUpsertArgs>(args: SelectSubset<T, EmployerUpsertArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Employers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployerCountArgs} args - Arguments to filter Employers to count.
     * @example
     * // Count the number of Employers
     * const count = await prisma.employer.count({
     *   where: {
     *     // ... the filter for the Employers we want to count
     *   }
     * })
    **/
    count<T extends EmployerCountArgs>(
      args?: Subset<T, EmployerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmployerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmployerAggregateArgs>(args: Subset<T, EmployerAggregateArgs>): Prisma.PrismaPromise<GetEmployerAggregateType<T>>

    /**
     * Group by Employer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmployerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmployerGroupByArgs['orderBy'] }
        : { orderBy?: EmployerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmployerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Employer model
   */
  readonly fields: EmployerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Employer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmployerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    jobs<T extends Employer$jobsArgs<ExtArgs> = {}>(args?: Subset<T, Employer$jobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Employer model
   */
  interface EmployerFieldRefs {
    readonly id: FieldRef<"Employer", 'Int'>
    readonly userId: FieldRef<"Employer", 'Int'>
    readonly companyName: FieldRef<"Employer", 'String'>
    readonly companyNameKana: FieldRef<"Employer", 'String'>
    readonly companyNameJp: FieldRef<"Employer", 'String'>
    readonly companyLogoUrl: FieldRef<"Employer", 'String'>
    readonly companyWebsite: FieldRef<"Employer", 'String'>
    readonly companyDescription: FieldRef<"Employer", 'String'>
    readonly companyDescriptionJp: FieldRef<"Employer", 'String'>
    readonly businessOverview: FieldRef<"Employer", 'String'>
    readonly businessOverviewJp: FieldRef<"Employer", 'String'>
    readonly companyAddress: FieldRef<"Employer", 'String'>
    readonly companyAddressJp: FieldRef<"Employer", 'String'>
    readonly companyPhone: FieldRef<"Employer", 'String'>
    readonly establishmentDate: FieldRef<"Employer", 'DateTime'>
    readonly representativeName: FieldRef<"Employer", 'String'>
    readonly representativeTitle: FieldRef<"Employer", 'String'>
    readonly vietnamBranchExists: FieldRef<"Employer", 'Boolean'>
    readonly companySize: FieldRef<"Employer", 'CompanySizeType'>
    readonly createdAt: FieldRef<"Employer", 'DateTime'>
    readonly updatedAt: FieldRef<"Employer", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Employer findUnique
   */
  export type EmployerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * Filter, which Employer to fetch.
     */
    where: EmployerWhereUniqueInput
  }

  /**
   * Employer findUniqueOrThrow
   */
  export type EmployerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * Filter, which Employer to fetch.
     */
    where: EmployerWhereUniqueInput
  }

  /**
   * Employer findFirst
   */
  export type EmployerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * Filter, which Employer to fetch.
     */
    where?: EmployerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployerOrderByWithRelationInput | EmployerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Employers.
     */
    cursor?: EmployerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Employers.
     */
    distinct?: EmployerScalarFieldEnum | EmployerScalarFieldEnum[]
  }

  /**
   * Employer findFirstOrThrow
   */
  export type EmployerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * Filter, which Employer to fetch.
     */
    where?: EmployerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployerOrderByWithRelationInput | EmployerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Employers.
     */
    cursor?: EmployerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Employers.
     */
    distinct?: EmployerScalarFieldEnum | EmployerScalarFieldEnum[]
  }

  /**
   * Employer findMany
   */
  export type EmployerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * Filter, which Employers to fetch.
     */
    where?: EmployerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployerOrderByWithRelationInput | EmployerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Employers.
     */
    cursor?: EmployerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    distinct?: EmployerScalarFieldEnum | EmployerScalarFieldEnum[]
  }

  /**
   * Employer create
   */
  export type EmployerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * The data needed to create a Employer.
     */
    data: XOR<EmployerCreateInput, EmployerUncheckedCreateInput>
  }

  /**
   * Employer createMany
   */
  export type EmployerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Employers.
     */
    data: EmployerCreateManyInput | EmployerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Employer createManyAndReturn
   */
  export type EmployerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * The data used to create many Employers.
     */
    data: EmployerCreateManyInput | EmployerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Employer update
   */
  export type EmployerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * The data needed to update a Employer.
     */
    data: XOR<EmployerUpdateInput, EmployerUncheckedUpdateInput>
    /**
     * Choose, which Employer to update.
     */
    where: EmployerWhereUniqueInput
  }

  /**
   * Employer updateMany
   */
  export type EmployerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Employers.
     */
    data: XOR<EmployerUpdateManyMutationInput, EmployerUncheckedUpdateManyInput>
    /**
     * Filter which Employers to update
     */
    where?: EmployerWhereInput
    /**
     * Limit how many Employers to update.
     */
    limit?: number
  }

  /**
   * Employer updateManyAndReturn
   */
  export type EmployerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * The data used to update Employers.
     */
    data: XOR<EmployerUpdateManyMutationInput, EmployerUncheckedUpdateManyInput>
    /**
     * Filter which Employers to update
     */
    where?: EmployerWhereInput
    /**
     * Limit how many Employers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Employer upsert
   */
  export type EmployerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * The filter to search for the Employer to update in case it exists.
     */
    where: EmployerWhereUniqueInput
    /**
     * In case the Employer found by the `where` argument doesn't exist, create a new Employer with this data.
     */
    create: XOR<EmployerCreateInput, EmployerUncheckedCreateInput>
    /**
     * In case the Employer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmployerUpdateInput, EmployerUncheckedUpdateInput>
  }

  /**
   * Employer delete
   */
  export type EmployerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
    /**
     * Filter which Employer to delete.
     */
    where: EmployerWhereUniqueInput
  }

  /**
   * Employer deleteMany
   */
  export type EmployerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Employers to delete
     */
    where?: EmployerWhereInput
    /**
     * Limit how many Employers to delete.
     */
    limit?: number
  }

  /**
   * Employer.jobs
   */
  export type Employer$jobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    where?: JobWhereInput
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    cursor?: JobWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Employer without action
   */
  export type EmployerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employer
     */
    select?: EmployerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employer
     */
    omit?: EmployerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployerInclude<ExtArgs> | null
  }


  /**
   * Model Candidate
   */

  export type AggregateCandidate = {
    _count: CandidateCountAggregateOutputType | null
    _avg: CandidateAvgAggregateOutputType | null
    _sum: CandidateSumAggregateOutputType | null
    _min: CandidateMinAggregateOutputType | null
    _max: CandidateMaxAggregateOutputType | null
  }

  export type CandidateAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    desiredSalaryMin: Decimal | null
    desiredSalaryMax: Decimal | null
    currentYearOfStudy: number | null
    profileCompleteness: number | null
  }

  export type CandidateSumAggregateOutputType = {
    id: number | null
    userId: number | null
    desiredSalaryMin: Decimal | null
    desiredSalaryMax: Decimal | null
    currentYearOfStudy: number | null
    profileCompleteness: number | null
  }

  export type CandidateMinAggregateOutputType = {
    id: number | null
    userId: number | null
    nameKana: string | null
    dateOfBirth: Date | null
    gender: $Enums.GenderType | null
    nationality: string | null
    currentAddressJp: string | null
    homeCountryAddress: string | null
    country: string | null
    headline: string | null
    headlineJp: string | null
    professionalSummary: string | null
    professionalSummaryJp: string | null
    appealStatement: string | null
    appealStatementJp: string | null
    motivationStatement: string | null
    careerGoals: string | null
    linkedinUrl: string | null
    githubUrl: string | null
    portfolioUrl: string | null
    desiredSalaryMin: Decimal | null
    desiredSalaryMax: Decimal | null
    desiredSalaryType: $Enums.SalaryType | null
    currentVisaStatusJp: string | null
    visaExpiryDateJp: Date | null
    desiredVisaSupport: boolean | null
    japaneseProficiency: $Enums.JapaneseProficiencyLevel | null
    englishProficiency: $Enums.ProficiencyLevel | null
    willingToRelocateInJapan: boolean | null
    arrivalInJapanDate: Date | null
    expectedGraduationDate: Date | null
    currentYearOfStudy: number | null
    studentId: string | null
    isSearchable: boolean | null
    profileCompleteness: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CandidateMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    nameKana: string | null
    dateOfBirth: Date | null
    gender: $Enums.GenderType | null
    nationality: string | null
    currentAddressJp: string | null
    homeCountryAddress: string | null
    country: string | null
    headline: string | null
    headlineJp: string | null
    professionalSummary: string | null
    professionalSummaryJp: string | null
    appealStatement: string | null
    appealStatementJp: string | null
    motivationStatement: string | null
    careerGoals: string | null
    linkedinUrl: string | null
    githubUrl: string | null
    portfolioUrl: string | null
    desiredSalaryMin: Decimal | null
    desiredSalaryMax: Decimal | null
    desiredSalaryType: $Enums.SalaryType | null
    currentVisaStatusJp: string | null
    visaExpiryDateJp: Date | null
    desiredVisaSupport: boolean | null
    japaneseProficiency: $Enums.JapaneseProficiencyLevel | null
    englishProficiency: $Enums.ProficiencyLevel | null
    willingToRelocateInJapan: boolean | null
    arrivalInJapanDate: Date | null
    expectedGraduationDate: Date | null
    currentYearOfStudy: number | null
    studentId: string | null
    isSearchable: boolean | null
    profileCompleteness: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CandidateCountAggregateOutputType = {
    id: number
    userId: number
    nameKana: number
    dateOfBirth: number
    gender: number
    nationality: number
    currentAddressJp: number
    homeCountryAddress: number
    country: number
    headline: number
    headlineJp: number
    professionalSummary: number
    professionalSummaryJp: number
    appealStatement: number
    appealStatementJp: number
    keyStrengths: number
    motivationStatement: number
    careerGoals: number
    linkedinUrl: number
    githubUrl: number
    portfolioUrl: number
    otherSocialProfiles: number
    desiredSalaryMin: number
    desiredSalaryMax: number
    desiredSalaryType: number
    preferredJobTypes: number
    preferredWorkLocations: number
    jobExpectations: number
    interestsTags: number
    currentVisaStatusJp: number
    visaExpiryDateJp: number
    desiredVisaSupport: number
    japaneseProficiency: number
    englishProficiency: number
    otherLanguages: number
    willingToRelocateInJapan: number
    arrivalInJapanDate: number
    expectedGraduationDate: number
    currentYearOfStudy: number
    studentId: number
    isSearchable: number
    profileCompleteness: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CandidateAvgAggregateInputType = {
    id?: true
    userId?: true
    desiredSalaryMin?: true
    desiredSalaryMax?: true
    currentYearOfStudy?: true
    profileCompleteness?: true
  }

  export type CandidateSumAggregateInputType = {
    id?: true
    userId?: true
    desiredSalaryMin?: true
    desiredSalaryMax?: true
    currentYearOfStudy?: true
    profileCompleteness?: true
  }

  export type CandidateMinAggregateInputType = {
    id?: true
    userId?: true
    nameKana?: true
    dateOfBirth?: true
    gender?: true
    nationality?: true
    currentAddressJp?: true
    homeCountryAddress?: true
    country?: true
    headline?: true
    headlineJp?: true
    professionalSummary?: true
    professionalSummaryJp?: true
    appealStatement?: true
    appealStatementJp?: true
    motivationStatement?: true
    careerGoals?: true
    linkedinUrl?: true
    githubUrl?: true
    portfolioUrl?: true
    desiredSalaryMin?: true
    desiredSalaryMax?: true
    desiredSalaryType?: true
    currentVisaStatusJp?: true
    visaExpiryDateJp?: true
    desiredVisaSupport?: true
    japaneseProficiency?: true
    englishProficiency?: true
    willingToRelocateInJapan?: true
    arrivalInJapanDate?: true
    expectedGraduationDate?: true
    currentYearOfStudy?: true
    studentId?: true
    isSearchable?: true
    profileCompleteness?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CandidateMaxAggregateInputType = {
    id?: true
    userId?: true
    nameKana?: true
    dateOfBirth?: true
    gender?: true
    nationality?: true
    currentAddressJp?: true
    homeCountryAddress?: true
    country?: true
    headline?: true
    headlineJp?: true
    professionalSummary?: true
    professionalSummaryJp?: true
    appealStatement?: true
    appealStatementJp?: true
    motivationStatement?: true
    careerGoals?: true
    linkedinUrl?: true
    githubUrl?: true
    portfolioUrl?: true
    desiredSalaryMin?: true
    desiredSalaryMax?: true
    desiredSalaryType?: true
    currentVisaStatusJp?: true
    visaExpiryDateJp?: true
    desiredVisaSupport?: true
    japaneseProficiency?: true
    englishProficiency?: true
    willingToRelocateInJapan?: true
    arrivalInJapanDate?: true
    expectedGraduationDate?: true
    currentYearOfStudy?: true
    studentId?: true
    isSearchable?: true
    profileCompleteness?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CandidateCountAggregateInputType = {
    id?: true
    userId?: true
    nameKana?: true
    dateOfBirth?: true
    gender?: true
    nationality?: true
    currentAddressJp?: true
    homeCountryAddress?: true
    country?: true
    headline?: true
    headlineJp?: true
    professionalSummary?: true
    professionalSummaryJp?: true
    appealStatement?: true
    appealStatementJp?: true
    keyStrengths?: true
    motivationStatement?: true
    careerGoals?: true
    linkedinUrl?: true
    githubUrl?: true
    portfolioUrl?: true
    otherSocialProfiles?: true
    desiredSalaryMin?: true
    desiredSalaryMax?: true
    desiredSalaryType?: true
    preferredJobTypes?: true
    preferredWorkLocations?: true
    jobExpectations?: true
    interestsTags?: true
    currentVisaStatusJp?: true
    visaExpiryDateJp?: true
    desiredVisaSupport?: true
    japaneseProficiency?: true
    englishProficiency?: true
    otherLanguages?: true
    willingToRelocateInJapan?: true
    arrivalInJapanDate?: true
    expectedGraduationDate?: true
    currentYearOfStudy?: true
    studentId?: true
    isSearchable?: true
    profileCompleteness?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CandidateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidate to aggregate.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Candidates
    **/
    _count?: true | CandidateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CandidateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CandidateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidateMaxAggregateInputType
  }

  export type GetCandidateAggregateType<T extends CandidateAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidate[P]>
      : GetScalarType<T[P], AggregateCandidate[P]>
  }




  export type CandidateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidateWhereInput
    orderBy?: CandidateOrderByWithAggregationInput | CandidateOrderByWithAggregationInput[]
    by: CandidateScalarFieldEnum[] | CandidateScalarFieldEnum
    having?: CandidateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidateCountAggregateInputType | true
    _avg?: CandidateAvgAggregateInputType
    _sum?: CandidateSumAggregateInputType
    _min?: CandidateMinAggregateInputType
    _max?: CandidateMaxAggregateInputType
  }

  export type CandidateGroupByOutputType = {
    id: number
    userId: number
    nameKana: string | null
    dateOfBirth: Date | null
    gender: $Enums.GenderType | null
    nationality: string | null
    currentAddressJp: string | null
    homeCountryAddress: string | null
    country: string | null
    headline: string | null
    headlineJp: string | null
    professionalSummary: string | null
    professionalSummaryJp: string | null
    appealStatement: string | null
    appealStatementJp: string | null
    keyStrengths: string[]
    motivationStatement: string | null
    careerGoals: string | null
    linkedinUrl: string | null
    githubUrl: string | null
    portfolioUrl: string | null
    otherSocialProfiles: JsonValue | null
    desiredSalaryMin: Decimal | null
    desiredSalaryMax: Decimal | null
    desiredSalaryType: $Enums.SalaryType | null
    preferredJobTypes: $Enums.JobTypeEnum[]
    preferredWorkLocations: string[]
    jobExpectations: string[]
    interestsTags: string[]
    currentVisaStatusJp: string | null
    visaExpiryDateJp: Date | null
    desiredVisaSupport: boolean | null
    japaneseProficiency: $Enums.JapaneseProficiencyLevel | null
    englishProficiency: $Enums.ProficiencyLevel | null
    otherLanguages: JsonValue | null
    willingToRelocateInJapan: boolean | null
    arrivalInJapanDate: Date | null
    expectedGraduationDate: Date | null
    currentYearOfStudy: number | null
    studentId: string | null
    isSearchable: boolean
    profileCompleteness: number | null
    createdAt: Date
    updatedAt: Date
    _count: CandidateCountAggregateOutputType | null
    _avg: CandidateAvgAggregateOutputType | null
    _sum: CandidateSumAggregateOutputType | null
    _min: CandidateMinAggregateOutputType | null
    _max: CandidateMaxAggregateOutputType | null
  }

  type GetCandidateGroupByPayload<T extends CandidateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidateGroupByOutputType[P]>
            : GetScalarType<T[P], CandidateGroupByOutputType[P]>
        }
      >
    >


  export type CandidateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nameKana?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    nationality?: boolean
    currentAddressJp?: boolean
    homeCountryAddress?: boolean
    country?: boolean
    headline?: boolean
    headlineJp?: boolean
    professionalSummary?: boolean
    professionalSummaryJp?: boolean
    appealStatement?: boolean
    appealStatementJp?: boolean
    keyStrengths?: boolean
    motivationStatement?: boolean
    careerGoals?: boolean
    linkedinUrl?: boolean
    githubUrl?: boolean
    portfolioUrl?: boolean
    otherSocialProfiles?: boolean
    desiredSalaryMin?: boolean
    desiredSalaryMax?: boolean
    desiredSalaryType?: boolean
    preferredJobTypes?: boolean
    preferredWorkLocations?: boolean
    jobExpectations?: boolean
    interestsTags?: boolean
    currentVisaStatusJp?: boolean
    visaExpiryDateJp?: boolean
    desiredVisaSupport?: boolean
    japaneseProficiency?: boolean
    englishProficiency?: boolean
    otherLanguages?: boolean
    willingToRelocateInJapan?: boolean
    arrivalInJapanDate?: boolean
    expectedGraduationDate?: boolean
    currentYearOfStudy?: boolean
    studentId?: boolean
    isSearchable?: boolean
    profileCompleteness?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    skills?: boolean | Candidate$skillsArgs<ExtArgs>
    cvs?: boolean | Candidate$cvsArgs<ExtArgs>
    applications?: boolean | Candidate$applicationsArgs<ExtArgs>
    education?: boolean | Candidate$educationArgs<ExtArgs>
    workExperience?: boolean | Candidate$workExperienceArgs<ExtArgs>
    projects?: boolean | Candidate$projectsArgs<ExtArgs>
    qualifications?: boolean | Candidate$qualificationsArgs<ExtArgs>
    awards?: boolean | Candidate$awardsArgs<ExtArgs>
    media?: boolean | Candidate$mediaArgs<ExtArgs>
    _count?: boolean | CandidateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidate"]>

  export type CandidateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nameKana?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    nationality?: boolean
    currentAddressJp?: boolean
    homeCountryAddress?: boolean
    country?: boolean
    headline?: boolean
    headlineJp?: boolean
    professionalSummary?: boolean
    professionalSummaryJp?: boolean
    appealStatement?: boolean
    appealStatementJp?: boolean
    keyStrengths?: boolean
    motivationStatement?: boolean
    careerGoals?: boolean
    linkedinUrl?: boolean
    githubUrl?: boolean
    portfolioUrl?: boolean
    otherSocialProfiles?: boolean
    desiredSalaryMin?: boolean
    desiredSalaryMax?: boolean
    desiredSalaryType?: boolean
    preferredJobTypes?: boolean
    preferredWorkLocations?: boolean
    jobExpectations?: boolean
    interestsTags?: boolean
    currentVisaStatusJp?: boolean
    visaExpiryDateJp?: boolean
    desiredVisaSupport?: boolean
    japaneseProficiency?: boolean
    englishProficiency?: boolean
    otherLanguages?: boolean
    willingToRelocateInJapan?: boolean
    arrivalInJapanDate?: boolean
    expectedGraduationDate?: boolean
    currentYearOfStudy?: boolean
    studentId?: boolean
    isSearchable?: boolean
    profileCompleteness?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidate"]>

  export type CandidateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nameKana?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    nationality?: boolean
    currentAddressJp?: boolean
    homeCountryAddress?: boolean
    country?: boolean
    headline?: boolean
    headlineJp?: boolean
    professionalSummary?: boolean
    professionalSummaryJp?: boolean
    appealStatement?: boolean
    appealStatementJp?: boolean
    keyStrengths?: boolean
    motivationStatement?: boolean
    careerGoals?: boolean
    linkedinUrl?: boolean
    githubUrl?: boolean
    portfolioUrl?: boolean
    otherSocialProfiles?: boolean
    desiredSalaryMin?: boolean
    desiredSalaryMax?: boolean
    desiredSalaryType?: boolean
    preferredJobTypes?: boolean
    preferredWorkLocations?: boolean
    jobExpectations?: boolean
    interestsTags?: boolean
    currentVisaStatusJp?: boolean
    visaExpiryDateJp?: boolean
    desiredVisaSupport?: boolean
    japaneseProficiency?: boolean
    englishProficiency?: boolean
    otherLanguages?: boolean
    willingToRelocateInJapan?: boolean
    arrivalInJapanDate?: boolean
    expectedGraduationDate?: boolean
    currentYearOfStudy?: boolean
    studentId?: boolean
    isSearchable?: boolean
    profileCompleteness?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidate"]>

  export type CandidateSelectScalar = {
    id?: boolean
    userId?: boolean
    nameKana?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    nationality?: boolean
    currentAddressJp?: boolean
    homeCountryAddress?: boolean
    country?: boolean
    headline?: boolean
    headlineJp?: boolean
    professionalSummary?: boolean
    professionalSummaryJp?: boolean
    appealStatement?: boolean
    appealStatementJp?: boolean
    keyStrengths?: boolean
    motivationStatement?: boolean
    careerGoals?: boolean
    linkedinUrl?: boolean
    githubUrl?: boolean
    portfolioUrl?: boolean
    otherSocialProfiles?: boolean
    desiredSalaryMin?: boolean
    desiredSalaryMax?: boolean
    desiredSalaryType?: boolean
    preferredJobTypes?: boolean
    preferredWorkLocations?: boolean
    jobExpectations?: boolean
    interestsTags?: boolean
    currentVisaStatusJp?: boolean
    visaExpiryDateJp?: boolean
    desiredVisaSupport?: boolean
    japaneseProficiency?: boolean
    englishProficiency?: boolean
    otherLanguages?: boolean
    willingToRelocateInJapan?: boolean
    arrivalInJapanDate?: boolean
    expectedGraduationDate?: boolean
    currentYearOfStudy?: boolean
    studentId?: boolean
    isSearchable?: boolean
    profileCompleteness?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CandidateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "nameKana" | "dateOfBirth" | "gender" | "nationality" | "currentAddressJp" | "homeCountryAddress" | "country" | "headline" | "headlineJp" | "professionalSummary" | "professionalSummaryJp" | "appealStatement" | "appealStatementJp" | "keyStrengths" | "motivationStatement" | "careerGoals" | "linkedinUrl" | "githubUrl" | "portfolioUrl" | "otherSocialProfiles" | "desiredSalaryMin" | "desiredSalaryMax" | "desiredSalaryType" | "preferredJobTypes" | "preferredWorkLocations" | "jobExpectations" | "interestsTags" | "currentVisaStatusJp" | "visaExpiryDateJp" | "desiredVisaSupport" | "japaneseProficiency" | "englishProficiency" | "otherLanguages" | "willingToRelocateInJapan" | "arrivalInJapanDate" | "expectedGraduationDate" | "currentYearOfStudy" | "studentId" | "isSearchable" | "profileCompleteness" | "createdAt" | "updatedAt", ExtArgs["result"]["candidate"]>
  export type CandidateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    skills?: boolean | Candidate$skillsArgs<ExtArgs>
    cvs?: boolean | Candidate$cvsArgs<ExtArgs>
    applications?: boolean | Candidate$applicationsArgs<ExtArgs>
    education?: boolean | Candidate$educationArgs<ExtArgs>
    workExperience?: boolean | Candidate$workExperienceArgs<ExtArgs>
    projects?: boolean | Candidate$projectsArgs<ExtArgs>
    qualifications?: boolean | Candidate$qualificationsArgs<ExtArgs>
    awards?: boolean | Candidate$awardsArgs<ExtArgs>
    media?: boolean | Candidate$mediaArgs<ExtArgs>
    _count?: boolean | CandidateCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CandidateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CandidateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CandidatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Candidate"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      skills: Prisma.$CandidateSkillPayload<ExtArgs>[]
      cvs: Prisma.$CVPayload<ExtArgs>[]
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
      education: Prisma.$EducationPayload<ExtArgs>[]
      workExperience: Prisma.$WorkExperiencePayload<ExtArgs>[]
      projects: Prisma.$ProjectPayload<ExtArgs>[]
      qualifications: Prisma.$QualificationPayload<ExtArgs>[]
      awards: Prisma.$AwardPayload<ExtArgs>[]
      media: Prisma.$CandidateMediaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      /**
       * Họ và tên (Katakana/Furigana - nếu có)
       */
      nameKana: string | null
      dateOfBirth: Date | null
      gender: $Enums.GenderType | null
      /**
       * Quốc tịch
       */
      nationality: string | null
      /**
       * Địa chỉ hiện tại ở Nhật (nếu có)
       */
      currentAddressJp: string | null
      /**
       * Địa chỉ ở quê nhà
       */
      homeCountryAddress: string | null
      /**
       * Quốc gia đang ở (ví dụ: Vietnam, Japan)
       */
      country: string | null
      /**
       * Tiêu đề hồ sơ (có thể tiếng Anh)
       */
      headline: string | null
      /**
       * Tiêu đề hồ sơ (tiếng Nhật)
       */
      headlineJp: string | null
      /**
       * Tóm tắt kinh nghiệm (tiếng Anh/Việt)
       */
      professionalSummary: string | null
      /**
       * Tóm tắt kinh nghiệm (tiếng Nhật)
       */
      professionalSummaryJp: string | null
      /**
       * Điểm mạnh/mong muốn (tiếng Anh/Việt)
       */
      appealStatement: string | null
      /**
       * Điểm mạnh/mong muốn (tiếng Nhật)
       */
      appealStatementJp: string | null
      /**
       * Các điểm mạnh chính (mảng)
       */
      keyStrengths: string[]
      /**
       * Động lực ứng tuyển
       */
      motivationStatement: string | null
      careerGoals: string | null
      linkedinUrl: string | null
      githubUrl: string | null
      portfolioUrl: string | null
      /**
       * Các trang mạng xã hội/profile khác { platform: string, url: string }[]
       */
      otherSocialProfiles: Prisma.JsonValue | null
      /**
       * Lương mong muốn (JPY)
       */
      desiredSalaryMin: Prisma.Decimal | null
      /**
       * Lương mong muốn (JPY)
       */
      desiredSalaryMax: Prisma.Decimal | null
      desiredSalaryType: $Enums.SalaryType | null
      /**
       * Loại hình công việc ưa thích
       */
      preferredJobTypes: $Enums.JobTypeEnum[]
      /**
       * Địa điểm làm việc ưa thích tại Nhật (Ví dụ: ["Tokyo", "Osaka", "Remote"])
       */
      preferredWorkLocations: string[]
      /**
       * Mong đợi trong công việc
       */
      jobExpectations: string[]
      /**
       * Sở thích
       */
      interestsTags: string[]
      /**
       * Tình trạng visa hiện tại ở Nhật (nếu có)
       */
      currentVisaStatusJp: string | null
      /**
       * Ngày hết hạn visa Nhật (nếu có)
       */
      visaExpiryDateJp: Date | null
      /**
       * Mong muốn hỗ trợ xin visa?
       */
      desiredVisaSupport: boolean | null
      /**
       * Trình độ tiếng Nhật
       */
      japaneseProficiency: $Enums.JapaneseProficiencyLevel | null
      /**
       * Trình độ tiếng Anh
       */
      englishProficiency: $Enums.ProficiencyLevel | null
      /**
       * Các ngôn ngữ khác { language: string, proficiency: ProficiencyLevel }[]
       */
      otherLanguages: Prisma.JsonValue | null
      /**
       * Sẵn sàng chuyển chỗ ở trong Nhật Bản?
       */
      willingToRelocateInJapan: boolean | null
      /**
       * Ngày đến Nhật (dự kiến hoặc thực tế)
       */
      arrivalInJapanDate: Date | null
      expectedGraduationDate: Date | null
      currentYearOfStudy: number | null
      studentId: string | null
      isSearchable: boolean
      profileCompleteness: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["candidate"]>
    composites: {}
  }

  type CandidateGetPayload<S extends boolean | null | undefined | CandidateDefaultArgs> = $Result.GetResult<Prisma.$CandidatePayload, S>

  type CandidateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CandidateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CandidateCountAggregateInputType | true
    }

  export interface CandidateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Candidate'], meta: { name: 'Candidate' } }
    /**
     * Find zero or one Candidate that matches the filter.
     * @param {CandidateFindUniqueArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CandidateFindUniqueArgs>(args: SelectSubset<T, CandidateFindUniqueArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Candidate that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CandidateFindUniqueOrThrowArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CandidateFindUniqueOrThrowArgs>(args: SelectSubset<T, CandidateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candidate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateFindFirstArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CandidateFindFirstArgs>(args?: SelectSubset<T, CandidateFindFirstArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candidate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateFindFirstOrThrowArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CandidateFindFirstOrThrowArgs>(args?: SelectSubset<T, CandidateFindFirstOrThrowArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Candidates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Candidates
     * const candidates = await prisma.candidate.findMany()
     * 
     * // Get first 10 Candidates
     * const candidates = await prisma.candidate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const candidateWithIdOnly = await prisma.candidate.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CandidateFindManyArgs>(args?: SelectSubset<T, CandidateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Candidate.
     * @param {CandidateCreateArgs} args - Arguments to create a Candidate.
     * @example
     * // Create one Candidate
     * const Candidate = await prisma.candidate.create({
     *   data: {
     *     // ... data to create a Candidate
     *   }
     * })
     * 
     */
    create<T extends CandidateCreateArgs>(args: SelectSubset<T, CandidateCreateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Candidates.
     * @param {CandidateCreateManyArgs} args - Arguments to create many Candidates.
     * @example
     * // Create many Candidates
     * const candidate = await prisma.candidate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CandidateCreateManyArgs>(args?: SelectSubset<T, CandidateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Candidates and returns the data saved in the database.
     * @param {CandidateCreateManyAndReturnArgs} args - Arguments to create many Candidates.
     * @example
     * // Create many Candidates
     * const candidate = await prisma.candidate.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Candidates and only return the `id`
     * const candidateWithIdOnly = await prisma.candidate.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CandidateCreateManyAndReturnArgs>(args?: SelectSubset<T, CandidateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Candidate.
     * @param {CandidateDeleteArgs} args - Arguments to delete one Candidate.
     * @example
     * // Delete one Candidate
     * const Candidate = await prisma.candidate.delete({
     *   where: {
     *     // ... filter to delete one Candidate
     *   }
     * })
     * 
     */
    delete<T extends CandidateDeleteArgs>(args: SelectSubset<T, CandidateDeleteArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Candidate.
     * @param {CandidateUpdateArgs} args - Arguments to update one Candidate.
     * @example
     * // Update one Candidate
     * const candidate = await prisma.candidate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CandidateUpdateArgs>(args: SelectSubset<T, CandidateUpdateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Candidates.
     * @param {CandidateDeleteManyArgs} args - Arguments to filter Candidates to delete.
     * @example
     * // Delete a few Candidates
     * const { count } = await prisma.candidate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CandidateDeleteManyArgs>(args?: SelectSubset<T, CandidateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Candidates
     * const candidate = await prisma.candidate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CandidateUpdateManyArgs>(args: SelectSubset<T, CandidateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidates and returns the data updated in the database.
     * @param {CandidateUpdateManyAndReturnArgs} args - Arguments to update many Candidates.
     * @example
     * // Update many Candidates
     * const candidate = await prisma.candidate.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Candidates and only return the `id`
     * const candidateWithIdOnly = await prisma.candidate.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CandidateUpdateManyAndReturnArgs>(args: SelectSubset<T, CandidateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Candidate.
     * @param {CandidateUpsertArgs} args - Arguments to update or create a Candidate.
     * @example
     * // Update or create a Candidate
     * const candidate = await prisma.candidate.upsert({
     *   create: {
     *     // ... data to create a Candidate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Candidate we want to update
     *   }
     * })
     */
    upsert<T extends CandidateUpsertArgs>(args: SelectSubset<T, CandidateUpsertArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateCountArgs} args - Arguments to filter Candidates to count.
     * @example
     * // Count the number of Candidates
     * const count = await prisma.candidate.count({
     *   where: {
     *     // ... the filter for the Candidates we want to count
     *   }
     * })
    **/
    count<T extends CandidateCountArgs>(
      args?: Subset<T, CandidateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Candidate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidateAggregateArgs>(args: Subset<T, CandidateAggregateArgs>): Prisma.PrismaPromise<GetCandidateAggregateType<T>>

    /**
     * Group by Candidate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CandidateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CandidateGroupByArgs['orderBy'] }
        : { orderBy?: CandidateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CandidateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Candidate model
   */
  readonly fields: CandidateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Candidate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CandidateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    skills<T extends Candidate$skillsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$skillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvs<T extends Candidate$cvsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$cvsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applications<T extends Candidate$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    education<T extends Candidate$educationArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$educationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    workExperience<T extends Candidate$workExperienceArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$workExperienceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    projects<T extends Candidate$projectsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$projectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualifications<T extends Candidate$qualificationsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$qualificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    awards<T extends Candidate$awardsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$awardsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    media<T extends Candidate$mediaArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Candidate model
   */
  interface CandidateFieldRefs {
    readonly id: FieldRef<"Candidate", 'Int'>
    readonly userId: FieldRef<"Candidate", 'Int'>
    readonly nameKana: FieldRef<"Candidate", 'String'>
    readonly dateOfBirth: FieldRef<"Candidate", 'DateTime'>
    readonly gender: FieldRef<"Candidate", 'GenderType'>
    readonly nationality: FieldRef<"Candidate", 'String'>
    readonly currentAddressJp: FieldRef<"Candidate", 'String'>
    readonly homeCountryAddress: FieldRef<"Candidate", 'String'>
    readonly country: FieldRef<"Candidate", 'String'>
    readonly headline: FieldRef<"Candidate", 'String'>
    readonly headlineJp: FieldRef<"Candidate", 'String'>
    readonly professionalSummary: FieldRef<"Candidate", 'String'>
    readonly professionalSummaryJp: FieldRef<"Candidate", 'String'>
    readonly appealStatement: FieldRef<"Candidate", 'String'>
    readonly appealStatementJp: FieldRef<"Candidate", 'String'>
    readonly keyStrengths: FieldRef<"Candidate", 'String[]'>
    readonly motivationStatement: FieldRef<"Candidate", 'String'>
    readonly careerGoals: FieldRef<"Candidate", 'String'>
    readonly linkedinUrl: FieldRef<"Candidate", 'String'>
    readonly githubUrl: FieldRef<"Candidate", 'String'>
    readonly portfolioUrl: FieldRef<"Candidate", 'String'>
    readonly otherSocialProfiles: FieldRef<"Candidate", 'Json'>
    readonly desiredSalaryMin: FieldRef<"Candidate", 'Decimal'>
    readonly desiredSalaryMax: FieldRef<"Candidate", 'Decimal'>
    readonly desiredSalaryType: FieldRef<"Candidate", 'SalaryType'>
    readonly preferredJobTypes: FieldRef<"Candidate", 'JobTypeEnum[]'>
    readonly preferredWorkLocations: FieldRef<"Candidate", 'String[]'>
    readonly jobExpectations: FieldRef<"Candidate", 'String[]'>
    readonly interestsTags: FieldRef<"Candidate", 'String[]'>
    readonly currentVisaStatusJp: FieldRef<"Candidate", 'String'>
    readonly visaExpiryDateJp: FieldRef<"Candidate", 'DateTime'>
    readonly desiredVisaSupport: FieldRef<"Candidate", 'Boolean'>
    readonly japaneseProficiency: FieldRef<"Candidate", 'JapaneseProficiencyLevel'>
    readonly englishProficiency: FieldRef<"Candidate", 'ProficiencyLevel'>
    readonly otherLanguages: FieldRef<"Candidate", 'Json'>
    readonly willingToRelocateInJapan: FieldRef<"Candidate", 'Boolean'>
    readonly arrivalInJapanDate: FieldRef<"Candidate", 'DateTime'>
    readonly expectedGraduationDate: FieldRef<"Candidate", 'DateTime'>
    readonly currentYearOfStudy: FieldRef<"Candidate", 'Int'>
    readonly studentId: FieldRef<"Candidate", 'String'>
    readonly isSearchable: FieldRef<"Candidate", 'Boolean'>
    readonly profileCompleteness: FieldRef<"Candidate", 'Float'>
    readonly createdAt: FieldRef<"Candidate", 'DateTime'>
    readonly updatedAt: FieldRef<"Candidate", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Candidate findUnique
   */
  export type CandidateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where: CandidateWhereUniqueInput
  }

  /**
   * Candidate findUniqueOrThrow
   */
  export type CandidateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where: CandidateWhereUniqueInput
  }

  /**
   * Candidate findFirst
   */
  export type CandidateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidates.
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidates.
     */
    distinct?: CandidateScalarFieldEnum | CandidateScalarFieldEnum[]
  }

  /**
   * Candidate findFirstOrThrow
   */
  export type CandidateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidates.
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidates.
     */
    distinct?: CandidateScalarFieldEnum | CandidateScalarFieldEnum[]
  }

  /**
   * Candidate findMany
   */
  export type CandidateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidates to fetch.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Candidates.
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    distinct?: CandidateScalarFieldEnum | CandidateScalarFieldEnum[]
  }

  /**
   * Candidate create
   */
  export type CandidateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * The data needed to create a Candidate.
     */
    data: XOR<CandidateCreateInput, CandidateUncheckedCreateInput>
  }

  /**
   * Candidate createMany
   */
  export type CandidateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Candidates.
     */
    data: CandidateCreateManyInput | CandidateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Candidate createManyAndReturn
   */
  export type CandidateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * The data used to create many Candidates.
     */
    data: CandidateCreateManyInput | CandidateCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Candidate update
   */
  export type CandidateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * The data needed to update a Candidate.
     */
    data: XOR<CandidateUpdateInput, CandidateUncheckedUpdateInput>
    /**
     * Choose, which Candidate to update.
     */
    where: CandidateWhereUniqueInput
  }

  /**
   * Candidate updateMany
   */
  export type CandidateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Candidates.
     */
    data: XOR<CandidateUpdateManyMutationInput, CandidateUncheckedUpdateManyInput>
    /**
     * Filter which Candidates to update
     */
    where?: CandidateWhereInput
    /**
     * Limit how many Candidates to update.
     */
    limit?: number
  }

  /**
   * Candidate updateManyAndReturn
   */
  export type CandidateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * The data used to update Candidates.
     */
    data: XOR<CandidateUpdateManyMutationInput, CandidateUncheckedUpdateManyInput>
    /**
     * Filter which Candidates to update
     */
    where?: CandidateWhereInput
    /**
     * Limit how many Candidates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Candidate upsert
   */
  export type CandidateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * The filter to search for the Candidate to update in case it exists.
     */
    where: CandidateWhereUniqueInput
    /**
     * In case the Candidate found by the `where` argument doesn't exist, create a new Candidate with this data.
     */
    create: XOR<CandidateCreateInput, CandidateUncheckedCreateInput>
    /**
     * In case the Candidate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CandidateUpdateInput, CandidateUncheckedUpdateInput>
  }

  /**
   * Candidate delete
   */
  export type CandidateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter which Candidate to delete.
     */
    where: CandidateWhereUniqueInput
  }

  /**
   * Candidate deleteMany
   */
  export type CandidateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidates to delete
     */
    where?: CandidateWhereInput
    /**
     * Limit how many Candidates to delete.
     */
    limit?: number
  }

  /**
   * Candidate.skills
   */
  export type Candidate$skillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    where?: CandidateSkillWhereInput
    orderBy?: CandidateSkillOrderByWithRelationInput | CandidateSkillOrderByWithRelationInput[]
    cursor?: CandidateSkillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidateSkillScalarFieldEnum | CandidateSkillScalarFieldEnum[]
  }

  /**
   * Candidate.cvs
   */
  export type Candidate$cvsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    where?: CVWhereInput
    orderBy?: CVOrderByWithRelationInput | CVOrderByWithRelationInput[]
    cursor?: CVWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CVScalarFieldEnum | CVScalarFieldEnum[]
  }

  /**
   * Candidate.applications
   */
  export type Candidate$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Candidate.education
   */
  export type Candidate$educationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    where?: EducationWhereInput
    orderBy?: EducationOrderByWithRelationInput | EducationOrderByWithRelationInput[]
    cursor?: EducationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EducationScalarFieldEnum | EducationScalarFieldEnum[]
  }

  /**
   * Candidate.workExperience
   */
  export type Candidate$workExperienceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    where?: WorkExperienceWhereInput
    orderBy?: WorkExperienceOrderByWithRelationInput | WorkExperienceOrderByWithRelationInput[]
    cursor?: WorkExperienceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WorkExperienceScalarFieldEnum | WorkExperienceScalarFieldEnum[]
  }

  /**
   * Candidate.projects
   */
  export type Candidate$projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Candidate.qualifications
   */
  export type Candidate$qualificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    where?: QualificationWhereInput
    orderBy?: QualificationOrderByWithRelationInput | QualificationOrderByWithRelationInput[]
    cursor?: QualificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualificationScalarFieldEnum | QualificationScalarFieldEnum[]
  }

  /**
   * Candidate.awards
   */
  export type Candidate$awardsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    where?: AwardWhereInput
    orderBy?: AwardOrderByWithRelationInput | AwardOrderByWithRelationInput[]
    cursor?: AwardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AwardScalarFieldEnum | AwardScalarFieldEnum[]
  }

  /**
   * Candidate.media
   */
  export type Candidate$mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    where?: CandidateMediaWhereInput
    orderBy?: CandidateMediaOrderByWithRelationInput | CandidateMediaOrderByWithRelationInput[]
    cursor?: CandidateMediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidateMediaScalarFieldEnum | CandidateMediaScalarFieldEnum[]
  }

  /**
   * Candidate without action
   */
  export type CandidateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidate
     */
    omit?: CandidateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateInclude<ExtArgs> | null
  }


  /**
   * Model Job
   */

  export type AggregateJob = {
    _count: JobCountAggregateOutputType | null
    _avg: JobAvgAggregateOutputType | null
    _sum: JobSumAggregateOutputType | null
    _min: JobMinAggregateOutputType | null
    _max: JobMaxAggregateOutputType | null
  }

  export type JobAvgAggregateOutputType = {
    id: number | null
    employerId: number | null
    industryId: number | null
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    actualWorkingHoursPerDay: Decimal | null
    avgOvertimeHoursPerMonth: Decimal | null
    numberOfHires: number | null
  }

  export type JobSumAggregateOutputType = {
    id: number | null
    employerId: number | null
    industryId: number | null
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    actualWorkingHoursPerDay: Decimal | null
    avgOvertimeHoursPerMonth: Decimal | null
    numberOfHires: number | null
  }

  export type JobMinAggregateOutputType = {
    id: number | null
    employerId: number | null
    industryId: number | null
    title: string | null
    titleJp: string | null
    description: string | null
    descriptionJp: string | null
    requirements: string | null
    requirementsJp: string | null
    benefits: string | null
    benefitsJp: string | null
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    salaryType: $Enums.SalaryType | null
    salaryDetails: string | null
    country: string | null
    prefecture: string | null
    city: string | null
    addressDetail: string | null
    nearestStation: string | null
    isRemote: boolean | null
    remoteDetails: string | null
    jobType: $Enums.JobTypeEnum | null
    status: $Enums.JobStatus | null
    postedDate: Date | null
    expiryDate: Date | null
    externalApplicationUrl: string | null
    workingHoursDescription: string | null
    isFlexTime: boolean | null
    coreTimeDescription: string | null
    actualWorkingHoursPerDay: Decimal | null
    avgOvertimeHoursPerMonth: Decimal | null
    requiredJapaneseLevel: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel: $Enums.ProficiencyLevel | null
    otherLanguageRequirements: string | null
    visaSupportAvailable: boolean | null
    relocationSupportAvailable: boolean | null
    housingSupportDetails: string | null
    foreignFriendlyEnvironment: boolean | null
    targetCandidateDescription: string | null
    numberOfHires: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobMaxAggregateOutputType = {
    id: number | null
    employerId: number | null
    industryId: number | null
    title: string | null
    titleJp: string | null
    description: string | null
    descriptionJp: string | null
    requirements: string | null
    requirementsJp: string | null
    benefits: string | null
    benefitsJp: string | null
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    salaryType: $Enums.SalaryType | null
    salaryDetails: string | null
    country: string | null
    prefecture: string | null
    city: string | null
    addressDetail: string | null
    nearestStation: string | null
    isRemote: boolean | null
    remoteDetails: string | null
    jobType: $Enums.JobTypeEnum | null
    status: $Enums.JobStatus | null
    postedDate: Date | null
    expiryDate: Date | null
    externalApplicationUrl: string | null
    workingHoursDescription: string | null
    isFlexTime: boolean | null
    coreTimeDescription: string | null
    actualWorkingHoursPerDay: Decimal | null
    avgOvertimeHoursPerMonth: Decimal | null
    requiredJapaneseLevel: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel: $Enums.ProficiencyLevel | null
    otherLanguageRequirements: string | null
    visaSupportAvailable: boolean | null
    relocationSupportAvailable: boolean | null
    housingSupportDetails: string | null
    foreignFriendlyEnvironment: boolean | null
    targetCandidateDescription: string | null
    numberOfHires: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobCountAggregateOutputType = {
    id: number
    employerId: number
    industryId: number
    title: number
    titleJp: number
    description: number
    descriptionJp: number
    requirements: number
    requirementsJp: number
    benefits: number
    benefitsJp: number
    appealPoints: number
    salaryMin: number
    salaryMax: number
    salaryType: number
    salaryDetails: number
    country: number
    prefecture: number
    city: number
    addressDetail: number
    nearestStation: number
    isRemote: number
    remoteDetails: number
    jobType: number
    status: number
    postedDate: number
    expiryDate: number
    externalApplicationUrl: number
    hiringStages: number
    workingHoursDescription: number
    isFlexTime: number
    coreTimeDescription: number
    actualWorkingHoursPerDay: number
    avgOvertimeHoursPerMonth: number
    requiredJapaneseLevel: number
    requiredEnglishLevel: number
    otherLanguageRequirements: number
    visaSupportAvailable: number
    relocationSupportAvailable: number
    housingSupportDetails: number
    foreignFriendlyEnvironment: number
    targetCandidateDescription: number
    numberOfHires: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type JobAvgAggregateInputType = {
    id?: true
    employerId?: true
    industryId?: true
    salaryMin?: true
    salaryMax?: true
    actualWorkingHoursPerDay?: true
    avgOvertimeHoursPerMonth?: true
    numberOfHires?: true
  }

  export type JobSumAggregateInputType = {
    id?: true
    employerId?: true
    industryId?: true
    salaryMin?: true
    salaryMax?: true
    actualWorkingHoursPerDay?: true
    avgOvertimeHoursPerMonth?: true
    numberOfHires?: true
  }

  export type JobMinAggregateInputType = {
    id?: true
    employerId?: true
    industryId?: true
    title?: true
    titleJp?: true
    description?: true
    descriptionJp?: true
    requirements?: true
    requirementsJp?: true
    benefits?: true
    benefitsJp?: true
    salaryMin?: true
    salaryMax?: true
    salaryType?: true
    salaryDetails?: true
    country?: true
    prefecture?: true
    city?: true
    addressDetail?: true
    nearestStation?: true
    isRemote?: true
    remoteDetails?: true
    jobType?: true
    status?: true
    postedDate?: true
    expiryDate?: true
    externalApplicationUrl?: true
    workingHoursDescription?: true
    isFlexTime?: true
    coreTimeDescription?: true
    actualWorkingHoursPerDay?: true
    avgOvertimeHoursPerMonth?: true
    requiredJapaneseLevel?: true
    requiredEnglishLevel?: true
    otherLanguageRequirements?: true
    visaSupportAvailable?: true
    relocationSupportAvailable?: true
    housingSupportDetails?: true
    foreignFriendlyEnvironment?: true
    targetCandidateDescription?: true
    numberOfHires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobMaxAggregateInputType = {
    id?: true
    employerId?: true
    industryId?: true
    title?: true
    titleJp?: true
    description?: true
    descriptionJp?: true
    requirements?: true
    requirementsJp?: true
    benefits?: true
    benefitsJp?: true
    salaryMin?: true
    salaryMax?: true
    salaryType?: true
    salaryDetails?: true
    country?: true
    prefecture?: true
    city?: true
    addressDetail?: true
    nearestStation?: true
    isRemote?: true
    remoteDetails?: true
    jobType?: true
    status?: true
    postedDate?: true
    expiryDate?: true
    externalApplicationUrl?: true
    workingHoursDescription?: true
    isFlexTime?: true
    coreTimeDescription?: true
    actualWorkingHoursPerDay?: true
    avgOvertimeHoursPerMonth?: true
    requiredJapaneseLevel?: true
    requiredEnglishLevel?: true
    otherLanguageRequirements?: true
    visaSupportAvailable?: true
    relocationSupportAvailable?: true
    housingSupportDetails?: true
    foreignFriendlyEnvironment?: true
    targetCandidateDescription?: true
    numberOfHires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobCountAggregateInputType = {
    id?: true
    employerId?: true
    industryId?: true
    title?: true
    titleJp?: true
    description?: true
    descriptionJp?: true
    requirements?: true
    requirementsJp?: true
    benefits?: true
    benefitsJp?: true
    appealPoints?: true
    salaryMin?: true
    salaryMax?: true
    salaryType?: true
    salaryDetails?: true
    country?: true
    prefecture?: true
    city?: true
    addressDetail?: true
    nearestStation?: true
    isRemote?: true
    remoteDetails?: true
    jobType?: true
    status?: true
    postedDate?: true
    expiryDate?: true
    externalApplicationUrl?: true
    hiringStages?: true
    workingHoursDescription?: true
    isFlexTime?: true
    coreTimeDescription?: true
    actualWorkingHoursPerDay?: true
    avgOvertimeHoursPerMonth?: true
    requiredJapaneseLevel?: true
    requiredEnglishLevel?: true
    otherLanguageRequirements?: true
    visaSupportAvailable?: true
    relocationSupportAvailable?: true
    housingSupportDetails?: true
    foreignFriendlyEnvironment?: true
    targetCandidateDescription?: true
    numberOfHires?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type JobAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Job to aggregate.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Jobs
    **/
    _count?: true | JobCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobMaxAggregateInputType
  }

  export type GetJobAggregateType<T extends JobAggregateArgs> = {
        [P in keyof T & keyof AggregateJob]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJob[P]>
      : GetScalarType<T[P], AggregateJob[P]>
  }




  export type JobGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobWhereInput
    orderBy?: JobOrderByWithAggregationInput | JobOrderByWithAggregationInput[]
    by: JobScalarFieldEnum[] | JobScalarFieldEnum
    having?: JobScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobCountAggregateInputType | true
    _avg?: JobAvgAggregateInputType
    _sum?: JobSumAggregateInputType
    _min?: JobMinAggregateInputType
    _max?: JobMaxAggregateInputType
  }

  export type JobGroupByOutputType = {
    id: number
    employerId: number
    industryId: number | null
    title: string
    titleJp: string | null
    description: string
    descriptionJp: string | null
    requirements: string
    requirementsJp: string | null
    benefits: string | null
    benefitsJp: string | null
    appealPoints: string[]
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    salaryType: $Enums.SalaryType
    salaryDetails: string | null
    country: string
    prefecture: string | null
    city: string | null
    addressDetail: string | null
    nearestStation: string | null
    isRemote: boolean
    remoteDetails: string | null
    jobType: $Enums.JobTypeEnum
    status: $Enums.JobStatus
    postedDate: Date
    expiryDate: Date | null
    externalApplicationUrl: string | null
    hiringStages: string[]
    workingHoursDescription: string | null
    isFlexTime: boolean | null
    coreTimeDescription: string | null
    actualWorkingHoursPerDay: Decimal | null
    avgOvertimeHoursPerMonth: Decimal | null
    requiredJapaneseLevel: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel: $Enums.ProficiencyLevel | null
    otherLanguageRequirements: string | null
    visaSupportAvailable: boolean | null
    relocationSupportAvailable: boolean | null
    housingSupportDetails: string | null
    foreignFriendlyEnvironment: boolean | null
    targetCandidateDescription: string | null
    numberOfHires: number | null
    createdAt: Date
    updatedAt: Date
    _count: JobCountAggregateOutputType | null
    _avg: JobAvgAggregateOutputType | null
    _sum: JobSumAggregateOutputType | null
    _min: JobMinAggregateOutputType | null
    _max: JobMaxAggregateOutputType | null
  }

  type GetJobGroupByPayload<T extends JobGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobGroupByOutputType[P]>
            : GetScalarType<T[P], JobGroupByOutputType[P]>
        }
      >
    >


  export type JobSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employerId?: boolean
    industryId?: boolean
    title?: boolean
    titleJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    requirements?: boolean
    requirementsJp?: boolean
    benefits?: boolean
    benefitsJp?: boolean
    appealPoints?: boolean
    salaryMin?: boolean
    salaryMax?: boolean
    salaryType?: boolean
    salaryDetails?: boolean
    country?: boolean
    prefecture?: boolean
    city?: boolean
    addressDetail?: boolean
    nearestStation?: boolean
    isRemote?: boolean
    remoteDetails?: boolean
    jobType?: boolean
    status?: boolean
    postedDate?: boolean
    expiryDate?: boolean
    externalApplicationUrl?: boolean
    hiringStages?: boolean
    workingHoursDescription?: boolean
    isFlexTime?: boolean
    coreTimeDescription?: boolean
    actualWorkingHoursPerDay?: boolean
    avgOvertimeHoursPerMonth?: boolean
    requiredJapaneseLevel?: boolean
    requiredEnglishLevel?: boolean
    otherLanguageRequirements?: boolean
    visaSupportAvailable?: boolean
    relocationSupportAvailable?: boolean
    housingSupportDetails?: boolean
    foreignFriendlyEnvironment?: boolean
    targetCandidateDescription?: boolean
    numberOfHires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employer?: boolean | EmployerDefaultArgs<ExtArgs>
    industry?: boolean | Job$industryArgs<ExtArgs>
    skills?: boolean | Job$skillsArgs<ExtArgs>
    applications?: boolean | Job$applicationsArgs<ExtArgs>
    documents?: boolean | Job$documentsArgs<ExtArgs>
    _count?: boolean | JobCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["job"]>

  export type JobSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employerId?: boolean
    industryId?: boolean
    title?: boolean
    titleJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    requirements?: boolean
    requirementsJp?: boolean
    benefits?: boolean
    benefitsJp?: boolean
    appealPoints?: boolean
    salaryMin?: boolean
    salaryMax?: boolean
    salaryType?: boolean
    salaryDetails?: boolean
    country?: boolean
    prefecture?: boolean
    city?: boolean
    addressDetail?: boolean
    nearestStation?: boolean
    isRemote?: boolean
    remoteDetails?: boolean
    jobType?: boolean
    status?: boolean
    postedDate?: boolean
    expiryDate?: boolean
    externalApplicationUrl?: boolean
    hiringStages?: boolean
    workingHoursDescription?: boolean
    isFlexTime?: boolean
    coreTimeDescription?: boolean
    actualWorkingHoursPerDay?: boolean
    avgOvertimeHoursPerMonth?: boolean
    requiredJapaneseLevel?: boolean
    requiredEnglishLevel?: boolean
    otherLanguageRequirements?: boolean
    visaSupportAvailable?: boolean
    relocationSupportAvailable?: boolean
    housingSupportDetails?: boolean
    foreignFriendlyEnvironment?: boolean
    targetCandidateDescription?: boolean
    numberOfHires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employer?: boolean | EmployerDefaultArgs<ExtArgs>
    industry?: boolean | Job$industryArgs<ExtArgs>
  }, ExtArgs["result"]["job"]>

  export type JobSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employerId?: boolean
    industryId?: boolean
    title?: boolean
    titleJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    requirements?: boolean
    requirementsJp?: boolean
    benefits?: boolean
    benefitsJp?: boolean
    appealPoints?: boolean
    salaryMin?: boolean
    salaryMax?: boolean
    salaryType?: boolean
    salaryDetails?: boolean
    country?: boolean
    prefecture?: boolean
    city?: boolean
    addressDetail?: boolean
    nearestStation?: boolean
    isRemote?: boolean
    remoteDetails?: boolean
    jobType?: boolean
    status?: boolean
    postedDate?: boolean
    expiryDate?: boolean
    externalApplicationUrl?: boolean
    hiringStages?: boolean
    workingHoursDescription?: boolean
    isFlexTime?: boolean
    coreTimeDescription?: boolean
    actualWorkingHoursPerDay?: boolean
    avgOvertimeHoursPerMonth?: boolean
    requiredJapaneseLevel?: boolean
    requiredEnglishLevel?: boolean
    otherLanguageRequirements?: boolean
    visaSupportAvailable?: boolean
    relocationSupportAvailable?: boolean
    housingSupportDetails?: boolean
    foreignFriendlyEnvironment?: boolean
    targetCandidateDescription?: boolean
    numberOfHires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employer?: boolean | EmployerDefaultArgs<ExtArgs>
    industry?: boolean | Job$industryArgs<ExtArgs>
  }, ExtArgs["result"]["job"]>

  export type JobSelectScalar = {
    id?: boolean
    employerId?: boolean
    industryId?: boolean
    title?: boolean
    titleJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    requirements?: boolean
    requirementsJp?: boolean
    benefits?: boolean
    benefitsJp?: boolean
    appealPoints?: boolean
    salaryMin?: boolean
    salaryMax?: boolean
    salaryType?: boolean
    salaryDetails?: boolean
    country?: boolean
    prefecture?: boolean
    city?: boolean
    addressDetail?: boolean
    nearestStation?: boolean
    isRemote?: boolean
    remoteDetails?: boolean
    jobType?: boolean
    status?: boolean
    postedDate?: boolean
    expiryDate?: boolean
    externalApplicationUrl?: boolean
    hiringStages?: boolean
    workingHoursDescription?: boolean
    isFlexTime?: boolean
    coreTimeDescription?: boolean
    actualWorkingHoursPerDay?: boolean
    avgOvertimeHoursPerMonth?: boolean
    requiredJapaneseLevel?: boolean
    requiredEnglishLevel?: boolean
    otherLanguageRequirements?: boolean
    visaSupportAvailable?: boolean
    relocationSupportAvailable?: boolean
    housingSupportDetails?: boolean
    foreignFriendlyEnvironment?: boolean
    targetCandidateDescription?: boolean
    numberOfHires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type JobOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "employerId" | "industryId" | "title" | "titleJp" | "description" | "descriptionJp" | "requirements" | "requirementsJp" | "benefits" | "benefitsJp" | "appealPoints" | "salaryMin" | "salaryMax" | "salaryType" | "salaryDetails" | "country" | "prefecture" | "city" | "addressDetail" | "nearestStation" | "isRemote" | "remoteDetails" | "jobType" | "status" | "postedDate" | "expiryDate" | "externalApplicationUrl" | "hiringStages" | "workingHoursDescription" | "isFlexTime" | "coreTimeDescription" | "actualWorkingHoursPerDay" | "avgOvertimeHoursPerMonth" | "requiredJapaneseLevel" | "requiredEnglishLevel" | "otherLanguageRequirements" | "visaSupportAvailable" | "relocationSupportAvailable" | "housingSupportDetails" | "foreignFriendlyEnvironment" | "targetCandidateDescription" | "numberOfHires" | "createdAt" | "updatedAt", ExtArgs["result"]["job"]>
  export type JobInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employer?: boolean | EmployerDefaultArgs<ExtArgs>
    industry?: boolean | Job$industryArgs<ExtArgs>
    skills?: boolean | Job$skillsArgs<ExtArgs>
    applications?: boolean | Job$applicationsArgs<ExtArgs>
    documents?: boolean | Job$documentsArgs<ExtArgs>
    _count?: boolean | JobCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JobIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employer?: boolean | EmployerDefaultArgs<ExtArgs>
    industry?: boolean | Job$industryArgs<ExtArgs>
  }
  export type JobIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employer?: boolean | EmployerDefaultArgs<ExtArgs>
    industry?: boolean | Job$industryArgs<ExtArgs>
  }

  export type $JobPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Job"
    objects: {
      employer: Prisma.$EmployerPayload<ExtArgs>
      industry: Prisma.$IndustryPayload<ExtArgs> | null
      skills: Prisma.$JobSkillPayload<ExtArgs>[]
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
      documents: Prisma.$JobDocumentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      employerId: number
      /**
       * ID ngành nghề (từ bảng Industry)
       */
      industryId: number | null
      /**
       * Tiêu đề công việc (Tiếng Anh/Việt)
       */
      title: string
      /**
       * Tiêu đề công việc (Tiếng Nhật)
       */
      titleJp: string | null
      /**
       * Mô tả công việc (Tiếng Anh/Việt)
       */
      description: string
      /**
       * Mô tả công việc (Tiếng Nhật)
       */
      descriptionJp: string | null
      /**
       * Yêu cầu (Tiếng Anh/Việt)
       */
      requirements: string
      /**
       * Yêu cầu (Tiếng Nhật)
       */
      requirementsJp: string | null
      /**
       * Phúc lợi (Tiếng Anh/Việt)
       */
      benefits: string | null
      /**
       * Phúc lợi (Tiếng Nhật)
       */
      benefitsJp: string | null
      /**
       * Điểm hấp dẫn (mảng)
       */
      appealPoints: string[]
      /**
       * Lương (JPY)
       */
      salaryMin: Prisma.Decimal | null
      /**
       * Lương (JPY)
       */
      salaryMax: Prisma.Decimal | null
      salaryType: $Enums.SalaryType
      /**
       * Chi tiết lương thưởng khác (Tiếng Anh/Nhật)
       */
      salaryDetails: string | null
      /**
       * Quốc gia (Mặc định là Nhật)
       */
      country: string
      /**
       * Tỉnh/Thành phố (Tokyo, Osaka, etc.)
       */
      prefecture: string | null
      /**
       * Thành phố/Quận
       */
      city: string | null
      /**
       * Địa chỉ chi tiết (Tiếng Nhật/Romaji)
       */
      addressDetail: string | null
      /**
       * Ga tàu gần nhất
       */
      nearestStation: string | null
      isRemote: boolean
      /**
       * Chi tiết về làm việc từ xa (nếu có)
       */
      remoteDetails: string | null
      /**
       * Loại hình công việc
       */
      jobType: $Enums.JobTypeEnum
      status: $Enums.JobStatus
      postedDate: Date
      expiryDate: Date | null
      externalApplicationUrl: string | null
      /**
       * Các giai đoạn tuyển dụng
       */
      hiringStages: string[]
      /**
       * Mô tả giờ làm việc (Ví dụ: "09:00 ~ 18:00")
       */
      workingHoursDescription: string | null
      isFlexTime: boolean | null
      /**
       * Giờ làm việc cốt lõi
       */
      coreTimeDescription: string | null
      actualWorkingHoursPerDay: Prisma.Decimal | null
      avgOvertimeHoursPerMonth: Prisma.Decimal | null
      /**
       * Yêu cầu trình độ tiếng Nhật
       */
      requiredJapaneseLevel: $Enums.JapaneseProficiencyLevel | null
      /**
       * Yêu cầu trình độ tiếng Anh
       */
      requiredEnglishLevel: $Enums.ProficiencyLevel | null
      /**
       * Yêu cầu ngôn ngữ khác
       */
      otherLanguageRequirements: string | null
      /**
       * Có hỗ trợ visa không?
       */
      visaSupportAvailable: boolean | null
      /**
       * Có hỗ trợ chuyển chỗ ở không?
       */
      relocationSupportAvailable: boolean | null
      /**
       * Chi tiết hỗ trợ nhà ở (nếu có)
       */
      housingSupportDetails: string | null
      /**
       * Môi trường thân thiện với người nước ngoài?
       */
      foreignFriendlyEnvironment: boolean | null
      /**
       * Mô tả ứng viên mục tiêu (đặc biệt là người nước ngoài)
       */
      targetCandidateDescription: string | null
      /**
       * Số lượng cần tuyển
       */
      numberOfHires: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["job"]>
    composites: {}
  }

  type JobGetPayload<S extends boolean | null | undefined | JobDefaultArgs> = $Result.GetResult<Prisma.$JobPayload, S>

  type JobCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JobFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JobCountAggregateInputType | true
    }

  export interface JobDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Job'], meta: { name: 'Job' } }
    /**
     * Find zero or one Job that matches the filter.
     * @param {JobFindUniqueArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobFindUniqueArgs>(args: SelectSubset<T, JobFindUniqueArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Job that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JobFindUniqueOrThrowArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobFindUniqueOrThrowArgs>(args: SelectSubset<T, JobFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Job that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindFirstArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobFindFirstArgs>(args?: SelectSubset<T, JobFindFirstArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Job that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindFirstOrThrowArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobFindFirstOrThrowArgs>(args?: SelectSubset<T, JobFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Jobs
     * const jobs = await prisma.job.findMany()
     * 
     * // Get first 10 Jobs
     * const jobs = await prisma.job.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobWithIdOnly = await prisma.job.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobFindManyArgs>(args?: SelectSubset<T, JobFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Job.
     * @param {JobCreateArgs} args - Arguments to create a Job.
     * @example
     * // Create one Job
     * const Job = await prisma.job.create({
     *   data: {
     *     // ... data to create a Job
     *   }
     * })
     * 
     */
    create<T extends JobCreateArgs>(args: SelectSubset<T, JobCreateArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Jobs.
     * @param {JobCreateManyArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const job = await prisma.job.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobCreateManyArgs>(args?: SelectSubset<T, JobCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Jobs and returns the data saved in the database.
     * @param {JobCreateManyAndReturnArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const job = await prisma.job.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Jobs and only return the `id`
     * const jobWithIdOnly = await prisma.job.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobCreateManyAndReturnArgs>(args?: SelectSubset<T, JobCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Job.
     * @param {JobDeleteArgs} args - Arguments to delete one Job.
     * @example
     * // Delete one Job
     * const Job = await prisma.job.delete({
     *   where: {
     *     // ... filter to delete one Job
     *   }
     * })
     * 
     */
    delete<T extends JobDeleteArgs>(args: SelectSubset<T, JobDeleteArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Job.
     * @param {JobUpdateArgs} args - Arguments to update one Job.
     * @example
     * // Update one Job
     * const job = await prisma.job.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobUpdateArgs>(args: SelectSubset<T, JobUpdateArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Jobs.
     * @param {JobDeleteManyArgs} args - Arguments to filter Jobs to delete.
     * @example
     * // Delete a few Jobs
     * const { count } = await prisma.job.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobDeleteManyArgs>(args?: SelectSubset<T, JobDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Jobs
     * const job = await prisma.job.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobUpdateManyArgs>(args: SelectSubset<T, JobUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jobs and returns the data updated in the database.
     * @param {JobUpdateManyAndReturnArgs} args - Arguments to update many Jobs.
     * @example
     * // Update many Jobs
     * const job = await prisma.job.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Jobs and only return the `id`
     * const jobWithIdOnly = await prisma.job.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends JobUpdateManyAndReturnArgs>(args: SelectSubset<T, JobUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Job.
     * @param {JobUpsertArgs} args - Arguments to update or create a Job.
     * @example
     * // Update or create a Job
     * const job = await prisma.job.upsert({
     *   create: {
     *     // ... data to create a Job
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Job we want to update
     *   }
     * })
     */
    upsert<T extends JobUpsertArgs>(args: SelectSubset<T, JobUpsertArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCountArgs} args - Arguments to filter Jobs to count.
     * @example
     * // Count the number of Jobs
     * const count = await prisma.job.count({
     *   where: {
     *     // ... the filter for the Jobs we want to count
     *   }
     * })
    **/
    count<T extends JobCountArgs>(
      args?: Subset<T, JobCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Job.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobAggregateArgs>(args: Subset<T, JobAggregateArgs>): Prisma.PrismaPromise<GetJobAggregateType<T>>

    /**
     * Group by Job.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobGroupByArgs['orderBy'] }
        : { orderBy?: JobGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Job model
   */
  readonly fields: JobFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Job.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employer<T extends EmployerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployerDefaultArgs<ExtArgs>>): Prisma__EmployerClient<$Result.GetResult<Prisma.$EmployerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    industry<T extends Job$industryArgs<ExtArgs> = {}>(args?: Subset<T, Job$industryArgs<ExtArgs>>): Prisma__IndustryClient<$Result.GetResult<Prisma.$IndustryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    skills<T extends Job$skillsArgs<ExtArgs> = {}>(args?: Subset<T, Job$skillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applications<T extends Job$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, Job$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends Job$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Job$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Job model
   */
  interface JobFieldRefs {
    readonly id: FieldRef<"Job", 'Int'>
    readonly employerId: FieldRef<"Job", 'Int'>
    readonly industryId: FieldRef<"Job", 'Int'>
    readonly title: FieldRef<"Job", 'String'>
    readonly titleJp: FieldRef<"Job", 'String'>
    readonly description: FieldRef<"Job", 'String'>
    readonly descriptionJp: FieldRef<"Job", 'String'>
    readonly requirements: FieldRef<"Job", 'String'>
    readonly requirementsJp: FieldRef<"Job", 'String'>
    readonly benefits: FieldRef<"Job", 'String'>
    readonly benefitsJp: FieldRef<"Job", 'String'>
    readonly appealPoints: FieldRef<"Job", 'String[]'>
    readonly salaryMin: FieldRef<"Job", 'Decimal'>
    readonly salaryMax: FieldRef<"Job", 'Decimal'>
    readonly salaryType: FieldRef<"Job", 'SalaryType'>
    readonly salaryDetails: FieldRef<"Job", 'String'>
    readonly country: FieldRef<"Job", 'String'>
    readonly prefecture: FieldRef<"Job", 'String'>
    readonly city: FieldRef<"Job", 'String'>
    readonly addressDetail: FieldRef<"Job", 'String'>
    readonly nearestStation: FieldRef<"Job", 'String'>
    readonly isRemote: FieldRef<"Job", 'Boolean'>
    readonly remoteDetails: FieldRef<"Job", 'String'>
    readonly jobType: FieldRef<"Job", 'JobTypeEnum'>
    readonly status: FieldRef<"Job", 'JobStatus'>
    readonly postedDate: FieldRef<"Job", 'DateTime'>
    readonly expiryDate: FieldRef<"Job", 'DateTime'>
    readonly externalApplicationUrl: FieldRef<"Job", 'String'>
    readonly hiringStages: FieldRef<"Job", 'String[]'>
    readonly workingHoursDescription: FieldRef<"Job", 'String'>
    readonly isFlexTime: FieldRef<"Job", 'Boolean'>
    readonly coreTimeDescription: FieldRef<"Job", 'String'>
    readonly actualWorkingHoursPerDay: FieldRef<"Job", 'Decimal'>
    readonly avgOvertimeHoursPerMonth: FieldRef<"Job", 'Decimal'>
    readonly requiredJapaneseLevel: FieldRef<"Job", 'JapaneseProficiencyLevel'>
    readonly requiredEnglishLevel: FieldRef<"Job", 'ProficiencyLevel'>
    readonly otherLanguageRequirements: FieldRef<"Job", 'String'>
    readonly visaSupportAvailable: FieldRef<"Job", 'Boolean'>
    readonly relocationSupportAvailable: FieldRef<"Job", 'Boolean'>
    readonly housingSupportDetails: FieldRef<"Job", 'String'>
    readonly foreignFriendlyEnvironment: FieldRef<"Job", 'Boolean'>
    readonly targetCandidateDescription: FieldRef<"Job", 'String'>
    readonly numberOfHires: FieldRef<"Job", 'Int'>
    readonly createdAt: FieldRef<"Job", 'DateTime'>
    readonly updatedAt: FieldRef<"Job", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Job findUnique
   */
  export type JobFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job findUniqueOrThrow
   */
  export type JobFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job findFirst
   */
  export type JobFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jobs.
     */
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job findFirstOrThrow
   */
  export type JobFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jobs.
     */
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job findMany
   */
  export type JobFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Jobs to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job create
   */
  export type JobCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * The data needed to create a Job.
     */
    data: XOR<JobCreateInput, JobUncheckedCreateInput>
  }

  /**
   * Job createMany
   */
  export type JobCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Jobs.
     */
    data: JobCreateManyInput | JobCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Job createManyAndReturn
   */
  export type JobCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * The data used to create many Jobs.
     */
    data: JobCreateManyInput | JobCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Job update
   */
  export type JobUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * The data needed to update a Job.
     */
    data: XOR<JobUpdateInput, JobUncheckedUpdateInput>
    /**
     * Choose, which Job to update.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job updateMany
   */
  export type JobUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Jobs.
     */
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyInput>
    /**
     * Filter which Jobs to update
     */
    where?: JobWhereInput
    /**
     * Limit how many Jobs to update.
     */
    limit?: number
  }

  /**
   * Job updateManyAndReturn
   */
  export type JobUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * The data used to update Jobs.
     */
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyInput>
    /**
     * Filter which Jobs to update
     */
    where?: JobWhereInput
    /**
     * Limit how many Jobs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Job upsert
   */
  export type JobUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * The filter to search for the Job to update in case it exists.
     */
    where: JobWhereUniqueInput
    /**
     * In case the Job found by the `where` argument doesn't exist, create a new Job with this data.
     */
    create: XOR<JobCreateInput, JobUncheckedCreateInput>
    /**
     * In case the Job was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobUpdateInput, JobUncheckedUpdateInput>
  }

  /**
   * Job delete
   */
  export type JobDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter which Job to delete.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job deleteMany
   */
  export type JobDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Jobs to delete
     */
    where?: JobWhereInput
    /**
     * Limit how many Jobs to delete.
     */
    limit?: number
  }

  /**
   * Job.industry
   */
  export type Job$industryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Industry
     */
    select?: IndustrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Industry
     */
    omit?: IndustryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IndustryInclude<ExtArgs> | null
    where?: IndustryWhereInput
  }

  /**
   * Job.skills
   */
  export type Job$skillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    where?: JobSkillWhereInput
    orderBy?: JobSkillOrderByWithRelationInput | JobSkillOrderByWithRelationInput[]
    cursor?: JobSkillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobSkillScalarFieldEnum | JobSkillScalarFieldEnum[]
  }

  /**
   * Job.applications
   */
  export type Job$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Job.documents
   */
  export type Job$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    where?: JobDocumentWhereInput
    orderBy?: JobDocumentOrderByWithRelationInput | JobDocumentOrderByWithRelationInput[]
    cursor?: JobDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobDocumentScalarFieldEnum | JobDocumentScalarFieldEnum[]
  }

  /**
   * Job without action
   */
  export type JobDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
  }


  /**
   * Model JobSkill
   */

  export type AggregateJobSkill = {
    _count: JobSkillCountAggregateOutputType | null
    _avg: JobSkillAvgAggregateOutputType | null
    _sum: JobSkillSumAggregateOutputType | null
    _min: JobSkillMinAggregateOutputType | null
    _max: JobSkillMaxAggregateOutputType | null
  }

  export type JobSkillAvgAggregateOutputType = {
    id: number | null
    jobId: number | null
    skillId: number | null
    importanceLevel: number | null
    requiredYears: number | null
  }

  export type JobSkillSumAggregateOutputType = {
    id: number | null
    jobId: number | null
    skillId: number | null
    importanceLevel: number | null
    requiredYears: number | null
  }

  export type JobSkillMinAggregateOutputType = {
    id: number | null
    jobId: number | null
    skillId: number | null
    importanceLevel: number | null
    requiredYears: number | null
  }

  export type JobSkillMaxAggregateOutputType = {
    id: number | null
    jobId: number | null
    skillId: number | null
    importanceLevel: number | null
    requiredYears: number | null
  }

  export type JobSkillCountAggregateOutputType = {
    id: number
    jobId: number
    skillId: number
    importanceLevel: number
    requiredYears: number
    _all: number
  }


  export type JobSkillAvgAggregateInputType = {
    id?: true
    jobId?: true
    skillId?: true
    importanceLevel?: true
    requiredYears?: true
  }

  export type JobSkillSumAggregateInputType = {
    id?: true
    jobId?: true
    skillId?: true
    importanceLevel?: true
    requiredYears?: true
  }

  export type JobSkillMinAggregateInputType = {
    id?: true
    jobId?: true
    skillId?: true
    importanceLevel?: true
    requiredYears?: true
  }

  export type JobSkillMaxAggregateInputType = {
    id?: true
    jobId?: true
    skillId?: true
    importanceLevel?: true
    requiredYears?: true
  }

  export type JobSkillCountAggregateInputType = {
    id?: true
    jobId?: true
    skillId?: true
    importanceLevel?: true
    requiredYears?: true
    _all?: true
  }

  export type JobSkillAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobSkill to aggregate.
     */
    where?: JobSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobSkills to fetch.
     */
    orderBy?: JobSkillOrderByWithRelationInput | JobSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobSkills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobSkills
    **/
    _count?: true | JobSkillCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobSkillAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobSkillSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobSkillMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobSkillMaxAggregateInputType
  }

  export type GetJobSkillAggregateType<T extends JobSkillAggregateArgs> = {
        [P in keyof T & keyof AggregateJobSkill]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobSkill[P]>
      : GetScalarType<T[P], AggregateJobSkill[P]>
  }




  export type JobSkillGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobSkillWhereInput
    orderBy?: JobSkillOrderByWithAggregationInput | JobSkillOrderByWithAggregationInput[]
    by: JobSkillScalarFieldEnum[] | JobSkillScalarFieldEnum
    having?: JobSkillScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobSkillCountAggregateInputType | true
    _avg?: JobSkillAvgAggregateInputType
    _sum?: JobSkillSumAggregateInputType
    _min?: JobSkillMinAggregateInputType
    _max?: JobSkillMaxAggregateInputType
  }

  export type JobSkillGroupByOutputType = {
    id: number
    jobId: number
    skillId: number
    importanceLevel: number | null
    requiredYears: number | null
    _count: JobSkillCountAggregateOutputType | null
    _avg: JobSkillAvgAggregateOutputType | null
    _sum: JobSkillSumAggregateOutputType | null
    _min: JobSkillMinAggregateOutputType | null
    _max: JobSkillMaxAggregateOutputType | null
  }

  type GetJobSkillGroupByPayload<T extends JobSkillGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobSkillGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobSkillGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobSkillGroupByOutputType[P]>
            : GetScalarType<T[P], JobSkillGroupByOutputType[P]>
        }
      >
    >


  export type JobSkillSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    skillId?: boolean
    importanceLevel?: boolean
    requiredYears?: boolean
    job?: boolean | JobDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobSkill"]>

  export type JobSkillSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    skillId?: boolean
    importanceLevel?: boolean
    requiredYears?: boolean
    job?: boolean | JobDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobSkill"]>

  export type JobSkillSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    skillId?: boolean
    importanceLevel?: boolean
    requiredYears?: boolean
    job?: boolean | JobDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobSkill"]>

  export type JobSkillSelectScalar = {
    id?: boolean
    jobId?: boolean
    skillId?: boolean
    importanceLevel?: boolean
    requiredYears?: boolean
  }

  export type JobSkillOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "jobId" | "skillId" | "importanceLevel" | "requiredYears", ExtArgs["result"]["jobSkill"]>
  export type JobSkillInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | JobDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }
  export type JobSkillIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | JobDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }
  export type JobSkillIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | JobDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }

  export type $JobSkillPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobSkill"
    objects: {
      job: Prisma.$JobPayload<ExtArgs>
      skill: Prisma.$SkillPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      jobId: number
      skillId: number
      /**
       * Mức độ quan trọng (1: Có thì tốt ~ 5: Bắt buộc)
       */
      importanceLevel: number | null
      /**
       * Số năm kinh nghiệm yêu cầu (tùy chọn)
       */
      requiredYears: number | null
    }, ExtArgs["result"]["jobSkill"]>
    composites: {}
  }

  type JobSkillGetPayload<S extends boolean | null | undefined | JobSkillDefaultArgs> = $Result.GetResult<Prisma.$JobSkillPayload, S>

  type JobSkillCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JobSkillFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JobSkillCountAggregateInputType | true
    }

  export interface JobSkillDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobSkill'], meta: { name: 'JobSkill' } }
    /**
     * Find zero or one JobSkill that matches the filter.
     * @param {JobSkillFindUniqueArgs} args - Arguments to find a JobSkill
     * @example
     * // Get one JobSkill
     * const jobSkill = await prisma.jobSkill.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobSkillFindUniqueArgs>(args: SelectSubset<T, JobSkillFindUniqueArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one JobSkill that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JobSkillFindUniqueOrThrowArgs} args - Arguments to find a JobSkill
     * @example
     * // Get one JobSkill
     * const jobSkill = await prisma.jobSkill.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobSkillFindUniqueOrThrowArgs>(args: SelectSubset<T, JobSkillFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobSkill that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobSkillFindFirstArgs} args - Arguments to find a JobSkill
     * @example
     * // Get one JobSkill
     * const jobSkill = await prisma.jobSkill.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobSkillFindFirstArgs>(args?: SelectSubset<T, JobSkillFindFirstArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobSkill that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobSkillFindFirstOrThrowArgs} args - Arguments to find a JobSkill
     * @example
     * // Get one JobSkill
     * const jobSkill = await prisma.jobSkill.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobSkillFindFirstOrThrowArgs>(args?: SelectSubset<T, JobSkillFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more JobSkills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobSkillFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobSkills
     * const jobSkills = await prisma.jobSkill.findMany()
     * 
     * // Get first 10 JobSkills
     * const jobSkills = await prisma.jobSkill.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobSkillWithIdOnly = await prisma.jobSkill.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobSkillFindManyArgs>(args?: SelectSubset<T, JobSkillFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a JobSkill.
     * @param {JobSkillCreateArgs} args - Arguments to create a JobSkill.
     * @example
     * // Create one JobSkill
     * const JobSkill = await prisma.jobSkill.create({
     *   data: {
     *     // ... data to create a JobSkill
     *   }
     * })
     * 
     */
    create<T extends JobSkillCreateArgs>(args: SelectSubset<T, JobSkillCreateArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many JobSkills.
     * @param {JobSkillCreateManyArgs} args - Arguments to create many JobSkills.
     * @example
     * // Create many JobSkills
     * const jobSkill = await prisma.jobSkill.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobSkillCreateManyArgs>(args?: SelectSubset<T, JobSkillCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobSkills and returns the data saved in the database.
     * @param {JobSkillCreateManyAndReturnArgs} args - Arguments to create many JobSkills.
     * @example
     * // Create many JobSkills
     * const jobSkill = await prisma.jobSkill.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobSkills and only return the `id`
     * const jobSkillWithIdOnly = await prisma.jobSkill.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobSkillCreateManyAndReturnArgs>(args?: SelectSubset<T, JobSkillCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a JobSkill.
     * @param {JobSkillDeleteArgs} args - Arguments to delete one JobSkill.
     * @example
     * // Delete one JobSkill
     * const JobSkill = await prisma.jobSkill.delete({
     *   where: {
     *     // ... filter to delete one JobSkill
     *   }
     * })
     * 
     */
    delete<T extends JobSkillDeleteArgs>(args: SelectSubset<T, JobSkillDeleteArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one JobSkill.
     * @param {JobSkillUpdateArgs} args - Arguments to update one JobSkill.
     * @example
     * // Update one JobSkill
     * const jobSkill = await prisma.jobSkill.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobSkillUpdateArgs>(args: SelectSubset<T, JobSkillUpdateArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more JobSkills.
     * @param {JobSkillDeleteManyArgs} args - Arguments to filter JobSkills to delete.
     * @example
     * // Delete a few JobSkills
     * const { count } = await prisma.jobSkill.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobSkillDeleteManyArgs>(args?: SelectSubset<T, JobSkillDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobSkills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobSkillUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobSkills
     * const jobSkill = await prisma.jobSkill.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobSkillUpdateManyArgs>(args: SelectSubset<T, JobSkillUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobSkills and returns the data updated in the database.
     * @param {JobSkillUpdateManyAndReturnArgs} args - Arguments to update many JobSkills.
     * @example
     * // Update many JobSkills
     * const jobSkill = await prisma.jobSkill.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more JobSkills and only return the `id`
     * const jobSkillWithIdOnly = await prisma.jobSkill.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends JobSkillUpdateManyAndReturnArgs>(args: SelectSubset<T, JobSkillUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one JobSkill.
     * @param {JobSkillUpsertArgs} args - Arguments to update or create a JobSkill.
     * @example
     * // Update or create a JobSkill
     * const jobSkill = await prisma.jobSkill.upsert({
     *   create: {
     *     // ... data to create a JobSkill
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobSkill we want to update
     *   }
     * })
     */
    upsert<T extends JobSkillUpsertArgs>(args: SelectSubset<T, JobSkillUpsertArgs<ExtArgs>>): Prisma__JobSkillClient<$Result.GetResult<Prisma.$JobSkillPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of JobSkills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobSkillCountArgs} args - Arguments to filter JobSkills to count.
     * @example
     * // Count the number of JobSkills
     * const count = await prisma.jobSkill.count({
     *   where: {
     *     // ... the filter for the JobSkills we want to count
     *   }
     * })
    **/
    count<T extends JobSkillCountArgs>(
      args?: Subset<T, JobSkillCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobSkillCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobSkill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobSkillAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobSkillAggregateArgs>(args: Subset<T, JobSkillAggregateArgs>): Prisma.PrismaPromise<GetJobSkillAggregateType<T>>

    /**
     * Group by JobSkill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobSkillGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobSkillGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobSkillGroupByArgs['orderBy'] }
        : { orderBy?: JobSkillGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobSkillGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobSkillGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobSkill model
   */
  readonly fields: JobSkillFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobSkill.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobSkillClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    job<T extends JobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobDefaultArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    skill<T extends SkillDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SkillDefaultArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobSkill model
   */
  interface JobSkillFieldRefs {
    readonly id: FieldRef<"JobSkill", 'Int'>
    readonly jobId: FieldRef<"JobSkill", 'Int'>
    readonly skillId: FieldRef<"JobSkill", 'Int'>
    readonly importanceLevel: FieldRef<"JobSkill", 'Int'>
    readonly requiredYears: FieldRef<"JobSkill", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * JobSkill findUnique
   */
  export type JobSkillFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * Filter, which JobSkill to fetch.
     */
    where: JobSkillWhereUniqueInput
  }

  /**
   * JobSkill findUniqueOrThrow
   */
  export type JobSkillFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * Filter, which JobSkill to fetch.
     */
    where: JobSkillWhereUniqueInput
  }

  /**
   * JobSkill findFirst
   */
  export type JobSkillFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * Filter, which JobSkill to fetch.
     */
    where?: JobSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobSkills to fetch.
     */
    orderBy?: JobSkillOrderByWithRelationInput | JobSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobSkills.
     */
    cursor?: JobSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobSkills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobSkills.
     */
    distinct?: JobSkillScalarFieldEnum | JobSkillScalarFieldEnum[]
  }

  /**
   * JobSkill findFirstOrThrow
   */
  export type JobSkillFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * Filter, which JobSkill to fetch.
     */
    where?: JobSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobSkills to fetch.
     */
    orderBy?: JobSkillOrderByWithRelationInput | JobSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobSkills.
     */
    cursor?: JobSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobSkills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobSkills.
     */
    distinct?: JobSkillScalarFieldEnum | JobSkillScalarFieldEnum[]
  }

  /**
   * JobSkill findMany
   */
  export type JobSkillFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * Filter, which JobSkills to fetch.
     */
    where?: JobSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobSkills to fetch.
     */
    orderBy?: JobSkillOrderByWithRelationInput | JobSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobSkills.
     */
    cursor?: JobSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobSkills.
     */
    skip?: number
    distinct?: JobSkillScalarFieldEnum | JobSkillScalarFieldEnum[]
  }

  /**
   * JobSkill create
   */
  export type JobSkillCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * The data needed to create a JobSkill.
     */
    data: XOR<JobSkillCreateInput, JobSkillUncheckedCreateInput>
  }

  /**
   * JobSkill createMany
   */
  export type JobSkillCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobSkills.
     */
    data: JobSkillCreateManyInput | JobSkillCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobSkill createManyAndReturn
   */
  export type JobSkillCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * The data used to create many JobSkills.
     */
    data: JobSkillCreateManyInput | JobSkillCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobSkill update
   */
  export type JobSkillUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * The data needed to update a JobSkill.
     */
    data: XOR<JobSkillUpdateInput, JobSkillUncheckedUpdateInput>
    /**
     * Choose, which JobSkill to update.
     */
    where: JobSkillWhereUniqueInput
  }

  /**
   * JobSkill updateMany
   */
  export type JobSkillUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobSkills.
     */
    data: XOR<JobSkillUpdateManyMutationInput, JobSkillUncheckedUpdateManyInput>
    /**
     * Filter which JobSkills to update
     */
    where?: JobSkillWhereInput
    /**
     * Limit how many JobSkills to update.
     */
    limit?: number
  }

  /**
   * JobSkill updateManyAndReturn
   */
  export type JobSkillUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * The data used to update JobSkills.
     */
    data: XOR<JobSkillUpdateManyMutationInput, JobSkillUncheckedUpdateManyInput>
    /**
     * Filter which JobSkills to update
     */
    where?: JobSkillWhereInput
    /**
     * Limit how many JobSkills to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobSkill upsert
   */
  export type JobSkillUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * The filter to search for the JobSkill to update in case it exists.
     */
    where: JobSkillWhereUniqueInput
    /**
     * In case the JobSkill found by the `where` argument doesn't exist, create a new JobSkill with this data.
     */
    create: XOR<JobSkillCreateInput, JobSkillUncheckedCreateInput>
    /**
     * In case the JobSkill was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobSkillUpdateInput, JobSkillUncheckedUpdateInput>
  }

  /**
   * JobSkill delete
   */
  export type JobSkillDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
    /**
     * Filter which JobSkill to delete.
     */
    where: JobSkillWhereUniqueInput
  }

  /**
   * JobSkill deleteMany
   */
  export type JobSkillDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobSkills to delete
     */
    where?: JobSkillWhereInput
    /**
     * Limit how many JobSkills to delete.
     */
    limit?: number
  }

  /**
   * JobSkill without action
   */
  export type JobSkillDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobSkill
     */
    select?: JobSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobSkill
     */
    omit?: JobSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobSkillInclude<ExtArgs> | null
  }


  /**
   * Model CandidateSkill
   */

  export type AggregateCandidateSkill = {
    _count: CandidateSkillCountAggregateOutputType | null
    _avg: CandidateSkillAvgAggregateOutputType | null
    _sum: CandidateSkillSumAggregateOutputType | null
    _min: CandidateSkillMinAggregateOutputType | null
    _max: CandidateSkillMaxAggregateOutputType | null
  }

  export type CandidateSkillAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
    skillId: number | null
    experienceMonths: number | null
  }

  export type CandidateSkillSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
    skillId: number | null
    experienceMonths: number | null
  }

  export type CandidateSkillMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    skillId: number | null
    proficiencyLevel: $Enums.ProficiencyLevel | null
    experienceMonths: number | null
  }

  export type CandidateSkillMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    skillId: number | null
    proficiencyLevel: $Enums.ProficiencyLevel | null
    experienceMonths: number | null
  }

  export type CandidateSkillCountAggregateOutputType = {
    id: number
    candidateId: number
    skillId: number
    proficiencyLevel: number
    experienceMonths: number
    _all: number
  }


  export type CandidateSkillAvgAggregateInputType = {
    id?: true
    candidateId?: true
    skillId?: true
    experienceMonths?: true
  }

  export type CandidateSkillSumAggregateInputType = {
    id?: true
    candidateId?: true
    skillId?: true
    experienceMonths?: true
  }

  export type CandidateSkillMinAggregateInputType = {
    id?: true
    candidateId?: true
    skillId?: true
    proficiencyLevel?: true
    experienceMonths?: true
  }

  export type CandidateSkillMaxAggregateInputType = {
    id?: true
    candidateId?: true
    skillId?: true
    proficiencyLevel?: true
    experienceMonths?: true
  }

  export type CandidateSkillCountAggregateInputType = {
    id?: true
    candidateId?: true
    skillId?: true
    proficiencyLevel?: true
    experienceMonths?: true
    _all?: true
  }

  export type CandidateSkillAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CandidateSkill to aggregate.
     */
    where?: CandidateSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateSkills to fetch.
     */
    orderBy?: CandidateSkillOrderByWithRelationInput | CandidateSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CandidateSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateSkills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CandidateSkills
    **/
    _count?: true | CandidateSkillCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CandidateSkillAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CandidateSkillSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidateSkillMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidateSkillMaxAggregateInputType
  }

  export type GetCandidateSkillAggregateType<T extends CandidateSkillAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidateSkill]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidateSkill[P]>
      : GetScalarType<T[P], AggregateCandidateSkill[P]>
  }




  export type CandidateSkillGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidateSkillWhereInput
    orderBy?: CandidateSkillOrderByWithAggregationInput | CandidateSkillOrderByWithAggregationInput[]
    by: CandidateSkillScalarFieldEnum[] | CandidateSkillScalarFieldEnum
    having?: CandidateSkillScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidateSkillCountAggregateInputType | true
    _avg?: CandidateSkillAvgAggregateInputType
    _sum?: CandidateSkillSumAggregateInputType
    _min?: CandidateSkillMinAggregateInputType
    _max?: CandidateSkillMaxAggregateInputType
  }

  export type CandidateSkillGroupByOutputType = {
    id: number
    candidateId: number
    skillId: number
    proficiencyLevel: $Enums.ProficiencyLevel | null
    experienceMonths: number | null
    _count: CandidateSkillCountAggregateOutputType | null
    _avg: CandidateSkillAvgAggregateOutputType | null
    _sum: CandidateSkillSumAggregateOutputType | null
    _min: CandidateSkillMinAggregateOutputType | null
    _max: CandidateSkillMaxAggregateOutputType | null
  }

  type GetCandidateSkillGroupByPayload<T extends CandidateSkillGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidateSkillGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidateSkillGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidateSkillGroupByOutputType[P]>
            : GetScalarType<T[P], CandidateSkillGroupByOutputType[P]>
        }
      >
    >


  export type CandidateSkillSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    skillId?: boolean
    proficiencyLevel?: boolean
    experienceMonths?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidateSkill"]>

  export type CandidateSkillSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    skillId?: boolean
    proficiencyLevel?: boolean
    experienceMonths?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidateSkill"]>

  export type CandidateSkillSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    skillId?: boolean
    proficiencyLevel?: boolean
    experienceMonths?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidateSkill"]>

  export type CandidateSkillSelectScalar = {
    id?: boolean
    candidateId?: boolean
    skillId?: boolean
    proficiencyLevel?: boolean
    experienceMonths?: boolean
  }

  export type CandidateSkillOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "skillId" | "proficiencyLevel" | "experienceMonths", ExtArgs["result"]["candidateSkill"]>
  export type CandidateSkillInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }
  export type CandidateSkillIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }
  export type CandidateSkillIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    skill?: boolean | SkillDefaultArgs<ExtArgs>
  }

  export type $CandidateSkillPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CandidateSkill"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
      skill: Prisma.$SkillPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      skillId: number
      /**
       * Mức độ thành thạo
       */
      proficiencyLevel: $Enums.ProficiencyLevel | null
      /**
       * Số tháng kinh nghiệm
       */
      experienceMonths: number | null
    }, ExtArgs["result"]["candidateSkill"]>
    composites: {}
  }

  type CandidateSkillGetPayload<S extends boolean | null | undefined | CandidateSkillDefaultArgs> = $Result.GetResult<Prisma.$CandidateSkillPayload, S>

  type CandidateSkillCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CandidateSkillFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CandidateSkillCountAggregateInputType | true
    }

  export interface CandidateSkillDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CandidateSkill'], meta: { name: 'CandidateSkill' } }
    /**
     * Find zero or one CandidateSkill that matches the filter.
     * @param {CandidateSkillFindUniqueArgs} args - Arguments to find a CandidateSkill
     * @example
     * // Get one CandidateSkill
     * const candidateSkill = await prisma.candidateSkill.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CandidateSkillFindUniqueArgs>(args: SelectSubset<T, CandidateSkillFindUniqueArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CandidateSkill that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CandidateSkillFindUniqueOrThrowArgs} args - Arguments to find a CandidateSkill
     * @example
     * // Get one CandidateSkill
     * const candidateSkill = await prisma.candidateSkill.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CandidateSkillFindUniqueOrThrowArgs>(args: SelectSubset<T, CandidateSkillFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CandidateSkill that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateSkillFindFirstArgs} args - Arguments to find a CandidateSkill
     * @example
     * // Get one CandidateSkill
     * const candidateSkill = await prisma.candidateSkill.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CandidateSkillFindFirstArgs>(args?: SelectSubset<T, CandidateSkillFindFirstArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CandidateSkill that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateSkillFindFirstOrThrowArgs} args - Arguments to find a CandidateSkill
     * @example
     * // Get one CandidateSkill
     * const candidateSkill = await prisma.candidateSkill.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CandidateSkillFindFirstOrThrowArgs>(args?: SelectSubset<T, CandidateSkillFindFirstOrThrowArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CandidateSkills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateSkillFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CandidateSkills
     * const candidateSkills = await prisma.candidateSkill.findMany()
     * 
     * // Get first 10 CandidateSkills
     * const candidateSkills = await prisma.candidateSkill.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const candidateSkillWithIdOnly = await prisma.candidateSkill.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CandidateSkillFindManyArgs>(args?: SelectSubset<T, CandidateSkillFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CandidateSkill.
     * @param {CandidateSkillCreateArgs} args - Arguments to create a CandidateSkill.
     * @example
     * // Create one CandidateSkill
     * const CandidateSkill = await prisma.candidateSkill.create({
     *   data: {
     *     // ... data to create a CandidateSkill
     *   }
     * })
     * 
     */
    create<T extends CandidateSkillCreateArgs>(args: SelectSubset<T, CandidateSkillCreateArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CandidateSkills.
     * @param {CandidateSkillCreateManyArgs} args - Arguments to create many CandidateSkills.
     * @example
     * // Create many CandidateSkills
     * const candidateSkill = await prisma.candidateSkill.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CandidateSkillCreateManyArgs>(args?: SelectSubset<T, CandidateSkillCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CandidateSkills and returns the data saved in the database.
     * @param {CandidateSkillCreateManyAndReturnArgs} args - Arguments to create many CandidateSkills.
     * @example
     * // Create many CandidateSkills
     * const candidateSkill = await prisma.candidateSkill.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CandidateSkills and only return the `id`
     * const candidateSkillWithIdOnly = await prisma.candidateSkill.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CandidateSkillCreateManyAndReturnArgs>(args?: SelectSubset<T, CandidateSkillCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CandidateSkill.
     * @param {CandidateSkillDeleteArgs} args - Arguments to delete one CandidateSkill.
     * @example
     * // Delete one CandidateSkill
     * const CandidateSkill = await prisma.candidateSkill.delete({
     *   where: {
     *     // ... filter to delete one CandidateSkill
     *   }
     * })
     * 
     */
    delete<T extends CandidateSkillDeleteArgs>(args: SelectSubset<T, CandidateSkillDeleteArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CandidateSkill.
     * @param {CandidateSkillUpdateArgs} args - Arguments to update one CandidateSkill.
     * @example
     * // Update one CandidateSkill
     * const candidateSkill = await prisma.candidateSkill.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CandidateSkillUpdateArgs>(args: SelectSubset<T, CandidateSkillUpdateArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CandidateSkills.
     * @param {CandidateSkillDeleteManyArgs} args - Arguments to filter CandidateSkills to delete.
     * @example
     * // Delete a few CandidateSkills
     * const { count } = await prisma.candidateSkill.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CandidateSkillDeleteManyArgs>(args?: SelectSubset<T, CandidateSkillDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CandidateSkills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateSkillUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CandidateSkills
     * const candidateSkill = await prisma.candidateSkill.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CandidateSkillUpdateManyArgs>(args: SelectSubset<T, CandidateSkillUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CandidateSkills and returns the data updated in the database.
     * @param {CandidateSkillUpdateManyAndReturnArgs} args - Arguments to update many CandidateSkills.
     * @example
     * // Update many CandidateSkills
     * const candidateSkill = await prisma.candidateSkill.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CandidateSkills and only return the `id`
     * const candidateSkillWithIdOnly = await prisma.candidateSkill.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CandidateSkillUpdateManyAndReturnArgs>(args: SelectSubset<T, CandidateSkillUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CandidateSkill.
     * @param {CandidateSkillUpsertArgs} args - Arguments to update or create a CandidateSkill.
     * @example
     * // Update or create a CandidateSkill
     * const candidateSkill = await prisma.candidateSkill.upsert({
     *   create: {
     *     // ... data to create a CandidateSkill
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CandidateSkill we want to update
     *   }
     * })
     */
    upsert<T extends CandidateSkillUpsertArgs>(args: SelectSubset<T, CandidateSkillUpsertArgs<ExtArgs>>): Prisma__CandidateSkillClient<$Result.GetResult<Prisma.$CandidateSkillPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CandidateSkills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateSkillCountArgs} args - Arguments to filter CandidateSkills to count.
     * @example
     * // Count the number of CandidateSkills
     * const count = await prisma.candidateSkill.count({
     *   where: {
     *     // ... the filter for the CandidateSkills we want to count
     *   }
     * })
    **/
    count<T extends CandidateSkillCountArgs>(
      args?: Subset<T, CandidateSkillCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidateSkillCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CandidateSkill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateSkillAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidateSkillAggregateArgs>(args: Subset<T, CandidateSkillAggregateArgs>): Prisma.PrismaPromise<GetCandidateSkillAggregateType<T>>

    /**
     * Group by CandidateSkill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateSkillGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CandidateSkillGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CandidateSkillGroupByArgs['orderBy'] }
        : { orderBy?: CandidateSkillGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CandidateSkillGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidateSkillGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CandidateSkill model
   */
  readonly fields: CandidateSkillFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CandidateSkill.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CandidateSkillClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    skill<T extends SkillDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SkillDefaultArgs<ExtArgs>>): Prisma__SkillClient<$Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CandidateSkill model
   */
  interface CandidateSkillFieldRefs {
    readonly id: FieldRef<"CandidateSkill", 'Int'>
    readonly candidateId: FieldRef<"CandidateSkill", 'Int'>
    readonly skillId: FieldRef<"CandidateSkill", 'Int'>
    readonly proficiencyLevel: FieldRef<"CandidateSkill", 'ProficiencyLevel'>
    readonly experienceMonths: FieldRef<"CandidateSkill", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CandidateSkill findUnique
   */
  export type CandidateSkillFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * Filter, which CandidateSkill to fetch.
     */
    where: CandidateSkillWhereUniqueInput
  }

  /**
   * CandidateSkill findUniqueOrThrow
   */
  export type CandidateSkillFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * Filter, which CandidateSkill to fetch.
     */
    where: CandidateSkillWhereUniqueInput
  }

  /**
   * CandidateSkill findFirst
   */
  export type CandidateSkillFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * Filter, which CandidateSkill to fetch.
     */
    where?: CandidateSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateSkills to fetch.
     */
    orderBy?: CandidateSkillOrderByWithRelationInput | CandidateSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CandidateSkills.
     */
    cursor?: CandidateSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateSkills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CandidateSkills.
     */
    distinct?: CandidateSkillScalarFieldEnum | CandidateSkillScalarFieldEnum[]
  }

  /**
   * CandidateSkill findFirstOrThrow
   */
  export type CandidateSkillFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * Filter, which CandidateSkill to fetch.
     */
    where?: CandidateSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateSkills to fetch.
     */
    orderBy?: CandidateSkillOrderByWithRelationInput | CandidateSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CandidateSkills.
     */
    cursor?: CandidateSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateSkills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CandidateSkills.
     */
    distinct?: CandidateSkillScalarFieldEnum | CandidateSkillScalarFieldEnum[]
  }

  /**
   * CandidateSkill findMany
   */
  export type CandidateSkillFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * Filter, which CandidateSkills to fetch.
     */
    where?: CandidateSkillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateSkills to fetch.
     */
    orderBy?: CandidateSkillOrderByWithRelationInput | CandidateSkillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CandidateSkills.
     */
    cursor?: CandidateSkillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateSkills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateSkills.
     */
    skip?: number
    distinct?: CandidateSkillScalarFieldEnum | CandidateSkillScalarFieldEnum[]
  }

  /**
   * CandidateSkill create
   */
  export type CandidateSkillCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * The data needed to create a CandidateSkill.
     */
    data: XOR<CandidateSkillCreateInput, CandidateSkillUncheckedCreateInput>
  }

  /**
   * CandidateSkill createMany
   */
  export type CandidateSkillCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CandidateSkills.
     */
    data: CandidateSkillCreateManyInput | CandidateSkillCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CandidateSkill createManyAndReturn
   */
  export type CandidateSkillCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * The data used to create many CandidateSkills.
     */
    data: CandidateSkillCreateManyInput | CandidateSkillCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CandidateSkill update
   */
  export type CandidateSkillUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * The data needed to update a CandidateSkill.
     */
    data: XOR<CandidateSkillUpdateInput, CandidateSkillUncheckedUpdateInput>
    /**
     * Choose, which CandidateSkill to update.
     */
    where: CandidateSkillWhereUniqueInput
  }

  /**
   * CandidateSkill updateMany
   */
  export type CandidateSkillUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CandidateSkills.
     */
    data: XOR<CandidateSkillUpdateManyMutationInput, CandidateSkillUncheckedUpdateManyInput>
    /**
     * Filter which CandidateSkills to update
     */
    where?: CandidateSkillWhereInput
    /**
     * Limit how many CandidateSkills to update.
     */
    limit?: number
  }

  /**
   * CandidateSkill updateManyAndReturn
   */
  export type CandidateSkillUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * The data used to update CandidateSkills.
     */
    data: XOR<CandidateSkillUpdateManyMutationInput, CandidateSkillUncheckedUpdateManyInput>
    /**
     * Filter which CandidateSkills to update
     */
    where?: CandidateSkillWhereInput
    /**
     * Limit how many CandidateSkills to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CandidateSkill upsert
   */
  export type CandidateSkillUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * The filter to search for the CandidateSkill to update in case it exists.
     */
    where: CandidateSkillWhereUniqueInput
    /**
     * In case the CandidateSkill found by the `where` argument doesn't exist, create a new CandidateSkill with this data.
     */
    create: XOR<CandidateSkillCreateInput, CandidateSkillUncheckedCreateInput>
    /**
     * In case the CandidateSkill was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CandidateSkillUpdateInput, CandidateSkillUncheckedUpdateInput>
  }

  /**
   * CandidateSkill delete
   */
  export type CandidateSkillDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
    /**
     * Filter which CandidateSkill to delete.
     */
    where: CandidateSkillWhereUniqueInput
  }

  /**
   * CandidateSkill deleteMany
   */
  export type CandidateSkillDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CandidateSkills to delete
     */
    where?: CandidateSkillWhereInput
    /**
     * Limit how many CandidateSkills to delete.
     */
    limit?: number
  }

  /**
   * CandidateSkill without action
   */
  export type CandidateSkillDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateSkill
     */
    select?: CandidateSkillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateSkill
     */
    omit?: CandidateSkillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateSkillInclude<ExtArgs> | null
  }


  /**
   * Model CV
   */

  export type AggregateCV = {
    _count: CVCountAggregateOutputType | null
    _avg: CVAvgAggregateOutputType | null
    _sum: CVSumAggregateOutputType | null
    _min: CVMinAggregateOutputType | null
    _max: CVMaxAggregateOutputType | null
  }

  export type CVAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type CVSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type CVMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    fileName: string | null
    fileUrl: string | null
    fileType: $Enums.FileTypeEnum | null
    language: string | null
    isPrimary: boolean | null
    uploadedAt: Date | null
  }

  export type CVMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    fileName: string | null
    fileUrl: string | null
    fileType: $Enums.FileTypeEnum | null
    language: string | null
    isPrimary: boolean | null
    uploadedAt: Date | null
  }

  export type CVCountAggregateOutputType = {
    id: number
    candidateId: number
    fileName: number
    fileUrl: number
    fileType: number
    language: number
    isPrimary: number
    uploadedAt: number
    _all: number
  }


  export type CVAvgAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type CVSumAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type CVMinAggregateInputType = {
    id?: true
    candidateId?: true
    fileName?: true
    fileUrl?: true
    fileType?: true
    language?: true
    isPrimary?: true
    uploadedAt?: true
  }

  export type CVMaxAggregateInputType = {
    id?: true
    candidateId?: true
    fileName?: true
    fileUrl?: true
    fileType?: true
    language?: true
    isPrimary?: true
    uploadedAt?: true
  }

  export type CVCountAggregateInputType = {
    id?: true
    candidateId?: true
    fileName?: true
    fileUrl?: true
    fileType?: true
    language?: true
    isPrimary?: true
    uploadedAt?: true
    _all?: true
  }

  export type CVAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CV to aggregate.
     */
    where?: CVWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CVS to fetch.
     */
    orderBy?: CVOrderByWithRelationInput | CVOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CVWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CVS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CVS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CVS
    **/
    _count?: true | CVCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CVAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CVSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CVMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CVMaxAggregateInputType
  }

  export type GetCVAggregateType<T extends CVAggregateArgs> = {
        [P in keyof T & keyof AggregateCV]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCV[P]>
      : GetScalarType<T[P], AggregateCV[P]>
  }




  export type CVGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CVWhereInput
    orderBy?: CVOrderByWithAggregationInput | CVOrderByWithAggregationInput[]
    by: CVScalarFieldEnum[] | CVScalarFieldEnum
    having?: CVScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CVCountAggregateInputType | true
    _avg?: CVAvgAggregateInputType
    _sum?: CVSumAggregateInputType
    _min?: CVMinAggregateInputType
    _max?: CVMaxAggregateInputType
  }

  export type CVGroupByOutputType = {
    id: number
    candidateId: number
    fileName: string
    fileUrl: string
    fileType: $Enums.FileTypeEnum | null
    language: string | null
    isPrimary: boolean
    uploadedAt: Date
    _count: CVCountAggregateOutputType | null
    _avg: CVAvgAggregateOutputType | null
    _sum: CVSumAggregateOutputType | null
    _min: CVMinAggregateOutputType | null
    _max: CVMaxAggregateOutputType | null
  }

  type GetCVGroupByPayload<T extends CVGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CVGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CVGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CVGroupByOutputType[P]>
            : GetScalarType<T[P], CVGroupByOutputType[P]>
        }
      >
    >


  export type CVSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileType?: boolean
    language?: boolean
    isPrimary?: boolean
    uploadedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    applications?: boolean | CV$applicationsArgs<ExtArgs>
    _count?: boolean | CVCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cV"]>

  export type CVSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileType?: boolean
    language?: boolean
    isPrimary?: boolean
    uploadedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cV"]>

  export type CVSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileType?: boolean
    language?: boolean
    isPrimary?: boolean
    uploadedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cV"]>

  export type CVSelectScalar = {
    id?: boolean
    candidateId?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileType?: boolean
    language?: boolean
    isPrimary?: boolean
    uploadedAt?: boolean
  }

  export type CVOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "fileName" | "fileUrl" | "fileType" | "language" | "isPrimary" | "uploadedAt", ExtArgs["result"]["cV"]>
  export type CVInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    applications?: boolean | CV$applicationsArgs<ExtArgs>
    _count?: boolean | CVCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CVIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type CVIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }

  export type $CVPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CV"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      /**
       * Tên tệp (nên có định dạng rõ ràng, vd: NguyenVanA_CV_JP.pdf)
       */
      fileName: string
      fileUrl: string
      fileType: $Enums.FileTypeEnum | null
      /**
       * Ngôn ngữ của CV (e.g., 'ja', 'en', 'vi')
       */
      language: string | null
      /**
       * Cờ CV chính (nên cho phép set 1 primary cho mỗi ngôn ngữ)
       */
      isPrimary: boolean
      uploadedAt: Date
    }, ExtArgs["result"]["cV"]>
    composites: {}
  }

  type CVGetPayload<S extends boolean | null | undefined | CVDefaultArgs> = $Result.GetResult<Prisma.$CVPayload, S>

  type CVCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CVFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CVCountAggregateInputType | true
    }

  export interface CVDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CV'], meta: { name: 'CV' } }
    /**
     * Find zero or one CV that matches the filter.
     * @param {CVFindUniqueArgs} args - Arguments to find a CV
     * @example
     * // Get one CV
     * const cV = await prisma.cV.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CVFindUniqueArgs>(args: SelectSubset<T, CVFindUniqueArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CV that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CVFindUniqueOrThrowArgs} args - Arguments to find a CV
     * @example
     * // Get one CV
     * const cV = await prisma.cV.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CVFindUniqueOrThrowArgs>(args: SelectSubset<T, CVFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CV that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CVFindFirstArgs} args - Arguments to find a CV
     * @example
     * // Get one CV
     * const cV = await prisma.cV.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CVFindFirstArgs>(args?: SelectSubset<T, CVFindFirstArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CV that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CVFindFirstOrThrowArgs} args - Arguments to find a CV
     * @example
     * // Get one CV
     * const cV = await prisma.cV.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CVFindFirstOrThrowArgs>(args?: SelectSubset<T, CVFindFirstOrThrowArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CVS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CVFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CVS
     * const cVS = await prisma.cV.findMany()
     * 
     * // Get first 10 CVS
     * const cVS = await prisma.cV.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cVWithIdOnly = await prisma.cV.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CVFindManyArgs>(args?: SelectSubset<T, CVFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CV.
     * @param {CVCreateArgs} args - Arguments to create a CV.
     * @example
     * // Create one CV
     * const CV = await prisma.cV.create({
     *   data: {
     *     // ... data to create a CV
     *   }
     * })
     * 
     */
    create<T extends CVCreateArgs>(args: SelectSubset<T, CVCreateArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CVS.
     * @param {CVCreateManyArgs} args - Arguments to create many CVS.
     * @example
     * // Create many CVS
     * const cV = await prisma.cV.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CVCreateManyArgs>(args?: SelectSubset<T, CVCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CVS and returns the data saved in the database.
     * @param {CVCreateManyAndReturnArgs} args - Arguments to create many CVS.
     * @example
     * // Create many CVS
     * const cV = await prisma.cV.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CVS and only return the `id`
     * const cVWithIdOnly = await prisma.cV.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CVCreateManyAndReturnArgs>(args?: SelectSubset<T, CVCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CV.
     * @param {CVDeleteArgs} args - Arguments to delete one CV.
     * @example
     * // Delete one CV
     * const CV = await prisma.cV.delete({
     *   where: {
     *     // ... filter to delete one CV
     *   }
     * })
     * 
     */
    delete<T extends CVDeleteArgs>(args: SelectSubset<T, CVDeleteArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CV.
     * @param {CVUpdateArgs} args - Arguments to update one CV.
     * @example
     * // Update one CV
     * const cV = await prisma.cV.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CVUpdateArgs>(args: SelectSubset<T, CVUpdateArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CVS.
     * @param {CVDeleteManyArgs} args - Arguments to filter CVS to delete.
     * @example
     * // Delete a few CVS
     * const { count } = await prisma.cV.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CVDeleteManyArgs>(args?: SelectSubset<T, CVDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CVS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CVUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CVS
     * const cV = await prisma.cV.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CVUpdateManyArgs>(args: SelectSubset<T, CVUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CVS and returns the data updated in the database.
     * @param {CVUpdateManyAndReturnArgs} args - Arguments to update many CVS.
     * @example
     * // Update many CVS
     * const cV = await prisma.cV.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CVS and only return the `id`
     * const cVWithIdOnly = await prisma.cV.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CVUpdateManyAndReturnArgs>(args: SelectSubset<T, CVUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CV.
     * @param {CVUpsertArgs} args - Arguments to update or create a CV.
     * @example
     * // Update or create a CV
     * const cV = await prisma.cV.upsert({
     *   create: {
     *     // ... data to create a CV
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CV we want to update
     *   }
     * })
     */
    upsert<T extends CVUpsertArgs>(args: SelectSubset<T, CVUpsertArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CVS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CVCountArgs} args - Arguments to filter CVS to count.
     * @example
     * // Count the number of CVS
     * const count = await prisma.cV.count({
     *   where: {
     *     // ... the filter for the CVS we want to count
     *   }
     * })
    **/
    count<T extends CVCountArgs>(
      args?: Subset<T, CVCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CVCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CV.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CVAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CVAggregateArgs>(args: Subset<T, CVAggregateArgs>): Prisma.PrismaPromise<GetCVAggregateType<T>>

    /**
     * Group by CV.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CVGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CVGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CVGroupByArgs['orderBy'] }
        : { orderBy?: CVGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CVGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCVGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CV model
   */
  readonly fields: CVFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CV.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CVClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    applications<T extends CV$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, CV$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CV model
   */
  interface CVFieldRefs {
    readonly id: FieldRef<"CV", 'Int'>
    readonly candidateId: FieldRef<"CV", 'Int'>
    readonly fileName: FieldRef<"CV", 'String'>
    readonly fileUrl: FieldRef<"CV", 'String'>
    readonly fileType: FieldRef<"CV", 'FileTypeEnum'>
    readonly language: FieldRef<"CV", 'String'>
    readonly isPrimary: FieldRef<"CV", 'Boolean'>
    readonly uploadedAt: FieldRef<"CV", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CV findUnique
   */
  export type CVFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * Filter, which CV to fetch.
     */
    where: CVWhereUniqueInput
  }

  /**
   * CV findUniqueOrThrow
   */
  export type CVFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * Filter, which CV to fetch.
     */
    where: CVWhereUniqueInput
  }

  /**
   * CV findFirst
   */
  export type CVFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * Filter, which CV to fetch.
     */
    where?: CVWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CVS to fetch.
     */
    orderBy?: CVOrderByWithRelationInput | CVOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CVS.
     */
    cursor?: CVWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CVS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CVS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CVS.
     */
    distinct?: CVScalarFieldEnum | CVScalarFieldEnum[]
  }

  /**
   * CV findFirstOrThrow
   */
  export type CVFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * Filter, which CV to fetch.
     */
    where?: CVWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CVS to fetch.
     */
    orderBy?: CVOrderByWithRelationInput | CVOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CVS.
     */
    cursor?: CVWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CVS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CVS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CVS.
     */
    distinct?: CVScalarFieldEnum | CVScalarFieldEnum[]
  }

  /**
   * CV findMany
   */
  export type CVFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * Filter, which CVS to fetch.
     */
    where?: CVWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CVS to fetch.
     */
    orderBy?: CVOrderByWithRelationInput | CVOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CVS.
     */
    cursor?: CVWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CVS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CVS.
     */
    skip?: number
    distinct?: CVScalarFieldEnum | CVScalarFieldEnum[]
  }

  /**
   * CV create
   */
  export type CVCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * The data needed to create a CV.
     */
    data: XOR<CVCreateInput, CVUncheckedCreateInput>
  }

  /**
   * CV createMany
   */
  export type CVCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CVS.
     */
    data: CVCreateManyInput | CVCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CV createManyAndReturn
   */
  export type CVCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * The data used to create many CVS.
     */
    data: CVCreateManyInput | CVCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CV update
   */
  export type CVUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * The data needed to update a CV.
     */
    data: XOR<CVUpdateInput, CVUncheckedUpdateInput>
    /**
     * Choose, which CV to update.
     */
    where: CVWhereUniqueInput
  }

  /**
   * CV updateMany
   */
  export type CVUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CVS.
     */
    data: XOR<CVUpdateManyMutationInput, CVUncheckedUpdateManyInput>
    /**
     * Filter which CVS to update
     */
    where?: CVWhereInput
    /**
     * Limit how many CVS to update.
     */
    limit?: number
  }

  /**
   * CV updateManyAndReturn
   */
  export type CVUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * The data used to update CVS.
     */
    data: XOR<CVUpdateManyMutationInput, CVUncheckedUpdateManyInput>
    /**
     * Filter which CVS to update
     */
    where?: CVWhereInput
    /**
     * Limit how many CVS to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CV upsert
   */
  export type CVUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * The filter to search for the CV to update in case it exists.
     */
    where: CVWhereUniqueInput
    /**
     * In case the CV found by the `where` argument doesn't exist, create a new CV with this data.
     */
    create: XOR<CVCreateInput, CVUncheckedCreateInput>
    /**
     * In case the CV was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CVUpdateInput, CVUncheckedUpdateInput>
  }

  /**
   * CV delete
   */
  export type CVDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
    /**
     * Filter which CV to delete.
     */
    where: CVWhereUniqueInput
  }

  /**
   * CV deleteMany
   */
  export type CVDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CVS to delete
     */
    where?: CVWhereInput
    /**
     * Limit how many CVS to delete.
     */
    limit?: number
  }

  /**
   * CV.applications
   */
  export type CV$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * CV without action
   */
  export type CVDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CV
     */
    select?: CVSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CV
     */
    omit?: CVOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CVInclude<ExtArgs> | null
  }


  /**
   * Model Application
   */

  export type AggregateApplication = {
    _count: ApplicationCountAggregateOutputType | null
    _avg: ApplicationAvgAggregateOutputType | null
    _sum: ApplicationSumAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  export type ApplicationAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
    jobId: number | null
    cvId: number | null
    currentStageIndex: number | null
    matchScore: Decimal | null
    manualScore: Decimal | null
    lastUpdatedById: number | null
  }

  export type ApplicationSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
    jobId: number | null
    cvId: number | null
    currentStageIndex: number | null
    matchScore: Decimal | null
    manualScore: Decimal | null
    lastUpdatedById: number | null
  }

  export type ApplicationMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    jobId: number | null
    cvId: number | null
    coverLetter: string | null
    applicationDate: Date | null
    status: $Enums.ApplicationStatus | null
    statusMessage: string | null
    currentStageIndex: number | null
    internalNotes: string | null
    candidateNotes: string | null
    isBookmarked: boolean | null
    matchScore: Decimal | null
    manualScore: Decimal | null
    lastUpdatedById: number | null
  }

  export type ApplicationMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    jobId: number | null
    cvId: number | null
    coverLetter: string | null
    applicationDate: Date | null
    status: $Enums.ApplicationStatus | null
    statusMessage: string | null
    currentStageIndex: number | null
    internalNotes: string | null
    candidateNotes: string | null
    isBookmarked: boolean | null
    matchScore: Decimal | null
    manualScore: Decimal | null
    lastUpdatedById: number | null
  }

  export type ApplicationCountAggregateOutputType = {
    id: number
    candidateId: number
    jobId: number
    cvId: number
    coverLetter: number
    applicationDate: number
    status: number
    statusMessage: number
    currentStageIndex: number
    internalNotes: number
    candidateNotes: number
    processLog: number
    isBookmarked: number
    matchScore: number
    manualScore: number
    offerDetails: number
    lastUpdatedById: number
    _all: number
  }


  export type ApplicationAvgAggregateInputType = {
    id?: true
    candidateId?: true
    jobId?: true
    cvId?: true
    currentStageIndex?: true
    matchScore?: true
    manualScore?: true
    lastUpdatedById?: true
  }

  export type ApplicationSumAggregateInputType = {
    id?: true
    candidateId?: true
    jobId?: true
    cvId?: true
    currentStageIndex?: true
    matchScore?: true
    manualScore?: true
    lastUpdatedById?: true
  }

  export type ApplicationMinAggregateInputType = {
    id?: true
    candidateId?: true
    jobId?: true
    cvId?: true
    coverLetter?: true
    applicationDate?: true
    status?: true
    statusMessage?: true
    currentStageIndex?: true
    internalNotes?: true
    candidateNotes?: true
    isBookmarked?: true
    matchScore?: true
    manualScore?: true
    lastUpdatedById?: true
  }

  export type ApplicationMaxAggregateInputType = {
    id?: true
    candidateId?: true
    jobId?: true
    cvId?: true
    coverLetter?: true
    applicationDate?: true
    status?: true
    statusMessage?: true
    currentStageIndex?: true
    internalNotes?: true
    candidateNotes?: true
    isBookmarked?: true
    matchScore?: true
    manualScore?: true
    lastUpdatedById?: true
  }

  export type ApplicationCountAggregateInputType = {
    id?: true
    candidateId?: true
    jobId?: true
    cvId?: true
    coverLetter?: true
    applicationDate?: true
    status?: true
    statusMessage?: true
    currentStageIndex?: true
    internalNotes?: true
    candidateNotes?: true
    processLog?: true
    isBookmarked?: true
    matchScore?: true
    manualScore?: true
    offerDetails?: true
    lastUpdatedById?: true
    _all?: true
  }

  export type ApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Application to aggregate.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Applications
    **/
    _count?: true | ApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApplicationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApplicationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationMaxAggregateInputType
  }

  export type GetApplicationAggregateType<T extends ApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplication[P]>
      : GetScalarType<T[P], AggregateApplication[P]>
  }




  export type ApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithAggregationInput | ApplicationOrderByWithAggregationInput[]
    by: ApplicationScalarFieldEnum[] | ApplicationScalarFieldEnum
    having?: ApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationCountAggregateInputType | true
    _avg?: ApplicationAvgAggregateInputType
    _sum?: ApplicationSumAggregateInputType
    _min?: ApplicationMinAggregateInputType
    _max?: ApplicationMaxAggregateInputType
  }

  export type ApplicationGroupByOutputType = {
    id: number
    candidateId: number
    jobId: number
    cvId: number
    coverLetter: string | null
    applicationDate: Date
    status: $Enums.ApplicationStatus
    statusMessage: string | null
    currentStageIndex: number | null
    internalNotes: string | null
    candidateNotes: string | null
    processLog: JsonValue | null
    isBookmarked: boolean | null
    matchScore: Decimal | null
    manualScore: Decimal | null
    offerDetails: JsonValue | null
    lastUpdatedById: number | null
    _count: ApplicationCountAggregateOutputType | null
    _avg: ApplicationAvgAggregateOutputType | null
    _sum: ApplicationSumAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  type GetApplicationGroupByPayload<T extends ApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    jobId?: boolean
    cvId?: boolean
    coverLetter?: boolean
    applicationDate?: boolean
    status?: boolean
    statusMessage?: boolean
    currentStageIndex?: boolean
    internalNotes?: boolean
    candidateNotes?: boolean
    processLog?: boolean
    isBookmarked?: boolean
    matchScore?: boolean
    manualScore?: boolean
    offerDetails?: boolean
    lastUpdatedById?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    job?: boolean | JobDefaultArgs<ExtArgs>
    cv?: boolean | CVDefaultArgs<ExtArgs>
    lastUpdatedBy?: boolean | Application$lastUpdatedByArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    jobId?: boolean
    cvId?: boolean
    coverLetter?: boolean
    applicationDate?: boolean
    status?: boolean
    statusMessage?: boolean
    currentStageIndex?: boolean
    internalNotes?: boolean
    candidateNotes?: boolean
    processLog?: boolean
    isBookmarked?: boolean
    matchScore?: boolean
    manualScore?: boolean
    offerDetails?: boolean
    lastUpdatedById?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    job?: boolean | JobDefaultArgs<ExtArgs>
    cv?: boolean | CVDefaultArgs<ExtArgs>
    lastUpdatedBy?: boolean | Application$lastUpdatedByArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    jobId?: boolean
    cvId?: boolean
    coverLetter?: boolean
    applicationDate?: boolean
    status?: boolean
    statusMessage?: boolean
    currentStageIndex?: boolean
    internalNotes?: boolean
    candidateNotes?: boolean
    processLog?: boolean
    isBookmarked?: boolean
    matchScore?: boolean
    manualScore?: boolean
    offerDetails?: boolean
    lastUpdatedById?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    job?: boolean | JobDefaultArgs<ExtArgs>
    cv?: boolean | CVDefaultArgs<ExtArgs>
    lastUpdatedBy?: boolean | Application$lastUpdatedByArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectScalar = {
    id?: boolean
    candidateId?: boolean
    jobId?: boolean
    cvId?: boolean
    coverLetter?: boolean
    applicationDate?: boolean
    status?: boolean
    statusMessage?: boolean
    currentStageIndex?: boolean
    internalNotes?: boolean
    candidateNotes?: boolean
    processLog?: boolean
    isBookmarked?: boolean
    matchScore?: boolean
    manualScore?: boolean
    offerDetails?: boolean
    lastUpdatedById?: boolean
  }

  export type ApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "jobId" | "cvId" | "coverLetter" | "applicationDate" | "status" | "statusMessage" | "currentStageIndex" | "internalNotes" | "candidateNotes" | "processLog" | "isBookmarked" | "matchScore" | "manualScore" | "offerDetails" | "lastUpdatedById", ExtArgs["result"]["application"]>
  export type ApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    job?: boolean | JobDefaultArgs<ExtArgs>
    cv?: boolean | CVDefaultArgs<ExtArgs>
    lastUpdatedBy?: boolean | Application$lastUpdatedByArgs<ExtArgs>
  }
  export type ApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    job?: boolean | JobDefaultArgs<ExtArgs>
    cv?: boolean | CVDefaultArgs<ExtArgs>
    lastUpdatedBy?: boolean | Application$lastUpdatedByArgs<ExtArgs>
  }
  export type ApplicationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    job?: boolean | JobDefaultArgs<ExtArgs>
    cv?: boolean | CVDefaultArgs<ExtArgs>
    lastUpdatedBy?: boolean | Application$lastUpdatedByArgs<ExtArgs>
  }

  export type $ApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Application"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
      job: Prisma.$JobPayload<ExtArgs>
      cv: Prisma.$CVPayload<ExtArgs>
      lastUpdatedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      jobId: number
      /**
       * ID của CV đã sử dụng
       */
      cvId: number
      /**
       * Thư xin việc (có thể theo ngôn ngữ CV)
       */
      coverLetter: string | null
      applicationDate: Date
      status: $Enums.ApplicationStatus
      statusMessage: string | null
      currentStageIndex: number | null
      internalNotes: string | null
      candidateNotes: string | null
      processLog: Prisma.JsonValue | null
      isBookmarked: boolean | null
      matchScore: Prisma.Decimal | null
      manualScore: Prisma.Decimal | null
      offerDetails: Prisma.JsonValue | null
      lastUpdatedById: number | null
    }, ExtArgs["result"]["application"]>
    composites: {}
  }

  type ApplicationGetPayload<S extends boolean | null | undefined | ApplicationDefaultArgs> = $Result.GetResult<Prisma.$ApplicationPayload, S>

  type ApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApplicationCountAggregateInputType | true
    }

  export interface ApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Application'], meta: { name: 'Application' } }
    /**
     * Find zero or one Application that matches the filter.
     * @param {ApplicationFindUniqueArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationFindUniqueArgs>(args: SelectSubset<T, ApplicationFindUniqueArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Application that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApplicationFindUniqueOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Application that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationFindFirstArgs>(args?: SelectSubset<T, ApplicationFindFirstArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Application that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Applications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Applications
     * const applications = await prisma.application.findMany()
     * 
     * // Get first 10 Applications
     * const applications = await prisma.application.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationWithIdOnly = await prisma.application.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApplicationFindManyArgs>(args?: SelectSubset<T, ApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Application.
     * @param {ApplicationCreateArgs} args - Arguments to create a Application.
     * @example
     * // Create one Application
     * const Application = await prisma.application.create({
     *   data: {
     *     // ... data to create a Application
     *   }
     * })
     * 
     */
    create<T extends ApplicationCreateArgs>(args: SelectSubset<T, ApplicationCreateArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Applications.
     * @param {ApplicationCreateManyArgs} args - Arguments to create many Applications.
     * @example
     * // Create many Applications
     * const application = await prisma.application.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationCreateManyArgs>(args?: SelectSubset<T, ApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Applications and returns the data saved in the database.
     * @param {ApplicationCreateManyAndReturnArgs} args - Arguments to create many Applications.
     * @example
     * // Create many Applications
     * const application = await prisma.application.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Applications and only return the `id`
     * const applicationWithIdOnly = await prisma.application.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, ApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Application.
     * @param {ApplicationDeleteArgs} args - Arguments to delete one Application.
     * @example
     * // Delete one Application
     * const Application = await prisma.application.delete({
     *   where: {
     *     // ... filter to delete one Application
     *   }
     * })
     * 
     */
    delete<T extends ApplicationDeleteArgs>(args: SelectSubset<T, ApplicationDeleteArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Application.
     * @param {ApplicationUpdateArgs} args - Arguments to update one Application.
     * @example
     * // Update one Application
     * const application = await prisma.application.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationUpdateArgs>(args: SelectSubset<T, ApplicationUpdateArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Applications.
     * @param {ApplicationDeleteManyArgs} args - Arguments to filter Applications to delete.
     * @example
     * // Delete a few Applications
     * const { count } = await prisma.application.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationDeleteManyArgs>(args?: SelectSubset<T, ApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Applications
     * const application = await prisma.application.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationUpdateManyArgs>(args: SelectSubset<T, ApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Applications and returns the data updated in the database.
     * @param {ApplicationUpdateManyAndReturnArgs} args - Arguments to update many Applications.
     * @example
     * // Update many Applications
     * const application = await prisma.application.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Applications and only return the `id`
     * const applicationWithIdOnly = await prisma.application.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApplicationUpdateManyAndReturnArgs>(args: SelectSubset<T, ApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Application.
     * @param {ApplicationUpsertArgs} args - Arguments to update or create a Application.
     * @example
     * // Update or create a Application
     * const application = await prisma.application.upsert({
     *   create: {
     *     // ... data to create a Application
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Application we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationUpsertArgs>(args: SelectSubset<T, ApplicationUpsertArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCountArgs} args - Arguments to filter Applications to count.
     * @example
     * // Count the number of Applications
     * const count = await prisma.application.count({
     *   where: {
     *     // ... the filter for the Applications we want to count
     *   }
     * })
    **/
    count<T extends ApplicationCountArgs>(
      args?: Subset<T, ApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationAggregateArgs>(args: Subset<T, ApplicationAggregateArgs>): Prisma.PrismaPromise<GetApplicationAggregateType<T>>

    /**
     * Group by Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Application model
   */
  readonly fields: ApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Application.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    job<T extends JobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobDefaultArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cv<T extends CVDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CVDefaultArgs<ExtArgs>>): Prisma__CVClient<$Result.GetResult<Prisma.$CVPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    lastUpdatedBy<T extends Application$lastUpdatedByArgs<ExtArgs> = {}>(args?: Subset<T, Application$lastUpdatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Application model
   */
  interface ApplicationFieldRefs {
    readonly id: FieldRef<"Application", 'Int'>
    readonly candidateId: FieldRef<"Application", 'Int'>
    readonly jobId: FieldRef<"Application", 'Int'>
    readonly cvId: FieldRef<"Application", 'Int'>
    readonly coverLetter: FieldRef<"Application", 'String'>
    readonly applicationDate: FieldRef<"Application", 'DateTime'>
    readonly status: FieldRef<"Application", 'ApplicationStatus'>
    readonly statusMessage: FieldRef<"Application", 'String'>
    readonly currentStageIndex: FieldRef<"Application", 'Int'>
    readonly internalNotes: FieldRef<"Application", 'String'>
    readonly candidateNotes: FieldRef<"Application", 'String'>
    readonly processLog: FieldRef<"Application", 'Json'>
    readonly isBookmarked: FieldRef<"Application", 'Boolean'>
    readonly matchScore: FieldRef<"Application", 'Decimal'>
    readonly manualScore: FieldRef<"Application", 'Decimal'>
    readonly offerDetails: FieldRef<"Application", 'Json'>
    readonly lastUpdatedById: FieldRef<"Application", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Application findUnique
   */
  export type ApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application findUniqueOrThrow
   */
  export type ApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application findFirst
   */
  export type ApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application findFirstOrThrow
   */
  export type ApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application findMany
   */
  export type ApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Applications to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application create
   */
  export type ApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a Application.
     */
    data: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
  }

  /**
   * Application createMany
   */
  export type ApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Applications.
     */
    data: ApplicationCreateManyInput | ApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Application createManyAndReturn
   */
  export type ApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * The data used to create many Applications.
     */
    data: ApplicationCreateManyInput | ApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Application update
   */
  export type ApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a Application.
     */
    data: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
    /**
     * Choose, which Application to update.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application updateMany
   */
  export type ApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Applications.
     */
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyInput>
    /**
     * Filter which Applications to update
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to update.
     */
    limit?: number
  }

  /**
   * Application updateManyAndReturn
   */
  export type ApplicationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * The data used to update Applications.
     */
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyInput>
    /**
     * Filter which Applications to update
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Application upsert
   */
  export type ApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the Application to update in case it exists.
     */
    where: ApplicationWhereUniqueInput
    /**
     * In case the Application found by the `where` argument doesn't exist, create a new Application with this data.
     */
    create: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
    /**
     * In case the Application was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
  }

  /**
   * Application delete
   */
  export type ApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter which Application to delete.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application deleteMany
   */
  export type ApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Applications to delete
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to delete.
     */
    limit?: number
  }

  /**
   * Application.lastUpdatedBy
   */
  export type Application$lastUpdatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Application without action
   */
  export type ApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
  }


  /**
   * Model Education
   */

  export type AggregateEducation = {
    _count: EducationCountAggregateOutputType | null
    _avg: EducationAvgAggregateOutputType | null
    _sum: EducationSumAggregateOutputType | null
    _min: EducationMinAggregateOutputType | null
    _max: EducationMaxAggregateOutputType | null
  }

  export type EducationAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
    gpa: Decimal | null
  }

  export type EducationSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
    gpa: Decimal | null
  }

  export type EducationMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    universityName: string | null
    facultyDepartment: string | null
    degree: string | null
    major: string | null
    startDate: Date | null
    endDate: Date | null
    expectedGraduationDate: Date | null
    gpa: Decimal | null
    description: string | null
    descriptionJp: string | null
    country: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EducationMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    universityName: string | null
    facultyDepartment: string | null
    degree: string | null
    major: string | null
    startDate: Date | null
    endDate: Date | null
    expectedGraduationDate: Date | null
    gpa: Decimal | null
    description: string | null
    descriptionJp: string | null
    country: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EducationCountAggregateOutputType = {
    id: number
    candidateId: number
    universityName: number
    facultyDepartment: number
    degree: number
    major: number
    startDate: number
    endDate: number
    expectedGraduationDate: number
    gpa: number
    description: number
    descriptionJp: number
    country: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EducationAvgAggregateInputType = {
    id?: true
    candidateId?: true
    gpa?: true
  }

  export type EducationSumAggregateInputType = {
    id?: true
    candidateId?: true
    gpa?: true
  }

  export type EducationMinAggregateInputType = {
    id?: true
    candidateId?: true
    universityName?: true
    facultyDepartment?: true
    degree?: true
    major?: true
    startDate?: true
    endDate?: true
    expectedGraduationDate?: true
    gpa?: true
    description?: true
    descriptionJp?: true
    country?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EducationMaxAggregateInputType = {
    id?: true
    candidateId?: true
    universityName?: true
    facultyDepartment?: true
    degree?: true
    major?: true
    startDate?: true
    endDate?: true
    expectedGraduationDate?: true
    gpa?: true
    description?: true
    descriptionJp?: true
    country?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EducationCountAggregateInputType = {
    id?: true
    candidateId?: true
    universityName?: true
    facultyDepartment?: true
    degree?: true
    major?: true
    startDate?: true
    endDate?: true
    expectedGraduationDate?: true
    gpa?: true
    description?: true
    descriptionJp?: true
    country?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EducationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Education to aggregate.
     */
    where?: EducationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Educations to fetch.
     */
    orderBy?: EducationOrderByWithRelationInput | EducationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EducationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Educations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Educations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Educations
    **/
    _count?: true | EducationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EducationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EducationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EducationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EducationMaxAggregateInputType
  }

  export type GetEducationAggregateType<T extends EducationAggregateArgs> = {
        [P in keyof T & keyof AggregateEducation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEducation[P]>
      : GetScalarType<T[P], AggregateEducation[P]>
  }




  export type EducationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EducationWhereInput
    orderBy?: EducationOrderByWithAggregationInput | EducationOrderByWithAggregationInput[]
    by: EducationScalarFieldEnum[] | EducationScalarFieldEnum
    having?: EducationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EducationCountAggregateInputType | true
    _avg?: EducationAvgAggregateInputType
    _sum?: EducationSumAggregateInputType
    _min?: EducationMinAggregateInputType
    _max?: EducationMaxAggregateInputType
  }

  export type EducationGroupByOutputType = {
    id: number
    candidateId: number
    universityName: string
    facultyDepartment: string | null
    degree: string | null
    major: string | null
    startDate: Date | null
    endDate: Date | null
    expectedGraduationDate: Date | null
    gpa: Decimal | null
    description: string | null
    descriptionJp: string | null
    country: string | null
    createdAt: Date
    updatedAt: Date
    _count: EducationCountAggregateOutputType | null
    _avg: EducationAvgAggregateOutputType | null
    _sum: EducationSumAggregateOutputType | null
    _min: EducationMinAggregateOutputType | null
    _max: EducationMaxAggregateOutputType | null
  }

  type GetEducationGroupByPayload<T extends EducationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EducationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EducationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EducationGroupByOutputType[P]>
            : GetScalarType<T[P], EducationGroupByOutputType[P]>
        }
      >
    >


  export type EducationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    universityName?: boolean
    facultyDepartment?: boolean
    degree?: boolean
    major?: boolean
    startDate?: boolean
    endDate?: boolean
    expectedGraduationDate?: boolean
    gpa?: boolean
    description?: boolean
    descriptionJp?: boolean
    country?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["education"]>

  export type EducationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    universityName?: boolean
    facultyDepartment?: boolean
    degree?: boolean
    major?: boolean
    startDate?: boolean
    endDate?: boolean
    expectedGraduationDate?: boolean
    gpa?: boolean
    description?: boolean
    descriptionJp?: boolean
    country?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["education"]>

  export type EducationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    universityName?: boolean
    facultyDepartment?: boolean
    degree?: boolean
    major?: boolean
    startDate?: boolean
    endDate?: boolean
    expectedGraduationDate?: boolean
    gpa?: boolean
    description?: boolean
    descriptionJp?: boolean
    country?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["education"]>

  export type EducationSelectScalar = {
    id?: boolean
    candidateId?: boolean
    universityName?: boolean
    facultyDepartment?: boolean
    degree?: boolean
    major?: boolean
    startDate?: boolean
    endDate?: boolean
    expectedGraduationDate?: boolean
    gpa?: boolean
    description?: boolean
    descriptionJp?: boolean
    country?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EducationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "universityName" | "facultyDepartment" | "degree" | "major" | "startDate" | "endDate" | "expectedGraduationDate" | "gpa" | "description" | "descriptionJp" | "country" | "createdAt" | "updatedAt", ExtArgs["result"]["education"]>
  export type EducationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type EducationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type EducationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }

  export type $EducationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Education"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      universityName: string
      facultyDepartment: string | null
      degree: string | null
      major: string | null
      startDate: Date | null
      endDate: Date | null
      expectedGraduationDate: Date | null
      gpa: Prisma.Decimal | null
      /**
       * Mô tả/Thành tích (có thể tiếng Anh/Việt)
       */
      description: string | null
      /**
       * Mô tả/Thành tích (tiếng Nhật)
       */
      descriptionJp: string | null
      /**
       * Quốc gia học tập
       */
      country: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["education"]>
    composites: {}
  }

  type EducationGetPayload<S extends boolean | null | undefined | EducationDefaultArgs> = $Result.GetResult<Prisma.$EducationPayload, S>

  type EducationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EducationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EducationCountAggregateInputType | true
    }

  export interface EducationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Education'], meta: { name: 'Education' } }
    /**
     * Find zero or one Education that matches the filter.
     * @param {EducationFindUniqueArgs} args - Arguments to find a Education
     * @example
     * // Get one Education
     * const education = await prisma.education.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EducationFindUniqueArgs>(args: SelectSubset<T, EducationFindUniqueArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Education that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EducationFindUniqueOrThrowArgs} args - Arguments to find a Education
     * @example
     * // Get one Education
     * const education = await prisma.education.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EducationFindUniqueOrThrowArgs>(args: SelectSubset<T, EducationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Education that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationFindFirstArgs} args - Arguments to find a Education
     * @example
     * // Get one Education
     * const education = await prisma.education.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EducationFindFirstArgs>(args?: SelectSubset<T, EducationFindFirstArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Education that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationFindFirstOrThrowArgs} args - Arguments to find a Education
     * @example
     * // Get one Education
     * const education = await prisma.education.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EducationFindFirstOrThrowArgs>(args?: SelectSubset<T, EducationFindFirstOrThrowArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Educations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Educations
     * const educations = await prisma.education.findMany()
     * 
     * // Get first 10 Educations
     * const educations = await prisma.education.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const educationWithIdOnly = await prisma.education.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EducationFindManyArgs>(args?: SelectSubset<T, EducationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Education.
     * @param {EducationCreateArgs} args - Arguments to create a Education.
     * @example
     * // Create one Education
     * const Education = await prisma.education.create({
     *   data: {
     *     // ... data to create a Education
     *   }
     * })
     * 
     */
    create<T extends EducationCreateArgs>(args: SelectSubset<T, EducationCreateArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Educations.
     * @param {EducationCreateManyArgs} args - Arguments to create many Educations.
     * @example
     * // Create many Educations
     * const education = await prisma.education.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EducationCreateManyArgs>(args?: SelectSubset<T, EducationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Educations and returns the data saved in the database.
     * @param {EducationCreateManyAndReturnArgs} args - Arguments to create many Educations.
     * @example
     * // Create many Educations
     * const education = await prisma.education.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Educations and only return the `id`
     * const educationWithIdOnly = await prisma.education.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EducationCreateManyAndReturnArgs>(args?: SelectSubset<T, EducationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Education.
     * @param {EducationDeleteArgs} args - Arguments to delete one Education.
     * @example
     * // Delete one Education
     * const Education = await prisma.education.delete({
     *   where: {
     *     // ... filter to delete one Education
     *   }
     * })
     * 
     */
    delete<T extends EducationDeleteArgs>(args: SelectSubset<T, EducationDeleteArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Education.
     * @param {EducationUpdateArgs} args - Arguments to update one Education.
     * @example
     * // Update one Education
     * const education = await prisma.education.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EducationUpdateArgs>(args: SelectSubset<T, EducationUpdateArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Educations.
     * @param {EducationDeleteManyArgs} args - Arguments to filter Educations to delete.
     * @example
     * // Delete a few Educations
     * const { count } = await prisma.education.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EducationDeleteManyArgs>(args?: SelectSubset<T, EducationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Educations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Educations
     * const education = await prisma.education.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EducationUpdateManyArgs>(args: SelectSubset<T, EducationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Educations and returns the data updated in the database.
     * @param {EducationUpdateManyAndReturnArgs} args - Arguments to update many Educations.
     * @example
     * // Update many Educations
     * const education = await prisma.education.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Educations and only return the `id`
     * const educationWithIdOnly = await prisma.education.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EducationUpdateManyAndReturnArgs>(args: SelectSubset<T, EducationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Education.
     * @param {EducationUpsertArgs} args - Arguments to update or create a Education.
     * @example
     * // Update or create a Education
     * const education = await prisma.education.upsert({
     *   create: {
     *     // ... data to create a Education
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Education we want to update
     *   }
     * })
     */
    upsert<T extends EducationUpsertArgs>(args: SelectSubset<T, EducationUpsertArgs<ExtArgs>>): Prisma__EducationClient<$Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Educations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationCountArgs} args - Arguments to filter Educations to count.
     * @example
     * // Count the number of Educations
     * const count = await prisma.education.count({
     *   where: {
     *     // ... the filter for the Educations we want to count
     *   }
     * })
    **/
    count<T extends EducationCountArgs>(
      args?: Subset<T, EducationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EducationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Education.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EducationAggregateArgs>(args: Subset<T, EducationAggregateArgs>): Prisma.PrismaPromise<GetEducationAggregateType<T>>

    /**
     * Group by Education.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EducationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EducationGroupByArgs['orderBy'] }
        : { orderBy?: EducationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EducationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEducationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Education model
   */
  readonly fields: EducationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Education.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EducationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Education model
   */
  interface EducationFieldRefs {
    readonly id: FieldRef<"Education", 'Int'>
    readonly candidateId: FieldRef<"Education", 'Int'>
    readonly universityName: FieldRef<"Education", 'String'>
    readonly facultyDepartment: FieldRef<"Education", 'String'>
    readonly degree: FieldRef<"Education", 'String'>
    readonly major: FieldRef<"Education", 'String'>
    readonly startDate: FieldRef<"Education", 'DateTime'>
    readonly endDate: FieldRef<"Education", 'DateTime'>
    readonly expectedGraduationDate: FieldRef<"Education", 'DateTime'>
    readonly gpa: FieldRef<"Education", 'Decimal'>
    readonly description: FieldRef<"Education", 'String'>
    readonly descriptionJp: FieldRef<"Education", 'String'>
    readonly country: FieldRef<"Education", 'String'>
    readonly createdAt: FieldRef<"Education", 'DateTime'>
    readonly updatedAt: FieldRef<"Education", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Education findUnique
   */
  export type EducationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * Filter, which Education to fetch.
     */
    where: EducationWhereUniqueInput
  }

  /**
   * Education findUniqueOrThrow
   */
  export type EducationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * Filter, which Education to fetch.
     */
    where: EducationWhereUniqueInput
  }

  /**
   * Education findFirst
   */
  export type EducationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * Filter, which Education to fetch.
     */
    where?: EducationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Educations to fetch.
     */
    orderBy?: EducationOrderByWithRelationInput | EducationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Educations.
     */
    cursor?: EducationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Educations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Educations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Educations.
     */
    distinct?: EducationScalarFieldEnum | EducationScalarFieldEnum[]
  }

  /**
   * Education findFirstOrThrow
   */
  export type EducationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * Filter, which Education to fetch.
     */
    where?: EducationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Educations to fetch.
     */
    orderBy?: EducationOrderByWithRelationInput | EducationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Educations.
     */
    cursor?: EducationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Educations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Educations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Educations.
     */
    distinct?: EducationScalarFieldEnum | EducationScalarFieldEnum[]
  }

  /**
   * Education findMany
   */
  export type EducationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * Filter, which Educations to fetch.
     */
    where?: EducationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Educations to fetch.
     */
    orderBy?: EducationOrderByWithRelationInput | EducationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Educations.
     */
    cursor?: EducationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Educations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Educations.
     */
    skip?: number
    distinct?: EducationScalarFieldEnum | EducationScalarFieldEnum[]
  }

  /**
   * Education create
   */
  export type EducationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * The data needed to create a Education.
     */
    data: XOR<EducationCreateInput, EducationUncheckedCreateInput>
  }

  /**
   * Education createMany
   */
  export type EducationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Educations.
     */
    data: EducationCreateManyInput | EducationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Education createManyAndReturn
   */
  export type EducationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * The data used to create many Educations.
     */
    data: EducationCreateManyInput | EducationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Education update
   */
  export type EducationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * The data needed to update a Education.
     */
    data: XOR<EducationUpdateInput, EducationUncheckedUpdateInput>
    /**
     * Choose, which Education to update.
     */
    where: EducationWhereUniqueInput
  }

  /**
   * Education updateMany
   */
  export type EducationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Educations.
     */
    data: XOR<EducationUpdateManyMutationInput, EducationUncheckedUpdateManyInput>
    /**
     * Filter which Educations to update
     */
    where?: EducationWhereInput
    /**
     * Limit how many Educations to update.
     */
    limit?: number
  }

  /**
   * Education updateManyAndReturn
   */
  export type EducationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * The data used to update Educations.
     */
    data: XOR<EducationUpdateManyMutationInput, EducationUncheckedUpdateManyInput>
    /**
     * Filter which Educations to update
     */
    where?: EducationWhereInput
    /**
     * Limit how many Educations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Education upsert
   */
  export type EducationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * The filter to search for the Education to update in case it exists.
     */
    where: EducationWhereUniqueInput
    /**
     * In case the Education found by the `where` argument doesn't exist, create a new Education with this data.
     */
    create: XOR<EducationCreateInput, EducationUncheckedCreateInput>
    /**
     * In case the Education was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EducationUpdateInput, EducationUncheckedUpdateInput>
  }

  /**
   * Education delete
   */
  export type EducationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
    /**
     * Filter which Education to delete.
     */
    where: EducationWhereUniqueInput
  }

  /**
   * Education deleteMany
   */
  export type EducationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Educations to delete
     */
    where?: EducationWhereInput
    /**
     * Limit how many Educations to delete.
     */
    limit?: number
  }

  /**
   * Education without action
   */
  export type EducationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Education
     */
    select?: EducationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Education
     */
    omit?: EducationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EducationInclude<ExtArgs> | null
  }


  /**
   * Model WorkExperience
   */

  export type AggregateWorkExperience = {
    _count: WorkExperienceCountAggregateOutputType | null
    _avg: WorkExperienceAvgAggregateOutputType | null
    _sum: WorkExperienceSumAggregateOutputType | null
    _min: WorkExperienceMinAggregateOutputType | null
    _max: WorkExperienceMaxAggregateOutputType | null
  }

  export type WorkExperienceAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type WorkExperienceSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type WorkExperienceMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    companyName: string | null
    jobTitle: string | null
    employmentType: $Enums.JobTypeEnum | null
    startDate: Date | null
    endDate: Date | null
    isCurrent: boolean | null
    location: string | null
    description: string | null
    descriptionJp: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WorkExperienceMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    companyName: string | null
    jobTitle: string | null
    employmentType: $Enums.JobTypeEnum | null
    startDate: Date | null
    endDate: Date | null
    isCurrent: boolean | null
    location: string | null
    description: string | null
    descriptionJp: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WorkExperienceCountAggregateOutputType = {
    id: number
    candidateId: number
    companyName: number
    jobTitle: number
    employmentType: number
    startDate: number
    endDate: number
    isCurrent: number
    location: number
    description: number
    descriptionJp: number
    responsibilities: number
    keyToolsTechnologies: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WorkExperienceAvgAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type WorkExperienceSumAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type WorkExperienceMinAggregateInputType = {
    id?: true
    candidateId?: true
    companyName?: true
    jobTitle?: true
    employmentType?: true
    startDate?: true
    endDate?: true
    isCurrent?: true
    location?: true
    description?: true
    descriptionJp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WorkExperienceMaxAggregateInputType = {
    id?: true
    candidateId?: true
    companyName?: true
    jobTitle?: true
    employmentType?: true
    startDate?: true
    endDate?: true
    isCurrent?: true
    location?: true
    description?: true
    descriptionJp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WorkExperienceCountAggregateInputType = {
    id?: true
    candidateId?: true
    companyName?: true
    jobTitle?: true
    employmentType?: true
    startDate?: true
    endDate?: true
    isCurrent?: true
    location?: true
    description?: true
    descriptionJp?: true
    responsibilities?: true
    keyToolsTechnologies?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WorkExperienceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WorkExperience to aggregate.
     */
    where?: WorkExperienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkExperiences to fetch.
     */
    orderBy?: WorkExperienceOrderByWithRelationInput | WorkExperienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WorkExperienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkExperiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkExperiences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkExperiences
    **/
    _count?: true | WorkExperienceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkExperienceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkExperienceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkExperienceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkExperienceMaxAggregateInputType
  }

  export type GetWorkExperienceAggregateType<T extends WorkExperienceAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkExperience]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkExperience[P]>
      : GetScalarType<T[P], AggregateWorkExperience[P]>
  }




  export type WorkExperienceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorkExperienceWhereInput
    orderBy?: WorkExperienceOrderByWithAggregationInput | WorkExperienceOrderByWithAggregationInput[]
    by: WorkExperienceScalarFieldEnum[] | WorkExperienceScalarFieldEnum
    having?: WorkExperienceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkExperienceCountAggregateInputType | true
    _avg?: WorkExperienceAvgAggregateInputType
    _sum?: WorkExperienceSumAggregateInputType
    _min?: WorkExperienceMinAggregateInputType
    _max?: WorkExperienceMaxAggregateInputType
  }

  export type WorkExperienceGroupByOutputType = {
    id: number
    candidateId: number
    companyName: string
    jobTitle: string
    employmentType: $Enums.JobTypeEnum | null
    startDate: Date
    endDate: Date | null
    isCurrent: boolean
    location: string | null
    description: string | null
    descriptionJp: string | null
    responsibilities: string[]
    keyToolsTechnologies: string[]
    createdAt: Date
    updatedAt: Date
    _count: WorkExperienceCountAggregateOutputType | null
    _avg: WorkExperienceAvgAggregateOutputType | null
    _sum: WorkExperienceSumAggregateOutputType | null
    _min: WorkExperienceMinAggregateOutputType | null
    _max: WorkExperienceMaxAggregateOutputType | null
  }

  type GetWorkExperienceGroupByPayload<T extends WorkExperienceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WorkExperienceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WorkExperienceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WorkExperienceGroupByOutputType[P]>
            : GetScalarType<T[P], WorkExperienceGroupByOutputType[P]>
        }
      >
    >


  export type WorkExperienceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    companyName?: boolean
    jobTitle?: boolean
    employmentType?: boolean
    startDate?: boolean
    endDate?: boolean
    isCurrent?: boolean
    location?: boolean
    description?: boolean
    descriptionJp?: boolean
    responsibilities?: boolean
    keyToolsTechnologies?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workExperience"]>

  export type WorkExperienceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    companyName?: boolean
    jobTitle?: boolean
    employmentType?: boolean
    startDate?: boolean
    endDate?: boolean
    isCurrent?: boolean
    location?: boolean
    description?: boolean
    descriptionJp?: boolean
    responsibilities?: boolean
    keyToolsTechnologies?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workExperience"]>

  export type WorkExperienceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    companyName?: boolean
    jobTitle?: boolean
    employmentType?: boolean
    startDate?: boolean
    endDate?: boolean
    isCurrent?: boolean
    location?: boolean
    description?: boolean
    descriptionJp?: boolean
    responsibilities?: boolean
    keyToolsTechnologies?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workExperience"]>

  export type WorkExperienceSelectScalar = {
    id?: boolean
    candidateId?: boolean
    companyName?: boolean
    jobTitle?: boolean
    employmentType?: boolean
    startDate?: boolean
    endDate?: boolean
    isCurrent?: boolean
    location?: boolean
    description?: boolean
    descriptionJp?: boolean
    responsibilities?: boolean
    keyToolsTechnologies?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WorkExperienceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "companyName" | "jobTitle" | "employmentType" | "startDate" | "endDate" | "isCurrent" | "location" | "description" | "descriptionJp" | "responsibilities" | "keyToolsTechnologies" | "createdAt" | "updatedAt", ExtArgs["result"]["workExperience"]>
  export type WorkExperienceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type WorkExperienceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type WorkExperienceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }

  export type $WorkExperiencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WorkExperience"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      companyName: string
      jobTitle: string
      employmentType: $Enums.JobTypeEnum | null
      startDate: Date
      endDate: Date | null
      isCurrent: boolean
      /**
       * Địa điểm làm việc (Thành phố, Quốc gia)
       */
      location: string | null
      /**
       * Mô tả công việc/Tổng quan công ty (tiếng Anh/Việt)
       */
      description: string | null
      /**
       * Mô tả công việc/Tổng quan công ty (tiếng Nhật)
       */
      descriptionJp: string | null
      /**
       * Nhiệm vụ/Thành tích (mảng)
       */
      responsibilities: string[]
      /**
       * Công cụ/Công nghệ chính đã sử dụng (chung chung hơn)
       */
      keyToolsTechnologies: string[]
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["workExperience"]>
    composites: {}
  }

  type WorkExperienceGetPayload<S extends boolean | null | undefined | WorkExperienceDefaultArgs> = $Result.GetResult<Prisma.$WorkExperiencePayload, S>

  type WorkExperienceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WorkExperienceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WorkExperienceCountAggregateInputType | true
    }

  export interface WorkExperienceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WorkExperience'], meta: { name: 'WorkExperience' } }
    /**
     * Find zero or one WorkExperience that matches the filter.
     * @param {WorkExperienceFindUniqueArgs} args - Arguments to find a WorkExperience
     * @example
     * // Get one WorkExperience
     * const workExperience = await prisma.workExperience.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WorkExperienceFindUniqueArgs>(args: SelectSubset<T, WorkExperienceFindUniqueArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one WorkExperience that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WorkExperienceFindUniqueOrThrowArgs} args - Arguments to find a WorkExperience
     * @example
     * // Get one WorkExperience
     * const workExperience = await prisma.workExperience.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WorkExperienceFindUniqueOrThrowArgs>(args: SelectSubset<T, WorkExperienceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WorkExperience that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkExperienceFindFirstArgs} args - Arguments to find a WorkExperience
     * @example
     * // Get one WorkExperience
     * const workExperience = await prisma.workExperience.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WorkExperienceFindFirstArgs>(args?: SelectSubset<T, WorkExperienceFindFirstArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WorkExperience that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkExperienceFindFirstOrThrowArgs} args - Arguments to find a WorkExperience
     * @example
     * // Get one WorkExperience
     * const workExperience = await prisma.workExperience.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WorkExperienceFindFirstOrThrowArgs>(args?: SelectSubset<T, WorkExperienceFindFirstOrThrowArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more WorkExperiences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkExperienceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkExperiences
     * const workExperiences = await prisma.workExperience.findMany()
     * 
     * // Get first 10 WorkExperiences
     * const workExperiences = await prisma.workExperience.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workExperienceWithIdOnly = await prisma.workExperience.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WorkExperienceFindManyArgs>(args?: SelectSubset<T, WorkExperienceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a WorkExperience.
     * @param {WorkExperienceCreateArgs} args - Arguments to create a WorkExperience.
     * @example
     * // Create one WorkExperience
     * const WorkExperience = await prisma.workExperience.create({
     *   data: {
     *     // ... data to create a WorkExperience
     *   }
     * })
     * 
     */
    create<T extends WorkExperienceCreateArgs>(args: SelectSubset<T, WorkExperienceCreateArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many WorkExperiences.
     * @param {WorkExperienceCreateManyArgs} args - Arguments to create many WorkExperiences.
     * @example
     * // Create many WorkExperiences
     * const workExperience = await prisma.workExperience.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WorkExperienceCreateManyArgs>(args?: SelectSubset<T, WorkExperienceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many WorkExperiences and returns the data saved in the database.
     * @param {WorkExperienceCreateManyAndReturnArgs} args - Arguments to create many WorkExperiences.
     * @example
     * // Create many WorkExperiences
     * const workExperience = await prisma.workExperience.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many WorkExperiences and only return the `id`
     * const workExperienceWithIdOnly = await prisma.workExperience.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WorkExperienceCreateManyAndReturnArgs>(args?: SelectSubset<T, WorkExperienceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a WorkExperience.
     * @param {WorkExperienceDeleteArgs} args - Arguments to delete one WorkExperience.
     * @example
     * // Delete one WorkExperience
     * const WorkExperience = await prisma.workExperience.delete({
     *   where: {
     *     // ... filter to delete one WorkExperience
     *   }
     * })
     * 
     */
    delete<T extends WorkExperienceDeleteArgs>(args: SelectSubset<T, WorkExperienceDeleteArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one WorkExperience.
     * @param {WorkExperienceUpdateArgs} args - Arguments to update one WorkExperience.
     * @example
     * // Update one WorkExperience
     * const workExperience = await prisma.workExperience.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WorkExperienceUpdateArgs>(args: SelectSubset<T, WorkExperienceUpdateArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more WorkExperiences.
     * @param {WorkExperienceDeleteManyArgs} args - Arguments to filter WorkExperiences to delete.
     * @example
     * // Delete a few WorkExperiences
     * const { count } = await prisma.workExperience.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WorkExperienceDeleteManyArgs>(args?: SelectSubset<T, WorkExperienceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkExperiences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkExperienceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkExperiences
     * const workExperience = await prisma.workExperience.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WorkExperienceUpdateManyArgs>(args: SelectSubset<T, WorkExperienceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkExperiences and returns the data updated in the database.
     * @param {WorkExperienceUpdateManyAndReturnArgs} args - Arguments to update many WorkExperiences.
     * @example
     * // Update many WorkExperiences
     * const workExperience = await prisma.workExperience.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more WorkExperiences and only return the `id`
     * const workExperienceWithIdOnly = await prisma.workExperience.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends WorkExperienceUpdateManyAndReturnArgs>(args: SelectSubset<T, WorkExperienceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one WorkExperience.
     * @param {WorkExperienceUpsertArgs} args - Arguments to update or create a WorkExperience.
     * @example
     * // Update or create a WorkExperience
     * const workExperience = await prisma.workExperience.upsert({
     *   create: {
     *     // ... data to create a WorkExperience
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkExperience we want to update
     *   }
     * })
     */
    upsert<T extends WorkExperienceUpsertArgs>(args: SelectSubset<T, WorkExperienceUpsertArgs<ExtArgs>>): Prisma__WorkExperienceClient<$Result.GetResult<Prisma.$WorkExperiencePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of WorkExperiences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkExperienceCountArgs} args - Arguments to filter WorkExperiences to count.
     * @example
     * // Count the number of WorkExperiences
     * const count = await prisma.workExperience.count({
     *   where: {
     *     // ... the filter for the WorkExperiences we want to count
     *   }
     * })
    **/
    count<T extends WorkExperienceCountArgs>(
      args?: Subset<T, WorkExperienceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkExperienceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkExperience.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkExperienceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkExperienceAggregateArgs>(args: Subset<T, WorkExperienceAggregateArgs>): Prisma.PrismaPromise<GetWorkExperienceAggregateType<T>>

    /**
     * Group by WorkExperience.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkExperienceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkExperienceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkExperienceGroupByArgs['orderBy'] }
        : { orderBy?: WorkExperienceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkExperienceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkExperienceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WorkExperience model
   */
  readonly fields: WorkExperienceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkExperience.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WorkExperienceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WorkExperience model
   */
  interface WorkExperienceFieldRefs {
    readonly id: FieldRef<"WorkExperience", 'Int'>
    readonly candidateId: FieldRef<"WorkExperience", 'Int'>
    readonly companyName: FieldRef<"WorkExperience", 'String'>
    readonly jobTitle: FieldRef<"WorkExperience", 'String'>
    readonly employmentType: FieldRef<"WorkExperience", 'JobTypeEnum'>
    readonly startDate: FieldRef<"WorkExperience", 'DateTime'>
    readonly endDate: FieldRef<"WorkExperience", 'DateTime'>
    readonly isCurrent: FieldRef<"WorkExperience", 'Boolean'>
    readonly location: FieldRef<"WorkExperience", 'String'>
    readonly description: FieldRef<"WorkExperience", 'String'>
    readonly descriptionJp: FieldRef<"WorkExperience", 'String'>
    readonly responsibilities: FieldRef<"WorkExperience", 'String[]'>
    readonly keyToolsTechnologies: FieldRef<"WorkExperience", 'String[]'>
    readonly createdAt: FieldRef<"WorkExperience", 'DateTime'>
    readonly updatedAt: FieldRef<"WorkExperience", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * WorkExperience findUnique
   */
  export type WorkExperienceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * Filter, which WorkExperience to fetch.
     */
    where: WorkExperienceWhereUniqueInput
  }

  /**
   * WorkExperience findUniqueOrThrow
   */
  export type WorkExperienceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * Filter, which WorkExperience to fetch.
     */
    where: WorkExperienceWhereUniqueInput
  }

  /**
   * WorkExperience findFirst
   */
  export type WorkExperienceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * Filter, which WorkExperience to fetch.
     */
    where?: WorkExperienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkExperiences to fetch.
     */
    orderBy?: WorkExperienceOrderByWithRelationInput | WorkExperienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkExperiences.
     */
    cursor?: WorkExperienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkExperiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkExperiences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkExperiences.
     */
    distinct?: WorkExperienceScalarFieldEnum | WorkExperienceScalarFieldEnum[]
  }

  /**
   * WorkExperience findFirstOrThrow
   */
  export type WorkExperienceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * Filter, which WorkExperience to fetch.
     */
    where?: WorkExperienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkExperiences to fetch.
     */
    orderBy?: WorkExperienceOrderByWithRelationInput | WorkExperienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkExperiences.
     */
    cursor?: WorkExperienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkExperiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkExperiences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkExperiences.
     */
    distinct?: WorkExperienceScalarFieldEnum | WorkExperienceScalarFieldEnum[]
  }

  /**
   * WorkExperience findMany
   */
  export type WorkExperienceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * Filter, which WorkExperiences to fetch.
     */
    where?: WorkExperienceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkExperiences to fetch.
     */
    orderBy?: WorkExperienceOrderByWithRelationInput | WorkExperienceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkExperiences.
     */
    cursor?: WorkExperienceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkExperiences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkExperiences.
     */
    skip?: number
    distinct?: WorkExperienceScalarFieldEnum | WorkExperienceScalarFieldEnum[]
  }

  /**
   * WorkExperience create
   */
  export type WorkExperienceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * The data needed to create a WorkExperience.
     */
    data: XOR<WorkExperienceCreateInput, WorkExperienceUncheckedCreateInput>
  }

  /**
   * WorkExperience createMany
   */
  export type WorkExperienceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WorkExperiences.
     */
    data: WorkExperienceCreateManyInput | WorkExperienceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * WorkExperience createManyAndReturn
   */
  export type WorkExperienceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * The data used to create many WorkExperiences.
     */
    data: WorkExperienceCreateManyInput | WorkExperienceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * WorkExperience update
   */
  export type WorkExperienceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * The data needed to update a WorkExperience.
     */
    data: XOR<WorkExperienceUpdateInput, WorkExperienceUncheckedUpdateInput>
    /**
     * Choose, which WorkExperience to update.
     */
    where: WorkExperienceWhereUniqueInput
  }

  /**
   * WorkExperience updateMany
   */
  export type WorkExperienceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WorkExperiences.
     */
    data: XOR<WorkExperienceUpdateManyMutationInput, WorkExperienceUncheckedUpdateManyInput>
    /**
     * Filter which WorkExperiences to update
     */
    where?: WorkExperienceWhereInput
    /**
     * Limit how many WorkExperiences to update.
     */
    limit?: number
  }

  /**
   * WorkExperience updateManyAndReturn
   */
  export type WorkExperienceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * The data used to update WorkExperiences.
     */
    data: XOR<WorkExperienceUpdateManyMutationInput, WorkExperienceUncheckedUpdateManyInput>
    /**
     * Filter which WorkExperiences to update
     */
    where?: WorkExperienceWhereInput
    /**
     * Limit how many WorkExperiences to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * WorkExperience upsert
   */
  export type WorkExperienceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * The filter to search for the WorkExperience to update in case it exists.
     */
    where: WorkExperienceWhereUniqueInput
    /**
     * In case the WorkExperience found by the `where` argument doesn't exist, create a new WorkExperience with this data.
     */
    create: XOR<WorkExperienceCreateInput, WorkExperienceUncheckedCreateInput>
    /**
     * In case the WorkExperience was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WorkExperienceUpdateInput, WorkExperienceUncheckedUpdateInput>
  }

  /**
   * WorkExperience delete
   */
  export type WorkExperienceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
    /**
     * Filter which WorkExperience to delete.
     */
    where: WorkExperienceWhereUniqueInput
  }

  /**
   * WorkExperience deleteMany
   */
  export type WorkExperienceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WorkExperiences to delete
     */
    where?: WorkExperienceWhereInput
    /**
     * Limit how many WorkExperiences to delete.
     */
    limit?: number
  }

  /**
   * WorkExperience without action
   */
  export type WorkExperienceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkExperience
     */
    select?: WorkExperienceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkExperience
     */
    omit?: WorkExperienceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkExperienceInclude<ExtArgs> | null
  }


  /**
   * Model Project
   */

  export type AggregateProject = {
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  export type ProjectAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type ProjectSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type ProjectMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    title: string | null
    titleJp: string | null
    url: string | null
    purpose: string | null
    purposeJp: string | null
    description: string | null
    descriptionJp: string | null
    teamDetails: string | null
    duration: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProjectMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    title: string | null
    titleJp: string | null
    url: string | null
    purpose: string | null
    purposeJp: string | null
    description: string | null
    descriptionJp: string | null
    teamDetails: string | null
    duration: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProjectCountAggregateOutputType = {
    id: number
    candidateId: number
    title: number
    titleJp: number
    url: number
    purpose: number
    purposeJp: number
    description: number
    descriptionJp: number
    bulletPoints: number
    technologiesUsed: number
    teamDetails: number
    duration: number
    startDate: number
    endDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProjectAvgAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type ProjectSumAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type ProjectMinAggregateInputType = {
    id?: true
    candidateId?: true
    title?: true
    titleJp?: true
    url?: true
    purpose?: true
    purposeJp?: true
    description?: true
    descriptionJp?: true
    teamDetails?: true
    duration?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProjectMaxAggregateInputType = {
    id?: true
    candidateId?: true
    title?: true
    titleJp?: true
    url?: true
    purpose?: true
    purposeJp?: true
    description?: true
    descriptionJp?: true
    teamDetails?: true
    duration?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProjectCountAggregateInputType = {
    id?: true
    candidateId?: true
    title?: true
    titleJp?: true
    url?: true
    purpose?: true
    purposeJp?: true
    description?: true
    descriptionJp?: true
    bulletPoints?: true
    technologiesUsed?: true
    teamDetails?: true
    duration?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProjectAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Project to aggregate.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectMaxAggregateInputType
  }

  export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
        [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject[P]>
      : GetScalarType<T[P], AggregateProject[P]>
  }




  export type ProjectGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithAggregationInput | ProjectOrderByWithAggregationInput[]
    by: ProjectScalarFieldEnum[] | ProjectScalarFieldEnum
    having?: ProjectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectCountAggregateInputType | true
    _avg?: ProjectAvgAggregateInputType
    _sum?: ProjectSumAggregateInputType
    _min?: ProjectMinAggregateInputType
    _max?: ProjectMaxAggregateInputType
  }

  export type ProjectGroupByOutputType = {
    id: number
    candidateId: number
    title: string
    titleJp: string | null
    url: string | null
    purpose: string | null
    purposeJp: string | null
    description: string | null
    descriptionJp: string | null
    bulletPoints: string[]
    technologiesUsed: string[]
    teamDetails: string | null
    duration: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  type GetProjectGroupByPayload<T extends ProjectGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGroupByOutputType[P]>
        }
      >
    >


  export type ProjectSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    title?: boolean
    titleJp?: boolean
    url?: boolean
    purpose?: boolean
    purposeJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    bulletPoints?: boolean
    technologiesUsed?: boolean
    teamDetails?: boolean
    duration?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    title?: boolean
    titleJp?: boolean
    url?: boolean
    purpose?: boolean
    purposeJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    bulletPoints?: boolean
    technologiesUsed?: boolean
    teamDetails?: boolean
    duration?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    title?: boolean
    titleJp?: boolean
    url?: boolean
    purpose?: boolean
    purposeJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    bulletPoints?: boolean
    technologiesUsed?: boolean
    teamDetails?: boolean
    duration?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectScalar = {
    id?: boolean
    candidateId?: boolean
    title?: boolean
    titleJp?: boolean
    url?: boolean
    purpose?: boolean
    purposeJp?: boolean
    description?: boolean
    descriptionJp?: boolean
    bulletPoints?: boolean
    technologiesUsed?: boolean
    teamDetails?: boolean
    duration?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProjectOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "title" | "titleJp" | "url" | "purpose" | "purposeJp" | "description" | "descriptionJp" | "bulletPoints" | "technologiesUsed" | "teamDetails" | "duration" | "startDate" | "endDate" | "createdAt" | "updatedAt", ExtArgs["result"]["project"]>
  export type ProjectInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type ProjectIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type ProjectIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }

  export type $ProjectPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Project"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      /**
       * Tên dự án (tiếng Anh/Việt)
       */
      title: string
      /**
       * Tên dự án (tiếng Nhật)
       */
      titleJp: string | null
      /**
       * URL dự án/repository/demo
       */
      url: string | null
      /**
       * Mục đích (tiếng Anh/Việt)
       */
      purpose: string | null
      /**
       * Mục đích (tiếng Nhật)
       */
      purposeJp: string | null
      /**
       * Mô tả (tiếng Anh/Việt)
       */
      description: string | null
      /**
       * Mô tả (tiếng Nhật)
       */
      descriptionJp: string | null
      /**
       * Chức năng chính/Kết quả (mảng)
       */
      bulletPoints: string[]
      /**
       * Công nghệ/Công cụ/Kỹ thuật đã sử dụng (mảng)
       */
      technologiesUsed: string[]
      teamDetails: string | null
      duration: string | null
      startDate: Date | null
      endDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["project"]>
    composites: {}
  }

  type ProjectGetPayload<S extends boolean | null | undefined | ProjectDefaultArgs> = $Result.GetResult<Prisma.$ProjectPayload, S>

  type ProjectCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProjectFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectCountAggregateInputType | true
    }

  export interface ProjectDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Project'], meta: { name: 'Project' } }
    /**
     * Find zero or one Project that matches the filter.
     * @param {ProjectFindUniqueArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectFindUniqueArgs>(args: SelectSubset<T, ProjectFindUniqueArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProjectFindUniqueOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectFindFirstArgs>(args?: SelectSubset<T, ProjectFindFirstArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.project.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.project.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectFindManyArgs>(args?: SelectSubset<T, ProjectFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project.
     * @param {ProjectCreateArgs} args - Arguments to create a Project.
     * @example
     * // Create one Project
     * const Project = await prisma.project.create({
     *   data: {
     *     // ... data to create a Project
     *   }
     * })
     * 
     */
    create<T extends ProjectCreateArgs>(args: SelectSubset<T, ProjectCreateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Projects.
     * @param {ProjectCreateManyArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectCreateManyArgs>(args?: SelectSubset<T, ProjectCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Projects and returns the data saved in the database.
     * @param {ProjectCreateManyAndReturnArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProjectCreateManyAndReturnArgs>(args?: SelectSubset<T, ProjectCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project.
     * @param {ProjectDeleteArgs} args - Arguments to delete one Project.
     * @example
     * // Delete one Project
     * const Project = await prisma.project.delete({
     *   where: {
     *     // ... filter to delete one Project
     *   }
     * })
     * 
     */
    delete<T extends ProjectDeleteArgs>(args: SelectSubset<T, ProjectDeleteArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project.
     * @param {ProjectUpdateArgs} args - Arguments to update one Project.
     * @example
     * // Update one Project
     * const project = await prisma.project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectUpdateArgs>(args: SelectSubset<T, ProjectUpdateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Projects.
     * @param {ProjectDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectDeleteManyArgs>(args?: SelectSubset<T, ProjectDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectUpdateManyArgs>(args: SelectSubset<T, ProjectUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects and returns the data updated in the database.
     * @param {ProjectUpdateManyAndReturnArgs} args - Arguments to update many Projects.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProjectUpdateManyAndReturnArgs>(args: SelectSubset<T, ProjectUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project.
     * @param {ProjectUpsertArgs} args - Arguments to update or create a Project.
     * @example
     * // Update or create a Project
     * const project = await prisma.project.upsert({
     *   create: {
     *     // ... data to create a Project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project we want to update
     *   }
     * })
     */
    upsert<T extends ProjectUpsertArgs>(args: SelectSubset<T, ProjectUpsertArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.project.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectCountArgs>(
      args?: Subset<T, ProjectCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectAggregateArgs>(args: Subset<T, ProjectAggregateArgs>): Prisma.PrismaPromise<GetProjectAggregateType<T>>

    /**
     * Group by Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectGroupByArgs['orderBy'] }
        : { orderBy?: ProjectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Project model
   */
  readonly fields: ProjectFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Project model
   */
  interface ProjectFieldRefs {
    readonly id: FieldRef<"Project", 'Int'>
    readonly candidateId: FieldRef<"Project", 'Int'>
    readonly title: FieldRef<"Project", 'String'>
    readonly titleJp: FieldRef<"Project", 'String'>
    readonly url: FieldRef<"Project", 'String'>
    readonly purpose: FieldRef<"Project", 'String'>
    readonly purposeJp: FieldRef<"Project", 'String'>
    readonly description: FieldRef<"Project", 'String'>
    readonly descriptionJp: FieldRef<"Project", 'String'>
    readonly bulletPoints: FieldRef<"Project", 'String[]'>
    readonly technologiesUsed: FieldRef<"Project", 'String[]'>
    readonly teamDetails: FieldRef<"Project", 'String'>
    readonly duration: FieldRef<"Project", 'String'>
    readonly startDate: FieldRef<"Project", 'DateTime'>
    readonly endDate: FieldRef<"Project", 'DateTime'>
    readonly createdAt: FieldRef<"Project", 'DateTime'>
    readonly updatedAt: FieldRef<"Project", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Project findUnique
   */
  export type ProjectFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findUniqueOrThrow
   */
  export type ProjectFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findFirst
   */
  export type ProjectFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findFirstOrThrow
   */
  export type ProjectFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findMany
   */
  export type ProjectFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project create
   */
  export type ProjectCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to create a Project.
     */
    data: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
  }

  /**
   * Project createMany
   */
  export type ProjectCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Project createManyAndReturn
   */
  export type ProjectCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Project update
   */
  export type ProjectUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to update a Project.
     */
    data: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
    /**
     * Choose, which Project to update.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project updateMany
   */
  export type ProjectUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to update.
     */
    limit?: number
  }

  /**
   * Project updateManyAndReturn
   */
  export type ProjectUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Project upsert
   */
  export type ProjectUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The filter to search for the Project to update in case it exists.
     */
    where: ProjectWhereUniqueInput
    /**
     * In case the Project found by the `where` argument doesn't exist, create a new Project with this data.
     */
    create: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
    /**
     * In case the Project was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
  }

  /**
   * Project delete
   */
  export type ProjectDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter which Project to delete.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project deleteMany
   */
  export type ProjectDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Projects to delete
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to delete.
     */
    limit?: number
  }

  /**
   * Project without action
   */
  export type ProjectDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
  }


  /**
   * Model Qualification
   */

  export type AggregateQualification = {
    _count: QualificationCountAggregateOutputType | null
    _avg: QualificationAvgAggregateOutputType | null
    _sum: QualificationSumAggregateOutputType | null
    _min: QualificationMinAggregateOutputType | null
    _max: QualificationMaxAggregateOutputType | null
  }

  export type QualificationAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type QualificationSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type QualificationMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    name: string | null
    issuingOrganization: string | null
    issueDate: Date | null
    expiryDate: Date | null
    credentialId: string | null
    credentialUrl: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualificationMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    name: string | null
    issuingOrganization: string | null
    issueDate: Date | null
    expiryDate: Date | null
    credentialId: string | null
    credentialUrl: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualificationCountAggregateOutputType = {
    id: number
    candidateId: number
    name: number
    issuingOrganization: number
    issueDate: number
    expiryDate: number
    credentialId: number
    credentialUrl: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type QualificationAvgAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type QualificationSumAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type QualificationMinAggregateInputType = {
    id?: true
    candidateId?: true
    name?: true
    issuingOrganization?: true
    issueDate?: true
    expiryDate?: true
    credentialId?: true
    credentialUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualificationMaxAggregateInputType = {
    id?: true
    candidateId?: true
    name?: true
    issuingOrganization?: true
    issueDate?: true
    expiryDate?: true
    credentialId?: true
    credentialUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualificationCountAggregateInputType = {
    id?: true
    candidateId?: true
    name?: true
    issuingOrganization?: true
    issueDate?: true
    expiryDate?: true
    credentialId?: true
    credentialUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type QualificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Qualification to aggregate.
     */
    where?: QualificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Qualifications to fetch.
     */
    orderBy?: QualificationOrderByWithRelationInput | QualificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QualificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Qualifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Qualifications
    **/
    _count?: true | QualificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualificationMaxAggregateInputType
  }

  export type GetQualificationAggregateType<T extends QualificationAggregateArgs> = {
        [P in keyof T & keyof AggregateQualification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualification[P]>
      : GetScalarType<T[P], AggregateQualification[P]>
  }




  export type QualificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualificationWhereInput
    orderBy?: QualificationOrderByWithAggregationInput | QualificationOrderByWithAggregationInput[]
    by: QualificationScalarFieldEnum[] | QualificationScalarFieldEnum
    having?: QualificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualificationCountAggregateInputType | true
    _avg?: QualificationAvgAggregateInputType
    _sum?: QualificationSumAggregateInputType
    _min?: QualificationMinAggregateInputType
    _max?: QualificationMaxAggregateInputType
  }

  export type QualificationGroupByOutputType = {
    id: number
    candidateId: number
    name: string
    issuingOrganization: string | null
    issueDate: Date | null
    expiryDate: Date | null
    credentialId: string | null
    credentialUrl: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: QualificationCountAggregateOutputType | null
    _avg: QualificationAvgAggregateOutputType | null
    _sum: QualificationSumAggregateOutputType | null
    _min: QualificationMinAggregateOutputType | null
    _max: QualificationMaxAggregateOutputType | null
  }

  type GetQualificationGroupByPayload<T extends QualificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualificationGroupByOutputType[P]>
            : GetScalarType<T[P], QualificationGroupByOutputType[P]>
        }
      >
    >


  export type QualificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    name?: boolean
    issuingOrganization?: boolean
    issueDate?: boolean
    expiryDate?: boolean
    credentialId?: boolean
    credentialUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualification"]>

  export type QualificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    name?: boolean
    issuingOrganization?: boolean
    issueDate?: boolean
    expiryDate?: boolean
    credentialId?: boolean
    credentialUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualification"]>

  export type QualificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    name?: boolean
    issuingOrganization?: boolean
    issueDate?: boolean
    expiryDate?: boolean
    credentialId?: boolean
    credentialUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualification"]>

  export type QualificationSelectScalar = {
    id?: boolean
    candidateId?: boolean
    name?: boolean
    issuingOrganization?: boolean
    issueDate?: boolean
    expiryDate?: boolean
    credentialId?: boolean
    credentialUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type QualificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "name" | "issuingOrganization" | "issueDate" | "expiryDate" | "credentialId" | "credentialUrl" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["qualification"]>
  export type QualificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type QualificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type QualificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }

  export type $QualificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Qualification"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      /**
       * Tên chứng chỉ/bằng cấp
       */
      name: string
      issuingOrganization: string | null
      issueDate: Date | null
      expiryDate: Date | null
      credentialId: string | null
      credentialUrl: string | null
      /**
       * Mô tả thêm về chứng chỉ (nếu cần)
       */
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["qualification"]>
    composites: {}
  }

  type QualificationGetPayload<S extends boolean | null | undefined | QualificationDefaultArgs> = $Result.GetResult<Prisma.$QualificationPayload, S>

  type QualificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QualificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QualificationCountAggregateInputType | true
    }

  export interface QualificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Qualification'], meta: { name: 'Qualification' } }
    /**
     * Find zero or one Qualification that matches the filter.
     * @param {QualificationFindUniqueArgs} args - Arguments to find a Qualification
     * @example
     * // Get one Qualification
     * const qualification = await prisma.qualification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QualificationFindUniqueArgs>(args: SelectSubset<T, QualificationFindUniqueArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Qualification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QualificationFindUniqueOrThrowArgs} args - Arguments to find a Qualification
     * @example
     * // Get one Qualification
     * const qualification = await prisma.qualification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QualificationFindUniqueOrThrowArgs>(args: SelectSubset<T, QualificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Qualification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationFindFirstArgs} args - Arguments to find a Qualification
     * @example
     * // Get one Qualification
     * const qualification = await prisma.qualification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QualificationFindFirstArgs>(args?: SelectSubset<T, QualificationFindFirstArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Qualification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationFindFirstOrThrowArgs} args - Arguments to find a Qualification
     * @example
     * // Get one Qualification
     * const qualification = await prisma.qualification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QualificationFindFirstOrThrowArgs>(args?: SelectSubset<T, QualificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Qualifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Qualifications
     * const qualifications = await prisma.qualification.findMany()
     * 
     * // Get first 10 Qualifications
     * const qualifications = await prisma.qualification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const qualificationWithIdOnly = await prisma.qualification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QualificationFindManyArgs>(args?: SelectSubset<T, QualificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Qualification.
     * @param {QualificationCreateArgs} args - Arguments to create a Qualification.
     * @example
     * // Create one Qualification
     * const Qualification = await prisma.qualification.create({
     *   data: {
     *     // ... data to create a Qualification
     *   }
     * })
     * 
     */
    create<T extends QualificationCreateArgs>(args: SelectSubset<T, QualificationCreateArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Qualifications.
     * @param {QualificationCreateManyArgs} args - Arguments to create many Qualifications.
     * @example
     * // Create many Qualifications
     * const qualification = await prisma.qualification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QualificationCreateManyArgs>(args?: SelectSubset<T, QualificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Qualifications and returns the data saved in the database.
     * @param {QualificationCreateManyAndReturnArgs} args - Arguments to create many Qualifications.
     * @example
     * // Create many Qualifications
     * const qualification = await prisma.qualification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Qualifications and only return the `id`
     * const qualificationWithIdOnly = await prisma.qualification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QualificationCreateManyAndReturnArgs>(args?: SelectSubset<T, QualificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Qualification.
     * @param {QualificationDeleteArgs} args - Arguments to delete one Qualification.
     * @example
     * // Delete one Qualification
     * const Qualification = await prisma.qualification.delete({
     *   where: {
     *     // ... filter to delete one Qualification
     *   }
     * })
     * 
     */
    delete<T extends QualificationDeleteArgs>(args: SelectSubset<T, QualificationDeleteArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Qualification.
     * @param {QualificationUpdateArgs} args - Arguments to update one Qualification.
     * @example
     * // Update one Qualification
     * const qualification = await prisma.qualification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QualificationUpdateArgs>(args: SelectSubset<T, QualificationUpdateArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Qualifications.
     * @param {QualificationDeleteManyArgs} args - Arguments to filter Qualifications to delete.
     * @example
     * // Delete a few Qualifications
     * const { count } = await prisma.qualification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QualificationDeleteManyArgs>(args?: SelectSubset<T, QualificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Qualifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Qualifications
     * const qualification = await prisma.qualification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QualificationUpdateManyArgs>(args: SelectSubset<T, QualificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Qualifications and returns the data updated in the database.
     * @param {QualificationUpdateManyAndReturnArgs} args - Arguments to update many Qualifications.
     * @example
     * // Update many Qualifications
     * const qualification = await prisma.qualification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Qualifications and only return the `id`
     * const qualificationWithIdOnly = await prisma.qualification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends QualificationUpdateManyAndReturnArgs>(args: SelectSubset<T, QualificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Qualification.
     * @param {QualificationUpsertArgs} args - Arguments to update or create a Qualification.
     * @example
     * // Update or create a Qualification
     * const qualification = await prisma.qualification.upsert({
     *   create: {
     *     // ... data to create a Qualification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Qualification we want to update
     *   }
     * })
     */
    upsert<T extends QualificationUpsertArgs>(args: SelectSubset<T, QualificationUpsertArgs<ExtArgs>>): Prisma__QualificationClient<$Result.GetResult<Prisma.$QualificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Qualifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationCountArgs} args - Arguments to filter Qualifications to count.
     * @example
     * // Count the number of Qualifications
     * const count = await prisma.qualification.count({
     *   where: {
     *     // ... the filter for the Qualifications we want to count
     *   }
     * })
    **/
    count<T extends QualificationCountArgs>(
      args?: Subset<T, QualificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Qualification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualificationAggregateArgs>(args: Subset<T, QualificationAggregateArgs>): Prisma.PrismaPromise<GetQualificationAggregateType<T>>

    /**
     * Group by Qualification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QualificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QualificationGroupByArgs['orderBy'] }
        : { orderBy?: QualificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QualificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Qualification model
   */
  readonly fields: QualificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Qualification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QualificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Qualification model
   */
  interface QualificationFieldRefs {
    readonly id: FieldRef<"Qualification", 'Int'>
    readonly candidateId: FieldRef<"Qualification", 'Int'>
    readonly name: FieldRef<"Qualification", 'String'>
    readonly issuingOrganization: FieldRef<"Qualification", 'String'>
    readonly issueDate: FieldRef<"Qualification", 'DateTime'>
    readonly expiryDate: FieldRef<"Qualification", 'DateTime'>
    readonly credentialId: FieldRef<"Qualification", 'String'>
    readonly credentialUrl: FieldRef<"Qualification", 'String'>
    readonly description: FieldRef<"Qualification", 'String'>
    readonly createdAt: FieldRef<"Qualification", 'DateTime'>
    readonly updatedAt: FieldRef<"Qualification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Qualification findUnique
   */
  export type QualificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * Filter, which Qualification to fetch.
     */
    where: QualificationWhereUniqueInput
  }

  /**
   * Qualification findUniqueOrThrow
   */
  export type QualificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * Filter, which Qualification to fetch.
     */
    where: QualificationWhereUniqueInput
  }

  /**
   * Qualification findFirst
   */
  export type QualificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * Filter, which Qualification to fetch.
     */
    where?: QualificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Qualifications to fetch.
     */
    orderBy?: QualificationOrderByWithRelationInput | QualificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Qualifications.
     */
    cursor?: QualificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Qualifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Qualifications.
     */
    distinct?: QualificationScalarFieldEnum | QualificationScalarFieldEnum[]
  }

  /**
   * Qualification findFirstOrThrow
   */
  export type QualificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * Filter, which Qualification to fetch.
     */
    where?: QualificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Qualifications to fetch.
     */
    orderBy?: QualificationOrderByWithRelationInput | QualificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Qualifications.
     */
    cursor?: QualificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Qualifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Qualifications.
     */
    distinct?: QualificationScalarFieldEnum | QualificationScalarFieldEnum[]
  }

  /**
   * Qualification findMany
   */
  export type QualificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * Filter, which Qualifications to fetch.
     */
    where?: QualificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Qualifications to fetch.
     */
    orderBy?: QualificationOrderByWithRelationInput | QualificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Qualifications.
     */
    cursor?: QualificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Qualifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Qualifications.
     */
    skip?: number
    distinct?: QualificationScalarFieldEnum | QualificationScalarFieldEnum[]
  }

  /**
   * Qualification create
   */
  export type QualificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Qualification.
     */
    data: XOR<QualificationCreateInput, QualificationUncheckedCreateInput>
  }

  /**
   * Qualification createMany
   */
  export type QualificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Qualifications.
     */
    data: QualificationCreateManyInput | QualificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Qualification createManyAndReturn
   */
  export type QualificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * The data used to create many Qualifications.
     */
    data: QualificationCreateManyInput | QualificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Qualification update
   */
  export type QualificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Qualification.
     */
    data: XOR<QualificationUpdateInput, QualificationUncheckedUpdateInput>
    /**
     * Choose, which Qualification to update.
     */
    where: QualificationWhereUniqueInput
  }

  /**
   * Qualification updateMany
   */
  export type QualificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Qualifications.
     */
    data: XOR<QualificationUpdateManyMutationInput, QualificationUncheckedUpdateManyInput>
    /**
     * Filter which Qualifications to update
     */
    where?: QualificationWhereInput
    /**
     * Limit how many Qualifications to update.
     */
    limit?: number
  }

  /**
   * Qualification updateManyAndReturn
   */
  export type QualificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * The data used to update Qualifications.
     */
    data: XOR<QualificationUpdateManyMutationInput, QualificationUncheckedUpdateManyInput>
    /**
     * Filter which Qualifications to update
     */
    where?: QualificationWhereInput
    /**
     * Limit how many Qualifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Qualification upsert
   */
  export type QualificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Qualification to update in case it exists.
     */
    where: QualificationWhereUniqueInput
    /**
     * In case the Qualification found by the `where` argument doesn't exist, create a new Qualification with this data.
     */
    create: XOR<QualificationCreateInput, QualificationUncheckedCreateInput>
    /**
     * In case the Qualification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QualificationUpdateInput, QualificationUncheckedUpdateInput>
  }

  /**
   * Qualification delete
   */
  export type QualificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
    /**
     * Filter which Qualification to delete.
     */
    where: QualificationWhereUniqueInput
  }

  /**
   * Qualification deleteMany
   */
  export type QualificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Qualifications to delete
     */
    where?: QualificationWhereInput
    /**
     * Limit how many Qualifications to delete.
     */
    limit?: number
  }

  /**
   * Qualification without action
   */
  export type QualificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Qualification
     */
    select?: QualificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Qualification
     */
    omit?: QualificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualificationInclude<ExtArgs> | null
  }


  /**
   * Model Award
   */

  export type AggregateAward = {
    _count: AwardCountAggregateOutputType | null
    _avg: AwardAvgAggregateOutputType | null
    _sum: AwardSumAggregateOutputType | null
    _min: AwardMinAggregateOutputType | null
    _max: AwardMaxAggregateOutputType | null
  }

  export type AwardAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type AwardSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type AwardMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    title: string | null
    issuer: string | null
    date: Date | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AwardMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    title: string | null
    issuer: string | null
    date: Date | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AwardCountAggregateOutputType = {
    id: number
    candidateId: number
    title: number
    issuer: number
    date: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AwardAvgAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type AwardSumAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type AwardMinAggregateInputType = {
    id?: true
    candidateId?: true
    title?: true
    issuer?: true
    date?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AwardMaxAggregateInputType = {
    id?: true
    candidateId?: true
    title?: true
    issuer?: true
    date?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AwardCountAggregateInputType = {
    id?: true
    candidateId?: true
    title?: true
    issuer?: true
    date?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AwardAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Award to aggregate.
     */
    where?: AwardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Awards to fetch.
     */
    orderBy?: AwardOrderByWithRelationInput | AwardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AwardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Awards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Awards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Awards
    **/
    _count?: true | AwardCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AwardAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AwardSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AwardMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AwardMaxAggregateInputType
  }

  export type GetAwardAggregateType<T extends AwardAggregateArgs> = {
        [P in keyof T & keyof AggregateAward]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAward[P]>
      : GetScalarType<T[P], AggregateAward[P]>
  }




  export type AwardGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AwardWhereInput
    orderBy?: AwardOrderByWithAggregationInput | AwardOrderByWithAggregationInput[]
    by: AwardScalarFieldEnum[] | AwardScalarFieldEnum
    having?: AwardScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AwardCountAggregateInputType | true
    _avg?: AwardAvgAggregateInputType
    _sum?: AwardSumAggregateInputType
    _min?: AwardMinAggregateInputType
    _max?: AwardMaxAggregateInputType
  }

  export type AwardGroupByOutputType = {
    id: number
    candidateId: number
    title: string
    issuer: string | null
    date: Date | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: AwardCountAggregateOutputType | null
    _avg: AwardAvgAggregateOutputType | null
    _sum: AwardSumAggregateOutputType | null
    _min: AwardMinAggregateOutputType | null
    _max: AwardMaxAggregateOutputType | null
  }

  type GetAwardGroupByPayload<T extends AwardGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AwardGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AwardGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AwardGroupByOutputType[P]>
            : GetScalarType<T[P], AwardGroupByOutputType[P]>
        }
      >
    >


  export type AwardSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    title?: boolean
    issuer?: boolean
    date?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["award"]>

  export type AwardSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    title?: boolean
    issuer?: boolean
    date?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["award"]>

  export type AwardSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    title?: boolean
    issuer?: boolean
    date?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["award"]>

  export type AwardSelectScalar = {
    id?: boolean
    candidateId?: boolean
    title?: boolean
    issuer?: boolean
    date?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AwardOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "title" | "issuer" | "date" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["award"]>
  export type AwardInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type AwardIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type AwardIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }

  export type $AwardPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Award"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      title: string
      issuer: string | null
      date: Date | null
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["award"]>
    composites: {}
  }

  type AwardGetPayload<S extends boolean | null | undefined | AwardDefaultArgs> = $Result.GetResult<Prisma.$AwardPayload, S>

  type AwardCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AwardFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AwardCountAggregateInputType | true
    }

  export interface AwardDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Award'], meta: { name: 'Award' } }
    /**
     * Find zero or one Award that matches the filter.
     * @param {AwardFindUniqueArgs} args - Arguments to find a Award
     * @example
     * // Get one Award
     * const award = await prisma.award.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AwardFindUniqueArgs>(args: SelectSubset<T, AwardFindUniqueArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Award that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AwardFindUniqueOrThrowArgs} args - Arguments to find a Award
     * @example
     * // Get one Award
     * const award = await prisma.award.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AwardFindUniqueOrThrowArgs>(args: SelectSubset<T, AwardFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Award that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AwardFindFirstArgs} args - Arguments to find a Award
     * @example
     * // Get one Award
     * const award = await prisma.award.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AwardFindFirstArgs>(args?: SelectSubset<T, AwardFindFirstArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Award that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AwardFindFirstOrThrowArgs} args - Arguments to find a Award
     * @example
     * // Get one Award
     * const award = await prisma.award.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AwardFindFirstOrThrowArgs>(args?: SelectSubset<T, AwardFindFirstOrThrowArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Awards that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AwardFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Awards
     * const awards = await prisma.award.findMany()
     * 
     * // Get first 10 Awards
     * const awards = await prisma.award.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const awardWithIdOnly = await prisma.award.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AwardFindManyArgs>(args?: SelectSubset<T, AwardFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Award.
     * @param {AwardCreateArgs} args - Arguments to create a Award.
     * @example
     * // Create one Award
     * const Award = await prisma.award.create({
     *   data: {
     *     // ... data to create a Award
     *   }
     * })
     * 
     */
    create<T extends AwardCreateArgs>(args: SelectSubset<T, AwardCreateArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Awards.
     * @param {AwardCreateManyArgs} args - Arguments to create many Awards.
     * @example
     * // Create many Awards
     * const award = await prisma.award.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AwardCreateManyArgs>(args?: SelectSubset<T, AwardCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Awards and returns the data saved in the database.
     * @param {AwardCreateManyAndReturnArgs} args - Arguments to create many Awards.
     * @example
     * // Create many Awards
     * const award = await prisma.award.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Awards and only return the `id`
     * const awardWithIdOnly = await prisma.award.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AwardCreateManyAndReturnArgs>(args?: SelectSubset<T, AwardCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Award.
     * @param {AwardDeleteArgs} args - Arguments to delete one Award.
     * @example
     * // Delete one Award
     * const Award = await prisma.award.delete({
     *   where: {
     *     // ... filter to delete one Award
     *   }
     * })
     * 
     */
    delete<T extends AwardDeleteArgs>(args: SelectSubset<T, AwardDeleteArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Award.
     * @param {AwardUpdateArgs} args - Arguments to update one Award.
     * @example
     * // Update one Award
     * const award = await prisma.award.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AwardUpdateArgs>(args: SelectSubset<T, AwardUpdateArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Awards.
     * @param {AwardDeleteManyArgs} args - Arguments to filter Awards to delete.
     * @example
     * // Delete a few Awards
     * const { count } = await prisma.award.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AwardDeleteManyArgs>(args?: SelectSubset<T, AwardDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Awards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AwardUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Awards
     * const award = await prisma.award.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AwardUpdateManyArgs>(args: SelectSubset<T, AwardUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Awards and returns the data updated in the database.
     * @param {AwardUpdateManyAndReturnArgs} args - Arguments to update many Awards.
     * @example
     * // Update many Awards
     * const award = await prisma.award.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Awards and only return the `id`
     * const awardWithIdOnly = await prisma.award.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AwardUpdateManyAndReturnArgs>(args: SelectSubset<T, AwardUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Award.
     * @param {AwardUpsertArgs} args - Arguments to update or create a Award.
     * @example
     * // Update or create a Award
     * const award = await prisma.award.upsert({
     *   create: {
     *     // ... data to create a Award
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Award we want to update
     *   }
     * })
     */
    upsert<T extends AwardUpsertArgs>(args: SelectSubset<T, AwardUpsertArgs<ExtArgs>>): Prisma__AwardClient<$Result.GetResult<Prisma.$AwardPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Awards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AwardCountArgs} args - Arguments to filter Awards to count.
     * @example
     * // Count the number of Awards
     * const count = await prisma.award.count({
     *   where: {
     *     // ... the filter for the Awards we want to count
     *   }
     * })
    **/
    count<T extends AwardCountArgs>(
      args?: Subset<T, AwardCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AwardCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Award.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AwardAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AwardAggregateArgs>(args: Subset<T, AwardAggregateArgs>): Prisma.PrismaPromise<GetAwardAggregateType<T>>

    /**
     * Group by Award.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AwardGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AwardGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AwardGroupByArgs['orderBy'] }
        : { orderBy?: AwardGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AwardGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAwardGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Award model
   */
  readonly fields: AwardFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Award.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AwardClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Award model
   */
  interface AwardFieldRefs {
    readonly id: FieldRef<"Award", 'Int'>
    readonly candidateId: FieldRef<"Award", 'Int'>
    readonly title: FieldRef<"Award", 'String'>
    readonly issuer: FieldRef<"Award", 'String'>
    readonly date: FieldRef<"Award", 'DateTime'>
    readonly description: FieldRef<"Award", 'String'>
    readonly createdAt: FieldRef<"Award", 'DateTime'>
    readonly updatedAt: FieldRef<"Award", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Award findUnique
   */
  export type AwardFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * Filter, which Award to fetch.
     */
    where: AwardWhereUniqueInput
  }

  /**
   * Award findUniqueOrThrow
   */
  export type AwardFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * Filter, which Award to fetch.
     */
    where: AwardWhereUniqueInput
  }

  /**
   * Award findFirst
   */
  export type AwardFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * Filter, which Award to fetch.
     */
    where?: AwardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Awards to fetch.
     */
    orderBy?: AwardOrderByWithRelationInput | AwardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Awards.
     */
    cursor?: AwardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Awards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Awards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Awards.
     */
    distinct?: AwardScalarFieldEnum | AwardScalarFieldEnum[]
  }

  /**
   * Award findFirstOrThrow
   */
  export type AwardFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * Filter, which Award to fetch.
     */
    where?: AwardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Awards to fetch.
     */
    orderBy?: AwardOrderByWithRelationInput | AwardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Awards.
     */
    cursor?: AwardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Awards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Awards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Awards.
     */
    distinct?: AwardScalarFieldEnum | AwardScalarFieldEnum[]
  }

  /**
   * Award findMany
   */
  export type AwardFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * Filter, which Awards to fetch.
     */
    where?: AwardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Awards to fetch.
     */
    orderBy?: AwardOrderByWithRelationInput | AwardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Awards.
     */
    cursor?: AwardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Awards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Awards.
     */
    skip?: number
    distinct?: AwardScalarFieldEnum | AwardScalarFieldEnum[]
  }

  /**
   * Award create
   */
  export type AwardCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * The data needed to create a Award.
     */
    data: XOR<AwardCreateInput, AwardUncheckedCreateInput>
  }

  /**
   * Award createMany
   */
  export type AwardCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Awards.
     */
    data: AwardCreateManyInput | AwardCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Award createManyAndReturn
   */
  export type AwardCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * The data used to create many Awards.
     */
    data: AwardCreateManyInput | AwardCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Award update
   */
  export type AwardUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * The data needed to update a Award.
     */
    data: XOR<AwardUpdateInput, AwardUncheckedUpdateInput>
    /**
     * Choose, which Award to update.
     */
    where: AwardWhereUniqueInput
  }

  /**
   * Award updateMany
   */
  export type AwardUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Awards.
     */
    data: XOR<AwardUpdateManyMutationInput, AwardUncheckedUpdateManyInput>
    /**
     * Filter which Awards to update
     */
    where?: AwardWhereInput
    /**
     * Limit how many Awards to update.
     */
    limit?: number
  }

  /**
   * Award updateManyAndReturn
   */
  export type AwardUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * The data used to update Awards.
     */
    data: XOR<AwardUpdateManyMutationInput, AwardUncheckedUpdateManyInput>
    /**
     * Filter which Awards to update
     */
    where?: AwardWhereInput
    /**
     * Limit how many Awards to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Award upsert
   */
  export type AwardUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * The filter to search for the Award to update in case it exists.
     */
    where: AwardWhereUniqueInput
    /**
     * In case the Award found by the `where` argument doesn't exist, create a new Award with this data.
     */
    create: XOR<AwardCreateInput, AwardUncheckedCreateInput>
    /**
     * In case the Award was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AwardUpdateInput, AwardUncheckedUpdateInput>
  }

  /**
   * Award delete
   */
  export type AwardDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
    /**
     * Filter which Award to delete.
     */
    where: AwardWhereUniqueInput
  }

  /**
   * Award deleteMany
   */
  export type AwardDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Awards to delete
     */
    where?: AwardWhereInput
    /**
     * Limit how many Awards to delete.
     */
    limit?: number
  }

  /**
   * Award without action
   */
  export type AwardDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Award
     */
    select?: AwardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Award
     */
    omit?: AwardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AwardInclude<ExtArgs> | null
  }


  /**
   * Model CandidateMedia
   */

  export type AggregateCandidateMedia = {
    _count: CandidateMediaCountAggregateOutputType | null
    _avg: CandidateMediaAvgAggregateOutputType | null
    _sum: CandidateMediaSumAggregateOutputType | null
    _min: CandidateMediaMinAggregateOutputType | null
    _max: CandidateMediaMaxAggregateOutputType | null
  }

  export type CandidateMediaAvgAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type CandidateMediaSumAggregateOutputType = {
    id: number | null
    candidateId: number | null
  }

  export type CandidateMediaMinAggregateOutputType = {
    id: number | null
    candidateId: number | null
    mediaType: $Enums.MediaType | null
    title: string | null
    url: string | null
    thumbnailUrl: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CandidateMediaMaxAggregateOutputType = {
    id: number | null
    candidateId: number | null
    mediaType: $Enums.MediaType | null
    title: string | null
    url: string | null
    thumbnailUrl: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CandidateMediaCountAggregateOutputType = {
    id: number
    candidateId: number
    mediaType: number
    title: number
    url: number
    thumbnailUrl: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CandidateMediaAvgAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type CandidateMediaSumAggregateInputType = {
    id?: true
    candidateId?: true
  }

  export type CandidateMediaMinAggregateInputType = {
    id?: true
    candidateId?: true
    mediaType?: true
    title?: true
    url?: true
    thumbnailUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CandidateMediaMaxAggregateInputType = {
    id?: true
    candidateId?: true
    mediaType?: true
    title?: true
    url?: true
    thumbnailUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CandidateMediaCountAggregateInputType = {
    id?: true
    candidateId?: true
    mediaType?: true
    title?: true
    url?: true
    thumbnailUrl?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CandidateMediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CandidateMedia to aggregate.
     */
    where?: CandidateMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateMedias to fetch.
     */
    orderBy?: CandidateMediaOrderByWithRelationInput | CandidateMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CandidateMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CandidateMedias
    **/
    _count?: true | CandidateMediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CandidateMediaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CandidateMediaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidateMediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidateMediaMaxAggregateInputType
  }

  export type GetCandidateMediaAggregateType<T extends CandidateMediaAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidateMedia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidateMedia[P]>
      : GetScalarType<T[P], AggregateCandidateMedia[P]>
  }




  export type CandidateMediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidateMediaWhereInput
    orderBy?: CandidateMediaOrderByWithAggregationInput | CandidateMediaOrderByWithAggregationInput[]
    by: CandidateMediaScalarFieldEnum[] | CandidateMediaScalarFieldEnum
    having?: CandidateMediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidateMediaCountAggregateInputType | true
    _avg?: CandidateMediaAvgAggregateInputType
    _sum?: CandidateMediaSumAggregateInputType
    _min?: CandidateMediaMinAggregateInputType
    _max?: CandidateMediaMaxAggregateInputType
  }

  export type CandidateMediaGroupByOutputType = {
    id: number
    candidateId: number
    mediaType: $Enums.MediaType
    title: string | null
    url: string
    thumbnailUrl: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: CandidateMediaCountAggregateOutputType | null
    _avg: CandidateMediaAvgAggregateOutputType | null
    _sum: CandidateMediaSumAggregateOutputType | null
    _min: CandidateMediaMinAggregateOutputType | null
    _max: CandidateMediaMaxAggregateOutputType | null
  }

  type GetCandidateMediaGroupByPayload<T extends CandidateMediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidateMediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidateMediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidateMediaGroupByOutputType[P]>
            : GetScalarType<T[P], CandidateMediaGroupByOutputType[P]>
        }
      >
    >


  export type CandidateMediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    mediaType?: boolean
    title?: boolean
    url?: boolean
    thumbnailUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidateMedia"]>

  export type CandidateMediaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    mediaType?: boolean
    title?: boolean
    url?: boolean
    thumbnailUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidateMedia"]>

  export type CandidateMediaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidateId?: boolean
    mediaType?: boolean
    title?: boolean
    url?: boolean
    thumbnailUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidateMedia"]>

  export type CandidateMediaSelectScalar = {
    id?: boolean
    candidateId?: boolean
    mediaType?: boolean
    title?: boolean
    url?: boolean
    thumbnailUrl?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CandidateMediaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "candidateId" | "mediaType" | "title" | "url" | "thumbnailUrl" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["candidateMedia"]>
  export type CandidateMediaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type CandidateMediaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }
  export type CandidateMediaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
  }

  export type $CandidateMediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CandidateMedia"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      candidateId: number
      mediaType: $Enums.MediaType
      title: string | null
      url: string
      thumbnailUrl: string | null
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["candidateMedia"]>
    composites: {}
  }

  type CandidateMediaGetPayload<S extends boolean | null | undefined | CandidateMediaDefaultArgs> = $Result.GetResult<Prisma.$CandidateMediaPayload, S>

  type CandidateMediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CandidateMediaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CandidateMediaCountAggregateInputType | true
    }

  export interface CandidateMediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CandidateMedia'], meta: { name: 'CandidateMedia' } }
    /**
     * Find zero or one CandidateMedia that matches the filter.
     * @param {CandidateMediaFindUniqueArgs} args - Arguments to find a CandidateMedia
     * @example
     * // Get one CandidateMedia
     * const candidateMedia = await prisma.candidateMedia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CandidateMediaFindUniqueArgs>(args: SelectSubset<T, CandidateMediaFindUniqueArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CandidateMedia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CandidateMediaFindUniqueOrThrowArgs} args - Arguments to find a CandidateMedia
     * @example
     * // Get one CandidateMedia
     * const candidateMedia = await prisma.candidateMedia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CandidateMediaFindUniqueOrThrowArgs>(args: SelectSubset<T, CandidateMediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CandidateMedia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateMediaFindFirstArgs} args - Arguments to find a CandidateMedia
     * @example
     * // Get one CandidateMedia
     * const candidateMedia = await prisma.candidateMedia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CandidateMediaFindFirstArgs>(args?: SelectSubset<T, CandidateMediaFindFirstArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CandidateMedia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateMediaFindFirstOrThrowArgs} args - Arguments to find a CandidateMedia
     * @example
     * // Get one CandidateMedia
     * const candidateMedia = await prisma.candidateMedia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CandidateMediaFindFirstOrThrowArgs>(args?: SelectSubset<T, CandidateMediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CandidateMedias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateMediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CandidateMedias
     * const candidateMedias = await prisma.candidateMedia.findMany()
     * 
     * // Get first 10 CandidateMedias
     * const candidateMedias = await prisma.candidateMedia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const candidateMediaWithIdOnly = await prisma.candidateMedia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CandidateMediaFindManyArgs>(args?: SelectSubset<T, CandidateMediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CandidateMedia.
     * @param {CandidateMediaCreateArgs} args - Arguments to create a CandidateMedia.
     * @example
     * // Create one CandidateMedia
     * const CandidateMedia = await prisma.candidateMedia.create({
     *   data: {
     *     // ... data to create a CandidateMedia
     *   }
     * })
     * 
     */
    create<T extends CandidateMediaCreateArgs>(args: SelectSubset<T, CandidateMediaCreateArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CandidateMedias.
     * @param {CandidateMediaCreateManyArgs} args - Arguments to create many CandidateMedias.
     * @example
     * // Create many CandidateMedias
     * const candidateMedia = await prisma.candidateMedia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CandidateMediaCreateManyArgs>(args?: SelectSubset<T, CandidateMediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CandidateMedias and returns the data saved in the database.
     * @param {CandidateMediaCreateManyAndReturnArgs} args - Arguments to create many CandidateMedias.
     * @example
     * // Create many CandidateMedias
     * const candidateMedia = await prisma.candidateMedia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CandidateMedias and only return the `id`
     * const candidateMediaWithIdOnly = await prisma.candidateMedia.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CandidateMediaCreateManyAndReturnArgs>(args?: SelectSubset<T, CandidateMediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CandidateMedia.
     * @param {CandidateMediaDeleteArgs} args - Arguments to delete one CandidateMedia.
     * @example
     * // Delete one CandidateMedia
     * const CandidateMedia = await prisma.candidateMedia.delete({
     *   where: {
     *     // ... filter to delete one CandidateMedia
     *   }
     * })
     * 
     */
    delete<T extends CandidateMediaDeleteArgs>(args: SelectSubset<T, CandidateMediaDeleteArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CandidateMedia.
     * @param {CandidateMediaUpdateArgs} args - Arguments to update one CandidateMedia.
     * @example
     * // Update one CandidateMedia
     * const candidateMedia = await prisma.candidateMedia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CandidateMediaUpdateArgs>(args: SelectSubset<T, CandidateMediaUpdateArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CandidateMedias.
     * @param {CandidateMediaDeleteManyArgs} args - Arguments to filter CandidateMedias to delete.
     * @example
     * // Delete a few CandidateMedias
     * const { count } = await prisma.candidateMedia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CandidateMediaDeleteManyArgs>(args?: SelectSubset<T, CandidateMediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CandidateMedias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateMediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CandidateMedias
     * const candidateMedia = await prisma.candidateMedia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CandidateMediaUpdateManyArgs>(args: SelectSubset<T, CandidateMediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CandidateMedias and returns the data updated in the database.
     * @param {CandidateMediaUpdateManyAndReturnArgs} args - Arguments to update many CandidateMedias.
     * @example
     * // Update many CandidateMedias
     * const candidateMedia = await prisma.candidateMedia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CandidateMedias and only return the `id`
     * const candidateMediaWithIdOnly = await prisma.candidateMedia.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CandidateMediaUpdateManyAndReturnArgs>(args: SelectSubset<T, CandidateMediaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CandidateMedia.
     * @param {CandidateMediaUpsertArgs} args - Arguments to update or create a CandidateMedia.
     * @example
     * // Update or create a CandidateMedia
     * const candidateMedia = await prisma.candidateMedia.upsert({
     *   create: {
     *     // ... data to create a CandidateMedia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CandidateMedia we want to update
     *   }
     * })
     */
    upsert<T extends CandidateMediaUpsertArgs>(args: SelectSubset<T, CandidateMediaUpsertArgs<ExtArgs>>): Prisma__CandidateMediaClient<$Result.GetResult<Prisma.$CandidateMediaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CandidateMedias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateMediaCountArgs} args - Arguments to filter CandidateMedias to count.
     * @example
     * // Count the number of CandidateMedias
     * const count = await prisma.candidateMedia.count({
     *   where: {
     *     // ... the filter for the CandidateMedias we want to count
     *   }
     * })
    **/
    count<T extends CandidateMediaCountArgs>(
      args?: Subset<T, CandidateMediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidateMediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CandidateMedia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateMediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidateMediaAggregateArgs>(args: Subset<T, CandidateMediaAggregateArgs>): Prisma.PrismaPromise<GetCandidateMediaAggregateType<T>>

    /**
     * Group by CandidateMedia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateMediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CandidateMediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CandidateMediaGroupByArgs['orderBy'] }
        : { orderBy?: CandidateMediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CandidateMediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidateMediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CandidateMedia model
   */
  readonly fields: CandidateMediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CandidateMedia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CandidateMediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CandidateMedia model
   */
  interface CandidateMediaFieldRefs {
    readonly id: FieldRef<"CandidateMedia", 'Int'>
    readonly candidateId: FieldRef<"CandidateMedia", 'Int'>
    readonly mediaType: FieldRef<"CandidateMedia", 'MediaType'>
    readonly title: FieldRef<"CandidateMedia", 'String'>
    readonly url: FieldRef<"CandidateMedia", 'String'>
    readonly thumbnailUrl: FieldRef<"CandidateMedia", 'String'>
    readonly description: FieldRef<"CandidateMedia", 'String'>
    readonly createdAt: FieldRef<"CandidateMedia", 'DateTime'>
    readonly updatedAt: FieldRef<"CandidateMedia", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CandidateMedia findUnique
   */
  export type CandidateMediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * Filter, which CandidateMedia to fetch.
     */
    where: CandidateMediaWhereUniqueInput
  }

  /**
   * CandidateMedia findUniqueOrThrow
   */
  export type CandidateMediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * Filter, which CandidateMedia to fetch.
     */
    where: CandidateMediaWhereUniqueInput
  }

  /**
   * CandidateMedia findFirst
   */
  export type CandidateMediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * Filter, which CandidateMedia to fetch.
     */
    where?: CandidateMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateMedias to fetch.
     */
    orderBy?: CandidateMediaOrderByWithRelationInput | CandidateMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CandidateMedias.
     */
    cursor?: CandidateMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CandidateMedias.
     */
    distinct?: CandidateMediaScalarFieldEnum | CandidateMediaScalarFieldEnum[]
  }

  /**
   * CandidateMedia findFirstOrThrow
   */
  export type CandidateMediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * Filter, which CandidateMedia to fetch.
     */
    where?: CandidateMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateMedias to fetch.
     */
    orderBy?: CandidateMediaOrderByWithRelationInput | CandidateMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CandidateMedias.
     */
    cursor?: CandidateMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CandidateMedias.
     */
    distinct?: CandidateMediaScalarFieldEnum | CandidateMediaScalarFieldEnum[]
  }

  /**
   * CandidateMedia findMany
   */
  export type CandidateMediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * Filter, which CandidateMedias to fetch.
     */
    where?: CandidateMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidateMedias to fetch.
     */
    orderBy?: CandidateMediaOrderByWithRelationInput | CandidateMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CandidateMedias.
     */
    cursor?: CandidateMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidateMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidateMedias.
     */
    skip?: number
    distinct?: CandidateMediaScalarFieldEnum | CandidateMediaScalarFieldEnum[]
  }

  /**
   * CandidateMedia create
   */
  export type CandidateMediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * The data needed to create a CandidateMedia.
     */
    data: XOR<CandidateMediaCreateInput, CandidateMediaUncheckedCreateInput>
  }

  /**
   * CandidateMedia createMany
   */
  export type CandidateMediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CandidateMedias.
     */
    data: CandidateMediaCreateManyInput | CandidateMediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CandidateMedia createManyAndReturn
   */
  export type CandidateMediaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * The data used to create many CandidateMedias.
     */
    data: CandidateMediaCreateManyInput | CandidateMediaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CandidateMedia update
   */
  export type CandidateMediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * The data needed to update a CandidateMedia.
     */
    data: XOR<CandidateMediaUpdateInput, CandidateMediaUncheckedUpdateInput>
    /**
     * Choose, which CandidateMedia to update.
     */
    where: CandidateMediaWhereUniqueInput
  }

  /**
   * CandidateMedia updateMany
   */
  export type CandidateMediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CandidateMedias.
     */
    data: XOR<CandidateMediaUpdateManyMutationInput, CandidateMediaUncheckedUpdateManyInput>
    /**
     * Filter which CandidateMedias to update
     */
    where?: CandidateMediaWhereInput
    /**
     * Limit how many CandidateMedias to update.
     */
    limit?: number
  }

  /**
   * CandidateMedia updateManyAndReturn
   */
  export type CandidateMediaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * The data used to update CandidateMedias.
     */
    data: XOR<CandidateMediaUpdateManyMutationInput, CandidateMediaUncheckedUpdateManyInput>
    /**
     * Filter which CandidateMedias to update
     */
    where?: CandidateMediaWhereInput
    /**
     * Limit how many CandidateMedias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CandidateMedia upsert
   */
  export type CandidateMediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * The filter to search for the CandidateMedia to update in case it exists.
     */
    where: CandidateMediaWhereUniqueInput
    /**
     * In case the CandidateMedia found by the `where` argument doesn't exist, create a new CandidateMedia with this data.
     */
    create: XOR<CandidateMediaCreateInput, CandidateMediaUncheckedCreateInput>
    /**
     * In case the CandidateMedia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CandidateMediaUpdateInput, CandidateMediaUncheckedUpdateInput>
  }

  /**
   * CandidateMedia delete
   */
  export type CandidateMediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
    /**
     * Filter which CandidateMedia to delete.
     */
    where: CandidateMediaWhereUniqueInput
  }

  /**
   * CandidateMedia deleteMany
   */
  export type CandidateMediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CandidateMedias to delete
     */
    where?: CandidateMediaWhereInput
    /**
     * Limit how many CandidateMedias to delete.
     */
    limit?: number
  }

  /**
   * CandidateMedia without action
   */
  export type CandidateMediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateMedia
     */
    select?: CandidateMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CandidateMedia
     */
    omit?: CandidateMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidateMediaInclude<ExtArgs> | null
  }


  /**
   * Model JobDocument
   */

  export type AggregateJobDocument = {
    _count: JobDocumentCountAggregateOutputType | null
    _avg: JobDocumentAvgAggregateOutputType | null
    _sum: JobDocumentSumAggregateOutputType | null
    _min: JobDocumentMinAggregateOutputType | null
    _max: JobDocumentMaxAggregateOutputType | null
  }

  export type JobDocumentAvgAggregateOutputType = {
    id: number | null
    jobId: number | null
  }

  export type JobDocumentSumAggregateOutputType = {
    id: number | null
    jobId: number | null
  }

  export type JobDocumentMinAggregateOutputType = {
    id: number | null
    jobId: number | null
    documentName: string | null
    documentUrl: string | null
    documentType: $Enums.DocumentType | null
    thumbnailUrl: string | null
    uploadedAt: Date | null
  }

  export type JobDocumentMaxAggregateOutputType = {
    id: number | null
    jobId: number | null
    documentName: string | null
    documentUrl: string | null
    documentType: $Enums.DocumentType | null
    thumbnailUrl: string | null
    uploadedAt: Date | null
  }

  export type JobDocumentCountAggregateOutputType = {
    id: number
    jobId: number
    documentName: number
    documentUrl: number
    documentType: number
    thumbnailUrl: number
    uploadedAt: number
    _all: number
  }


  export type JobDocumentAvgAggregateInputType = {
    id?: true
    jobId?: true
  }

  export type JobDocumentSumAggregateInputType = {
    id?: true
    jobId?: true
  }

  export type JobDocumentMinAggregateInputType = {
    id?: true
    jobId?: true
    documentName?: true
    documentUrl?: true
    documentType?: true
    thumbnailUrl?: true
    uploadedAt?: true
  }

  export type JobDocumentMaxAggregateInputType = {
    id?: true
    jobId?: true
    documentName?: true
    documentUrl?: true
    documentType?: true
    thumbnailUrl?: true
    uploadedAt?: true
  }

  export type JobDocumentCountAggregateInputType = {
    id?: true
    jobId?: true
    documentName?: true
    documentUrl?: true
    documentType?: true
    thumbnailUrl?: true
    uploadedAt?: true
    _all?: true
  }

  export type JobDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobDocument to aggregate.
     */
    where?: JobDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobDocuments to fetch.
     */
    orderBy?: JobDocumentOrderByWithRelationInput | JobDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobDocuments
    **/
    _count?: true | JobDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobDocumentMaxAggregateInputType
  }

  export type GetJobDocumentAggregateType<T extends JobDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateJobDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobDocument[P]>
      : GetScalarType<T[P], AggregateJobDocument[P]>
  }




  export type JobDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobDocumentWhereInput
    orderBy?: JobDocumentOrderByWithAggregationInput | JobDocumentOrderByWithAggregationInput[]
    by: JobDocumentScalarFieldEnum[] | JobDocumentScalarFieldEnum
    having?: JobDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobDocumentCountAggregateInputType | true
    _avg?: JobDocumentAvgAggregateInputType
    _sum?: JobDocumentSumAggregateInputType
    _min?: JobDocumentMinAggregateInputType
    _max?: JobDocumentMaxAggregateInputType
  }

  export type JobDocumentGroupByOutputType = {
    id: number
    jobId: number
    documentName: string
    documentUrl: string
    documentType: $Enums.DocumentType
    thumbnailUrl: string | null
    uploadedAt: Date
    _count: JobDocumentCountAggregateOutputType | null
    _avg: JobDocumentAvgAggregateOutputType | null
    _sum: JobDocumentSumAggregateOutputType | null
    _min: JobDocumentMinAggregateOutputType | null
    _max: JobDocumentMaxAggregateOutputType | null
  }

  type GetJobDocumentGroupByPayload<T extends JobDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], JobDocumentGroupByOutputType[P]>
        }
      >
    >


  export type JobDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    documentName?: boolean
    documentUrl?: boolean
    documentType?: boolean
    thumbnailUrl?: boolean
    uploadedAt?: boolean
    job?: boolean | JobDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobDocument"]>

  export type JobDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    documentName?: boolean
    documentUrl?: boolean
    documentType?: boolean
    thumbnailUrl?: boolean
    uploadedAt?: boolean
    job?: boolean | JobDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobDocument"]>

  export type JobDocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    documentName?: boolean
    documentUrl?: boolean
    documentType?: boolean
    thumbnailUrl?: boolean
    uploadedAt?: boolean
    job?: boolean | JobDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobDocument"]>

  export type JobDocumentSelectScalar = {
    id?: boolean
    jobId?: boolean
    documentName?: boolean
    documentUrl?: boolean
    documentType?: boolean
    thumbnailUrl?: boolean
    uploadedAt?: boolean
  }

  export type JobDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "jobId" | "documentName" | "documentUrl" | "documentType" | "thumbnailUrl" | "uploadedAt", ExtArgs["result"]["jobDocument"]>
  export type JobDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | JobDefaultArgs<ExtArgs>
  }
  export type JobDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | JobDefaultArgs<ExtArgs>
  }
  export type JobDocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | JobDefaultArgs<ExtArgs>
  }

  export type $JobDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobDocument"
    objects: {
      job: Prisma.$JobPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      jobId: number
      documentName: string
      documentUrl: string
      documentType: $Enums.DocumentType
      thumbnailUrl: string | null
      uploadedAt: Date
    }, ExtArgs["result"]["jobDocument"]>
    composites: {}
  }

  type JobDocumentGetPayload<S extends boolean | null | undefined | JobDocumentDefaultArgs> = $Result.GetResult<Prisma.$JobDocumentPayload, S>

  type JobDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JobDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JobDocumentCountAggregateInputType | true
    }

  export interface JobDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobDocument'], meta: { name: 'JobDocument' } }
    /**
     * Find zero or one JobDocument that matches the filter.
     * @param {JobDocumentFindUniqueArgs} args - Arguments to find a JobDocument
     * @example
     * // Get one JobDocument
     * const jobDocument = await prisma.jobDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobDocumentFindUniqueArgs>(args: SelectSubset<T, JobDocumentFindUniqueArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one JobDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JobDocumentFindUniqueOrThrowArgs} args - Arguments to find a JobDocument
     * @example
     * // Get one JobDocument
     * const jobDocument = await prisma.jobDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, JobDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobDocumentFindFirstArgs} args - Arguments to find a JobDocument
     * @example
     * // Get one JobDocument
     * const jobDocument = await prisma.jobDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobDocumentFindFirstArgs>(args?: SelectSubset<T, JobDocumentFindFirstArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobDocumentFindFirstOrThrowArgs} args - Arguments to find a JobDocument
     * @example
     * // Get one JobDocument
     * const jobDocument = await prisma.jobDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, JobDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more JobDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobDocuments
     * const jobDocuments = await prisma.jobDocument.findMany()
     * 
     * // Get first 10 JobDocuments
     * const jobDocuments = await prisma.jobDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobDocumentWithIdOnly = await prisma.jobDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobDocumentFindManyArgs>(args?: SelectSubset<T, JobDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a JobDocument.
     * @param {JobDocumentCreateArgs} args - Arguments to create a JobDocument.
     * @example
     * // Create one JobDocument
     * const JobDocument = await prisma.jobDocument.create({
     *   data: {
     *     // ... data to create a JobDocument
     *   }
     * })
     * 
     */
    create<T extends JobDocumentCreateArgs>(args: SelectSubset<T, JobDocumentCreateArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many JobDocuments.
     * @param {JobDocumentCreateManyArgs} args - Arguments to create many JobDocuments.
     * @example
     * // Create many JobDocuments
     * const jobDocument = await prisma.jobDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobDocumentCreateManyArgs>(args?: SelectSubset<T, JobDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobDocuments and returns the data saved in the database.
     * @param {JobDocumentCreateManyAndReturnArgs} args - Arguments to create many JobDocuments.
     * @example
     * // Create many JobDocuments
     * const jobDocument = await prisma.jobDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobDocuments and only return the `id`
     * const jobDocumentWithIdOnly = await prisma.jobDocument.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, JobDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a JobDocument.
     * @param {JobDocumentDeleteArgs} args - Arguments to delete one JobDocument.
     * @example
     * // Delete one JobDocument
     * const JobDocument = await prisma.jobDocument.delete({
     *   where: {
     *     // ... filter to delete one JobDocument
     *   }
     * })
     * 
     */
    delete<T extends JobDocumentDeleteArgs>(args: SelectSubset<T, JobDocumentDeleteArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one JobDocument.
     * @param {JobDocumentUpdateArgs} args - Arguments to update one JobDocument.
     * @example
     * // Update one JobDocument
     * const jobDocument = await prisma.jobDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobDocumentUpdateArgs>(args: SelectSubset<T, JobDocumentUpdateArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more JobDocuments.
     * @param {JobDocumentDeleteManyArgs} args - Arguments to filter JobDocuments to delete.
     * @example
     * // Delete a few JobDocuments
     * const { count } = await prisma.jobDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobDocumentDeleteManyArgs>(args?: SelectSubset<T, JobDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobDocuments
     * const jobDocument = await prisma.jobDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobDocumentUpdateManyArgs>(args: SelectSubset<T, JobDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobDocuments and returns the data updated in the database.
     * @param {JobDocumentUpdateManyAndReturnArgs} args - Arguments to update many JobDocuments.
     * @example
     * // Update many JobDocuments
     * const jobDocument = await prisma.jobDocument.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more JobDocuments and only return the `id`
     * const jobDocumentWithIdOnly = await prisma.jobDocument.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends JobDocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, JobDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one JobDocument.
     * @param {JobDocumentUpsertArgs} args - Arguments to update or create a JobDocument.
     * @example
     * // Update or create a JobDocument
     * const jobDocument = await prisma.jobDocument.upsert({
     *   create: {
     *     // ... data to create a JobDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobDocument we want to update
     *   }
     * })
     */
    upsert<T extends JobDocumentUpsertArgs>(args: SelectSubset<T, JobDocumentUpsertArgs<ExtArgs>>): Prisma__JobDocumentClient<$Result.GetResult<Prisma.$JobDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of JobDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobDocumentCountArgs} args - Arguments to filter JobDocuments to count.
     * @example
     * // Count the number of JobDocuments
     * const count = await prisma.jobDocument.count({
     *   where: {
     *     // ... the filter for the JobDocuments we want to count
     *   }
     * })
    **/
    count<T extends JobDocumentCountArgs>(
      args?: Subset<T, JobDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobDocumentAggregateArgs>(args: Subset<T, JobDocumentAggregateArgs>): Prisma.PrismaPromise<GetJobDocumentAggregateType<T>>

    /**
     * Group by JobDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobDocumentGroupByArgs['orderBy'] }
        : { orderBy?: JobDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobDocument model
   */
  readonly fields: JobDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    job<T extends JobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobDefaultArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobDocument model
   */
  interface JobDocumentFieldRefs {
    readonly id: FieldRef<"JobDocument", 'Int'>
    readonly jobId: FieldRef<"JobDocument", 'Int'>
    readonly documentName: FieldRef<"JobDocument", 'String'>
    readonly documentUrl: FieldRef<"JobDocument", 'String'>
    readonly documentType: FieldRef<"JobDocument", 'DocumentType'>
    readonly thumbnailUrl: FieldRef<"JobDocument", 'String'>
    readonly uploadedAt: FieldRef<"JobDocument", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * JobDocument findUnique
   */
  export type JobDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * Filter, which JobDocument to fetch.
     */
    where: JobDocumentWhereUniqueInput
  }

  /**
   * JobDocument findUniqueOrThrow
   */
  export type JobDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * Filter, which JobDocument to fetch.
     */
    where: JobDocumentWhereUniqueInput
  }

  /**
   * JobDocument findFirst
   */
  export type JobDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * Filter, which JobDocument to fetch.
     */
    where?: JobDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobDocuments to fetch.
     */
    orderBy?: JobDocumentOrderByWithRelationInput | JobDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobDocuments.
     */
    cursor?: JobDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobDocuments.
     */
    distinct?: JobDocumentScalarFieldEnum | JobDocumentScalarFieldEnum[]
  }

  /**
   * JobDocument findFirstOrThrow
   */
  export type JobDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * Filter, which JobDocument to fetch.
     */
    where?: JobDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobDocuments to fetch.
     */
    orderBy?: JobDocumentOrderByWithRelationInput | JobDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobDocuments.
     */
    cursor?: JobDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobDocuments.
     */
    distinct?: JobDocumentScalarFieldEnum | JobDocumentScalarFieldEnum[]
  }

  /**
   * JobDocument findMany
   */
  export type JobDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * Filter, which JobDocuments to fetch.
     */
    where?: JobDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobDocuments to fetch.
     */
    orderBy?: JobDocumentOrderByWithRelationInput | JobDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobDocuments.
     */
    cursor?: JobDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobDocuments.
     */
    skip?: number
    distinct?: JobDocumentScalarFieldEnum | JobDocumentScalarFieldEnum[]
  }

  /**
   * JobDocument create
   */
  export type JobDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a JobDocument.
     */
    data: XOR<JobDocumentCreateInput, JobDocumentUncheckedCreateInput>
  }

  /**
   * JobDocument createMany
   */
  export type JobDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobDocuments.
     */
    data: JobDocumentCreateManyInput | JobDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobDocument createManyAndReturn
   */
  export type JobDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * The data used to create many JobDocuments.
     */
    data: JobDocumentCreateManyInput | JobDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobDocument update
   */
  export type JobDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a JobDocument.
     */
    data: XOR<JobDocumentUpdateInput, JobDocumentUncheckedUpdateInput>
    /**
     * Choose, which JobDocument to update.
     */
    where: JobDocumentWhereUniqueInput
  }

  /**
   * JobDocument updateMany
   */
  export type JobDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobDocuments.
     */
    data: XOR<JobDocumentUpdateManyMutationInput, JobDocumentUncheckedUpdateManyInput>
    /**
     * Filter which JobDocuments to update
     */
    where?: JobDocumentWhereInput
    /**
     * Limit how many JobDocuments to update.
     */
    limit?: number
  }

  /**
   * JobDocument updateManyAndReturn
   */
  export type JobDocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * The data used to update JobDocuments.
     */
    data: XOR<JobDocumentUpdateManyMutationInput, JobDocumentUncheckedUpdateManyInput>
    /**
     * Filter which JobDocuments to update
     */
    where?: JobDocumentWhereInput
    /**
     * Limit how many JobDocuments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobDocument upsert
   */
  export type JobDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the JobDocument to update in case it exists.
     */
    where: JobDocumentWhereUniqueInput
    /**
     * In case the JobDocument found by the `where` argument doesn't exist, create a new JobDocument with this data.
     */
    create: XOR<JobDocumentCreateInput, JobDocumentUncheckedCreateInput>
    /**
     * In case the JobDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobDocumentUpdateInput, JobDocumentUncheckedUpdateInput>
  }

  /**
   * JobDocument delete
   */
  export type JobDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
    /**
     * Filter which JobDocument to delete.
     */
    where: JobDocumentWhereUniqueInput
  }

  /**
   * JobDocument deleteMany
   */
  export type JobDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobDocuments to delete
     */
    where?: JobDocumentWhereInput
    /**
     * Limit how many JobDocuments to delete.
     */
    limit?: number
  }

  /**
   * JobDocument without action
   */
  export type JobDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobDocument
     */
    select?: JobDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobDocument
     */
    omit?: JobDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobDocumentInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const IndustryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    nameJp: 'nameJp',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type IndustryScalarFieldEnum = (typeof IndustryScalarFieldEnum)[keyof typeof IndustryScalarFieldEnum]


  export const SkillScalarFieldEnum: {
    id: 'id',
    name: 'name',
    nameJp: 'nameJp',
    category: 'category',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SkillScalarFieldEnum = (typeof SkillScalarFieldEnum)[keyof typeof SkillScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    passwordHash: 'passwordHash',
    fullName: 'fullName',
    phoneNumber: 'phoneNumber',
    userType: 'userType',
    avatarUrl: 'avatarUrl',
    isActive: 'isActive',
    isEmailVerified: 'isEmailVerified',
    emailVerifyToken: 'emailVerifyToken',
    passwordResetToken: 'passwordResetToken',
    passwordResetExpires: 'passwordResetExpires',
    lastLogin: 'lastLogin',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const EmployerScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    companyName: 'companyName',
    companyNameKana: 'companyNameKana',
    companyNameJp: 'companyNameJp',
    companyLogoUrl: 'companyLogoUrl',
    companyWebsite: 'companyWebsite',
    companyDescription: 'companyDescription',
    companyDescriptionJp: 'companyDescriptionJp',
    businessOverview: 'businessOverview',
    businessOverviewJp: 'businessOverviewJp',
    companyAddress: 'companyAddress',
    companyAddressJp: 'companyAddressJp',
    companyPhone: 'companyPhone',
    establishmentDate: 'establishmentDate',
    representativeName: 'representativeName',
    representativeTitle: 'representativeTitle',
    vietnamBranchExists: 'vietnamBranchExists',
    companySize: 'companySize',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EmployerScalarFieldEnum = (typeof EmployerScalarFieldEnum)[keyof typeof EmployerScalarFieldEnum]


  export const CandidateScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    nameKana: 'nameKana',
    dateOfBirth: 'dateOfBirth',
    gender: 'gender',
    nationality: 'nationality',
    currentAddressJp: 'currentAddressJp',
    homeCountryAddress: 'homeCountryAddress',
    country: 'country',
    headline: 'headline',
    headlineJp: 'headlineJp',
    professionalSummary: 'professionalSummary',
    professionalSummaryJp: 'professionalSummaryJp',
    appealStatement: 'appealStatement',
    appealStatementJp: 'appealStatementJp',
    keyStrengths: 'keyStrengths',
    motivationStatement: 'motivationStatement',
    careerGoals: 'careerGoals',
    linkedinUrl: 'linkedinUrl',
    githubUrl: 'githubUrl',
    portfolioUrl: 'portfolioUrl',
    otherSocialProfiles: 'otherSocialProfiles',
    desiredSalaryMin: 'desiredSalaryMin',
    desiredSalaryMax: 'desiredSalaryMax',
    desiredSalaryType: 'desiredSalaryType',
    preferredJobTypes: 'preferredJobTypes',
    preferredWorkLocations: 'preferredWorkLocations',
    jobExpectations: 'jobExpectations',
    interestsTags: 'interestsTags',
    currentVisaStatusJp: 'currentVisaStatusJp',
    visaExpiryDateJp: 'visaExpiryDateJp',
    desiredVisaSupport: 'desiredVisaSupport',
    japaneseProficiency: 'japaneseProficiency',
    englishProficiency: 'englishProficiency',
    otherLanguages: 'otherLanguages',
    willingToRelocateInJapan: 'willingToRelocateInJapan',
    arrivalInJapanDate: 'arrivalInJapanDate',
    expectedGraduationDate: 'expectedGraduationDate',
    currentYearOfStudy: 'currentYearOfStudy',
    studentId: 'studentId',
    isSearchable: 'isSearchable',
    profileCompleteness: 'profileCompleteness',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CandidateScalarFieldEnum = (typeof CandidateScalarFieldEnum)[keyof typeof CandidateScalarFieldEnum]


  export const JobScalarFieldEnum: {
    id: 'id',
    employerId: 'employerId',
    industryId: 'industryId',
    title: 'title',
    titleJp: 'titleJp',
    description: 'description',
    descriptionJp: 'descriptionJp',
    requirements: 'requirements',
    requirementsJp: 'requirementsJp',
    benefits: 'benefits',
    benefitsJp: 'benefitsJp',
    appealPoints: 'appealPoints',
    salaryMin: 'salaryMin',
    salaryMax: 'salaryMax',
    salaryType: 'salaryType',
    salaryDetails: 'salaryDetails',
    country: 'country',
    prefecture: 'prefecture',
    city: 'city',
    addressDetail: 'addressDetail',
    nearestStation: 'nearestStation',
    isRemote: 'isRemote',
    remoteDetails: 'remoteDetails',
    jobType: 'jobType',
    status: 'status',
    postedDate: 'postedDate',
    expiryDate: 'expiryDate',
    externalApplicationUrl: 'externalApplicationUrl',
    hiringStages: 'hiringStages',
    workingHoursDescription: 'workingHoursDescription',
    isFlexTime: 'isFlexTime',
    coreTimeDescription: 'coreTimeDescription',
    actualWorkingHoursPerDay: 'actualWorkingHoursPerDay',
    avgOvertimeHoursPerMonth: 'avgOvertimeHoursPerMonth',
    requiredJapaneseLevel: 'requiredJapaneseLevel',
    requiredEnglishLevel: 'requiredEnglishLevel',
    otherLanguageRequirements: 'otherLanguageRequirements',
    visaSupportAvailable: 'visaSupportAvailable',
    relocationSupportAvailable: 'relocationSupportAvailable',
    housingSupportDetails: 'housingSupportDetails',
    foreignFriendlyEnvironment: 'foreignFriendlyEnvironment',
    targetCandidateDescription: 'targetCandidateDescription',
    numberOfHires: 'numberOfHires',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type JobScalarFieldEnum = (typeof JobScalarFieldEnum)[keyof typeof JobScalarFieldEnum]


  export const JobSkillScalarFieldEnum: {
    id: 'id',
    jobId: 'jobId',
    skillId: 'skillId',
    importanceLevel: 'importanceLevel',
    requiredYears: 'requiredYears'
  };

  export type JobSkillScalarFieldEnum = (typeof JobSkillScalarFieldEnum)[keyof typeof JobSkillScalarFieldEnum]


  export const CandidateSkillScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    skillId: 'skillId',
    proficiencyLevel: 'proficiencyLevel',
    experienceMonths: 'experienceMonths'
  };

  export type CandidateSkillScalarFieldEnum = (typeof CandidateSkillScalarFieldEnum)[keyof typeof CandidateSkillScalarFieldEnum]


  export const CVScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    fileName: 'fileName',
    fileUrl: 'fileUrl',
    fileType: 'fileType',
    language: 'language',
    isPrimary: 'isPrimary',
    uploadedAt: 'uploadedAt'
  };

  export type CVScalarFieldEnum = (typeof CVScalarFieldEnum)[keyof typeof CVScalarFieldEnum]


  export const ApplicationScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    jobId: 'jobId',
    cvId: 'cvId',
    coverLetter: 'coverLetter',
    applicationDate: 'applicationDate',
    status: 'status',
    statusMessage: 'statusMessage',
    currentStageIndex: 'currentStageIndex',
    internalNotes: 'internalNotes',
    candidateNotes: 'candidateNotes',
    processLog: 'processLog',
    isBookmarked: 'isBookmarked',
    matchScore: 'matchScore',
    manualScore: 'manualScore',
    offerDetails: 'offerDetails',
    lastUpdatedById: 'lastUpdatedById'
  };

  export type ApplicationScalarFieldEnum = (typeof ApplicationScalarFieldEnum)[keyof typeof ApplicationScalarFieldEnum]


  export const EducationScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    universityName: 'universityName',
    facultyDepartment: 'facultyDepartment',
    degree: 'degree',
    major: 'major',
    startDate: 'startDate',
    endDate: 'endDate',
    expectedGraduationDate: 'expectedGraduationDate',
    gpa: 'gpa',
    description: 'description',
    descriptionJp: 'descriptionJp',
    country: 'country',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EducationScalarFieldEnum = (typeof EducationScalarFieldEnum)[keyof typeof EducationScalarFieldEnum]


  export const WorkExperienceScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    companyName: 'companyName',
    jobTitle: 'jobTitle',
    employmentType: 'employmentType',
    startDate: 'startDate',
    endDate: 'endDate',
    isCurrent: 'isCurrent',
    location: 'location',
    description: 'description',
    descriptionJp: 'descriptionJp',
    responsibilities: 'responsibilities',
    keyToolsTechnologies: 'keyToolsTechnologies',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WorkExperienceScalarFieldEnum = (typeof WorkExperienceScalarFieldEnum)[keyof typeof WorkExperienceScalarFieldEnum]


  export const ProjectScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    title: 'title',
    titleJp: 'titleJp',
    url: 'url',
    purpose: 'purpose',
    purposeJp: 'purposeJp',
    description: 'description',
    descriptionJp: 'descriptionJp',
    bulletPoints: 'bulletPoints',
    technologiesUsed: 'technologiesUsed',
    teamDetails: 'teamDetails',
    duration: 'duration',
    startDate: 'startDate',
    endDate: 'endDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProjectScalarFieldEnum = (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum]


  export const QualificationScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    name: 'name',
    issuingOrganization: 'issuingOrganization',
    issueDate: 'issueDate',
    expiryDate: 'expiryDate',
    credentialId: 'credentialId',
    credentialUrl: 'credentialUrl',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type QualificationScalarFieldEnum = (typeof QualificationScalarFieldEnum)[keyof typeof QualificationScalarFieldEnum]


  export const AwardScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    title: 'title',
    issuer: 'issuer',
    date: 'date',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AwardScalarFieldEnum = (typeof AwardScalarFieldEnum)[keyof typeof AwardScalarFieldEnum]


  export const CandidateMediaScalarFieldEnum: {
    id: 'id',
    candidateId: 'candidateId',
    mediaType: 'mediaType',
    title: 'title',
    url: 'url',
    thumbnailUrl: 'thumbnailUrl',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CandidateMediaScalarFieldEnum = (typeof CandidateMediaScalarFieldEnum)[keyof typeof CandidateMediaScalarFieldEnum]


  export const JobDocumentScalarFieldEnum: {
    id: 'id',
    jobId: 'jobId',
    documentName: 'documentName',
    documentUrl: 'documentUrl',
    documentType: 'documentType',
    thumbnailUrl: 'thumbnailUrl',
    uploadedAt: 'uploadedAt'
  };

  export type JobDocumentScalarFieldEnum = (typeof JobDocumentScalarFieldEnum)[keyof typeof JobDocumentScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'SkillCategory'
   */
  export type EnumSkillCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SkillCategory'>
    


  /**
   * Reference to a field of type 'SkillCategory[]'
   */
  export type ListEnumSkillCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SkillCategory[]'>
    


  /**
   * Reference to a field of type 'UserType'
   */
  export type EnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType'>
    


  /**
   * Reference to a field of type 'UserType[]'
   */
  export type ListEnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'CompanySizeType'
   */
  export type EnumCompanySizeTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanySizeType'>
    


  /**
   * Reference to a field of type 'CompanySizeType[]'
   */
  export type ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanySizeType[]'>
    


  /**
   * Reference to a field of type 'GenderType'
   */
  export type EnumGenderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GenderType'>
    


  /**
   * Reference to a field of type 'GenderType[]'
   */
  export type ListEnumGenderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GenderType[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'SalaryType'
   */
  export type EnumSalaryTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SalaryType'>
    


  /**
   * Reference to a field of type 'SalaryType[]'
   */
  export type ListEnumSalaryTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SalaryType[]'>
    


  /**
   * Reference to a field of type 'JobTypeEnum[]'
   */
  export type ListEnumJobTypeEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobTypeEnum[]'>
    


  /**
   * Reference to a field of type 'JobTypeEnum'
   */
  export type EnumJobTypeEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobTypeEnum'>
    


  /**
   * Reference to a field of type 'JapaneseProficiencyLevel'
   */
  export type EnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JapaneseProficiencyLevel'>
    


  /**
   * Reference to a field of type 'JapaneseProficiencyLevel[]'
   */
  export type ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JapaneseProficiencyLevel[]'>
    


  /**
   * Reference to a field of type 'ProficiencyLevel'
   */
  export type EnumProficiencyLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProficiencyLevel'>
    


  /**
   * Reference to a field of type 'ProficiencyLevel[]'
   */
  export type ListEnumProficiencyLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProficiencyLevel[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'JobStatus'
   */
  export type EnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus'>
    


  /**
   * Reference to a field of type 'JobStatus[]'
   */
  export type ListEnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus[]'>
    


  /**
   * Reference to a field of type 'FileTypeEnum'
   */
  export type EnumFileTypeEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FileTypeEnum'>
    


  /**
   * Reference to a field of type 'FileTypeEnum[]'
   */
  export type ListEnumFileTypeEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FileTypeEnum[]'>
    


  /**
   * Reference to a field of type 'ApplicationStatus'
   */
  export type EnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus'>
    


  /**
   * Reference to a field of type 'ApplicationStatus[]'
   */
  export type ListEnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus[]'>
    


  /**
   * Reference to a field of type 'MediaType'
   */
  export type EnumMediaTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MediaType'>
    


  /**
   * Reference to a field of type 'MediaType[]'
   */
  export type ListEnumMediaTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MediaType[]'>
    


  /**
   * Reference to a field of type 'DocumentType'
   */
  export type EnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType'>
    


  /**
   * Reference to a field of type 'DocumentType[]'
   */
  export type ListEnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType[]'>
    
  /**
   * Deep Input Types
   */


  export type IndustryWhereInput = {
    AND?: IndustryWhereInput | IndustryWhereInput[]
    OR?: IndustryWhereInput[]
    NOT?: IndustryWhereInput | IndustryWhereInput[]
    id?: IntFilter<"Industry"> | number
    name?: StringFilter<"Industry"> | string
    nameJp?: StringNullableFilter<"Industry"> | string | null
    description?: StringNullableFilter<"Industry"> | string | null
    createdAt?: DateTimeFilter<"Industry"> | Date | string
    updatedAt?: DateTimeFilter<"Industry"> | Date | string
    jobs?: JobListRelationFilter
  }

  export type IndustryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    jobs?: JobOrderByRelationAggregateInput
  }

  export type IndustryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: IndustryWhereInput | IndustryWhereInput[]
    OR?: IndustryWhereInput[]
    NOT?: IndustryWhereInput | IndustryWhereInput[]
    nameJp?: StringNullableFilter<"Industry"> | string | null
    description?: StringNullableFilter<"Industry"> | string | null
    createdAt?: DateTimeFilter<"Industry"> | Date | string
    updatedAt?: DateTimeFilter<"Industry"> | Date | string
    jobs?: JobListRelationFilter
  }, "id" | "name">

  export type IndustryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: IndustryCountOrderByAggregateInput
    _avg?: IndustryAvgOrderByAggregateInput
    _max?: IndustryMaxOrderByAggregateInput
    _min?: IndustryMinOrderByAggregateInput
    _sum?: IndustrySumOrderByAggregateInput
  }

  export type IndustryScalarWhereWithAggregatesInput = {
    AND?: IndustryScalarWhereWithAggregatesInput | IndustryScalarWhereWithAggregatesInput[]
    OR?: IndustryScalarWhereWithAggregatesInput[]
    NOT?: IndustryScalarWhereWithAggregatesInput | IndustryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Industry"> | number
    name?: StringWithAggregatesFilter<"Industry"> | string
    nameJp?: StringNullableWithAggregatesFilter<"Industry"> | string | null
    description?: StringNullableWithAggregatesFilter<"Industry"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Industry"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Industry"> | Date | string
  }

  export type SkillWhereInput = {
    AND?: SkillWhereInput | SkillWhereInput[]
    OR?: SkillWhereInput[]
    NOT?: SkillWhereInput | SkillWhereInput[]
    id?: IntFilter<"Skill"> | number
    name?: StringFilter<"Skill"> | string
    nameJp?: StringNullableFilter<"Skill"> | string | null
    category?: EnumSkillCategoryNullableFilter<"Skill"> | $Enums.SkillCategory | null
    description?: StringNullableFilter<"Skill"> | string | null
    createdAt?: DateTimeFilter<"Skill"> | Date | string
    updatedAt?: DateTimeFilter<"Skill"> | Date | string
    jobSkills?: JobSkillListRelationFilter
    candidateSkills?: CandidateSkillListRelationFilter
  }

  export type SkillOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    jobSkills?: JobSkillOrderByRelationAggregateInput
    candidateSkills?: CandidateSkillOrderByRelationAggregateInput
  }

  export type SkillWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: SkillWhereInput | SkillWhereInput[]
    OR?: SkillWhereInput[]
    NOT?: SkillWhereInput | SkillWhereInput[]
    nameJp?: StringNullableFilter<"Skill"> | string | null
    category?: EnumSkillCategoryNullableFilter<"Skill"> | $Enums.SkillCategory | null
    description?: StringNullableFilter<"Skill"> | string | null
    createdAt?: DateTimeFilter<"Skill"> | Date | string
    updatedAt?: DateTimeFilter<"Skill"> | Date | string
    jobSkills?: JobSkillListRelationFilter
    candidateSkills?: CandidateSkillListRelationFilter
  }, "id" | "name">

  export type SkillOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SkillCountOrderByAggregateInput
    _avg?: SkillAvgOrderByAggregateInput
    _max?: SkillMaxOrderByAggregateInput
    _min?: SkillMinOrderByAggregateInput
    _sum?: SkillSumOrderByAggregateInput
  }

  export type SkillScalarWhereWithAggregatesInput = {
    AND?: SkillScalarWhereWithAggregatesInput | SkillScalarWhereWithAggregatesInput[]
    OR?: SkillScalarWhereWithAggregatesInput[]
    NOT?: SkillScalarWhereWithAggregatesInput | SkillScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Skill"> | number
    name?: StringWithAggregatesFilter<"Skill"> | string
    nameJp?: StringNullableWithAggregatesFilter<"Skill"> | string | null
    category?: EnumSkillCategoryNullableWithAggregatesFilter<"Skill"> | $Enums.SkillCategory | null
    description?: StringNullableWithAggregatesFilter<"Skill"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Skill"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Skill"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    phoneNumber?: StringNullableFilter<"User"> | string | null
    userType?: EnumUserTypeFilter<"User"> | $Enums.UserType
    avatarUrl?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    isEmailVerified?: BoolFilter<"User"> | boolean
    emailVerifyToken?: StringNullableFilter<"User"> | string | null
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    employer?: XOR<EmployerNullableScalarRelationFilter, EmployerWhereInput> | null
    candidate?: XOR<CandidateNullableScalarRelationFilter, CandidateWhereInput> | null
    applicationsUpdated?: ApplicationListRelationFilter
    sessions?: SessionListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    userType?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isEmailVerified?: SortOrder
    emailVerifyToken?: SortOrderInput | SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpires?: SortOrderInput | SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employer?: EmployerOrderByWithRelationInput
    candidate?: CandidateOrderByWithRelationInput
    applicationsUpdated?: ApplicationOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    phoneNumber?: string
    emailVerifyToken?: string
    passwordResetToken?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    passwordHash?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    userType?: EnumUserTypeFilter<"User"> | $Enums.UserType
    avatarUrl?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    isEmailVerified?: BoolFilter<"User"> | boolean
    passwordResetExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    employer?: XOR<EmployerNullableScalarRelationFilter, EmployerWhereInput> | null
    candidate?: XOR<CandidateNullableScalarRelationFilter, CandidateWhereInput> | null
    applicationsUpdated?: ApplicationListRelationFilter
    sessions?: SessionListRelationFilter
  }, "id" | "email" | "phoneNumber" | "emailVerifyToken" | "passwordResetToken">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    userType?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isEmailVerified?: SortOrder
    emailVerifyToken?: SortOrderInput | SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpires?: SortOrderInput | SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    email?: StringWithAggregatesFilter<"User"> | string
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    fullName?: StringWithAggregatesFilter<"User"> | string
    phoneNumber?: StringNullableWithAggregatesFilter<"User"> | string | null
    userType?: EnumUserTypeWithAggregatesFilter<"User"> | $Enums.UserType
    avatarUrl?: StringNullableWithAggregatesFilter<"User"> | string | null
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    isEmailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    emailVerifyToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordResetToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    lastLogin?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: IntFilter<"Session"> | number
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: IntFilter<"Session"> | number
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    _count?: SessionCountOrderByAggregateInput
    _avg?: SessionAvgOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
    _sum?: SessionSumOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: IntWithAggregatesFilter<"Session"> | number
    expiresAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    ipAddress?: StringNullableWithAggregatesFilter<"Session"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"Session"> | string | null
  }

  export type EmployerWhereInput = {
    AND?: EmployerWhereInput | EmployerWhereInput[]
    OR?: EmployerWhereInput[]
    NOT?: EmployerWhereInput | EmployerWhereInput[]
    id?: IntFilter<"Employer"> | number
    userId?: IntFilter<"Employer"> | number
    companyName?: StringFilter<"Employer"> | string
    companyNameKana?: StringNullableFilter<"Employer"> | string | null
    companyNameJp?: StringNullableFilter<"Employer"> | string | null
    companyLogoUrl?: StringNullableFilter<"Employer"> | string | null
    companyWebsite?: StringNullableFilter<"Employer"> | string | null
    companyDescription?: StringNullableFilter<"Employer"> | string | null
    companyDescriptionJp?: StringNullableFilter<"Employer"> | string | null
    businessOverview?: StringNullableFilter<"Employer"> | string | null
    businessOverviewJp?: StringNullableFilter<"Employer"> | string | null
    companyAddress?: StringNullableFilter<"Employer"> | string | null
    companyAddressJp?: StringNullableFilter<"Employer"> | string | null
    companyPhone?: StringNullableFilter<"Employer"> | string | null
    establishmentDate?: DateTimeNullableFilter<"Employer"> | Date | string | null
    representativeName?: StringNullableFilter<"Employer"> | string | null
    representativeTitle?: StringNullableFilter<"Employer"> | string | null
    vietnamBranchExists?: BoolNullableFilter<"Employer"> | boolean | null
    companySize?: EnumCompanySizeTypeNullableFilter<"Employer"> | $Enums.CompanySizeType | null
    createdAt?: DateTimeFilter<"Employer"> | Date | string
    updatedAt?: DateTimeFilter<"Employer"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    jobs?: JobListRelationFilter
  }

  export type EmployerOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    companyName?: SortOrder
    companyNameKana?: SortOrderInput | SortOrder
    companyNameJp?: SortOrderInput | SortOrder
    companyLogoUrl?: SortOrderInput | SortOrder
    companyWebsite?: SortOrderInput | SortOrder
    companyDescription?: SortOrderInput | SortOrder
    companyDescriptionJp?: SortOrderInput | SortOrder
    businessOverview?: SortOrderInput | SortOrder
    businessOverviewJp?: SortOrderInput | SortOrder
    companyAddress?: SortOrderInput | SortOrder
    companyAddressJp?: SortOrderInput | SortOrder
    companyPhone?: SortOrderInput | SortOrder
    establishmentDate?: SortOrderInput | SortOrder
    representativeName?: SortOrderInput | SortOrder
    representativeTitle?: SortOrderInput | SortOrder
    vietnamBranchExists?: SortOrderInput | SortOrder
    companySize?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    jobs?: JobOrderByRelationAggregateInput
  }

  export type EmployerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId?: number
    AND?: EmployerWhereInput | EmployerWhereInput[]
    OR?: EmployerWhereInput[]
    NOT?: EmployerWhereInput | EmployerWhereInput[]
    companyName?: StringFilter<"Employer"> | string
    companyNameKana?: StringNullableFilter<"Employer"> | string | null
    companyNameJp?: StringNullableFilter<"Employer"> | string | null
    companyLogoUrl?: StringNullableFilter<"Employer"> | string | null
    companyWebsite?: StringNullableFilter<"Employer"> | string | null
    companyDescription?: StringNullableFilter<"Employer"> | string | null
    companyDescriptionJp?: StringNullableFilter<"Employer"> | string | null
    businessOverview?: StringNullableFilter<"Employer"> | string | null
    businessOverviewJp?: StringNullableFilter<"Employer"> | string | null
    companyAddress?: StringNullableFilter<"Employer"> | string | null
    companyAddressJp?: StringNullableFilter<"Employer"> | string | null
    companyPhone?: StringNullableFilter<"Employer"> | string | null
    establishmentDate?: DateTimeNullableFilter<"Employer"> | Date | string | null
    representativeName?: StringNullableFilter<"Employer"> | string | null
    representativeTitle?: StringNullableFilter<"Employer"> | string | null
    vietnamBranchExists?: BoolNullableFilter<"Employer"> | boolean | null
    companySize?: EnumCompanySizeTypeNullableFilter<"Employer"> | $Enums.CompanySizeType | null
    createdAt?: DateTimeFilter<"Employer"> | Date | string
    updatedAt?: DateTimeFilter<"Employer"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    jobs?: JobListRelationFilter
  }, "id" | "userId">

  export type EmployerOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    companyName?: SortOrder
    companyNameKana?: SortOrderInput | SortOrder
    companyNameJp?: SortOrderInput | SortOrder
    companyLogoUrl?: SortOrderInput | SortOrder
    companyWebsite?: SortOrderInput | SortOrder
    companyDescription?: SortOrderInput | SortOrder
    companyDescriptionJp?: SortOrderInput | SortOrder
    businessOverview?: SortOrderInput | SortOrder
    businessOverviewJp?: SortOrderInput | SortOrder
    companyAddress?: SortOrderInput | SortOrder
    companyAddressJp?: SortOrderInput | SortOrder
    companyPhone?: SortOrderInput | SortOrder
    establishmentDate?: SortOrderInput | SortOrder
    representativeName?: SortOrderInput | SortOrder
    representativeTitle?: SortOrderInput | SortOrder
    vietnamBranchExists?: SortOrderInput | SortOrder
    companySize?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EmployerCountOrderByAggregateInput
    _avg?: EmployerAvgOrderByAggregateInput
    _max?: EmployerMaxOrderByAggregateInput
    _min?: EmployerMinOrderByAggregateInput
    _sum?: EmployerSumOrderByAggregateInput
  }

  export type EmployerScalarWhereWithAggregatesInput = {
    AND?: EmployerScalarWhereWithAggregatesInput | EmployerScalarWhereWithAggregatesInput[]
    OR?: EmployerScalarWhereWithAggregatesInput[]
    NOT?: EmployerScalarWhereWithAggregatesInput | EmployerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Employer"> | number
    userId?: IntWithAggregatesFilter<"Employer"> | number
    companyName?: StringWithAggregatesFilter<"Employer"> | string
    companyNameKana?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyNameJp?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyLogoUrl?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyWebsite?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyDescription?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyDescriptionJp?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    businessOverview?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    businessOverviewJp?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyAddress?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyAddressJp?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    companyPhone?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    establishmentDate?: DateTimeNullableWithAggregatesFilter<"Employer"> | Date | string | null
    representativeName?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    representativeTitle?: StringNullableWithAggregatesFilter<"Employer"> | string | null
    vietnamBranchExists?: BoolNullableWithAggregatesFilter<"Employer"> | boolean | null
    companySize?: EnumCompanySizeTypeNullableWithAggregatesFilter<"Employer"> | $Enums.CompanySizeType | null
    createdAt?: DateTimeWithAggregatesFilter<"Employer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Employer"> | Date | string
  }

  export type CandidateWhereInput = {
    AND?: CandidateWhereInput | CandidateWhereInput[]
    OR?: CandidateWhereInput[]
    NOT?: CandidateWhereInput | CandidateWhereInput[]
    id?: IntFilter<"Candidate"> | number
    userId?: IntFilter<"Candidate"> | number
    nameKana?: StringNullableFilter<"Candidate"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    gender?: EnumGenderTypeNullableFilter<"Candidate"> | $Enums.GenderType | null
    nationality?: StringNullableFilter<"Candidate"> | string | null
    currentAddressJp?: StringNullableFilter<"Candidate"> | string | null
    homeCountryAddress?: StringNullableFilter<"Candidate"> | string | null
    country?: StringNullableFilter<"Candidate"> | string | null
    headline?: StringNullableFilter<"Candidate"> | string | null
    headlineJp?: StringNullableFilter<"Candidate"> | string | null
    professionalSummary?: StringNullableFilter<"Candidate"> | string | null
    professionalSummaryJp?: StringNullableFilter<"Candidate"> | string | null
    appealStatement?: StringNullableFilter<"Candidate"> | string | null
    appealStatementJp?: StringNullableFilter<"Candidate"> | string | null
    keyStrengths?: StringNullableListFilter<"Candidate">
    motivationStatement?: StringNullableFilter<"Candidate"> | string | null
    careerGoals?: StringNullableFilter<"Candidate"> | string | null
    linkedinUrl?: StringNullableFilter<"Candidate"> | string | null
    githubUrl?: StringNullableFilter<"Candidate"> | string | null
    portfolioUrl?: StringNullableFilter<"Candidate"> | string | null
    otherSocialProfiles?: JsonNullableFilter<"Candidate">
    desiredSalaryMin?: DecimalNullableFilter<"Candidate"> | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: DecimalNullableFilter<"Candidate"> | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: EnumSalaryTypeNullableFilter<"Candidate"> | $Enums.SalaryType | null
    preferredJobTypes?: EnumJobTypeEnumNullableListFilter<"Candidate">
    preferredWorkLocations?: StringNullableListFilter<"Candidate">
    jobExpectations?: StringNullableListFilter<"Candidate">
    interestsTags?: StringNullableListFilter<"Candidate">
    currentVisaStatusJp?: StringNullableFilter<"Candidate"> | string | null
    visaExpiryDateJp?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    desiredVisaSupport?: BoolNullableFilter<"Candidate"> | boolean | null
    japaneseProficiency?: EnumJapaneseProficiencyLevelNullableFilter<"Candidate"> | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: EnumProficiencyLevelNullableFilter<"Candidate"> | $Enums.ProficiencyLevel | null
    otherLanguages?: JsonNullableFilter<"Candidate">
    willingToRelocateInJapan?: BoolNullableFilter<"Candidate"> | boolean | null
    arrivalInJapanDate?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    expectedGraduationDate?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    currentYearOfStudy?: IntNullableFilter<"Candidate"> | number | null
    studentId?: StringNullableFilter<"Candidate"> | string | null
    isSearchable?: BoolFilter<"Candidate"> | boolean
    profileCompleteness?: FloatNullableFilter<"Candidate"> | number | null
    createdAt?: DateTimeFilter<"Candidate"> | Date | string
    updatedAt?: DateTimeFilter<"Candidate"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    skills?: CandidateSkillListRelationFilter
    cvs?: CVListRelationFilter
    applications?: ApplicationListRelationFilter
    education?: EducationListRelationFilter
    workExperience?: WorkExperienceListRelationFilter
    projects?: ProjectListRelationFilter
    qualifications?: QualificationListRelationFilter
    awards?: AwardListRelationFilter
    media?: CandidateMediaListRelationFilter
  }

  export type CandidateOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    nameKana?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    currentAddressJp?: SortOrderInput | SortOrder
    homeCountryAddress?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    headline?: SortOrderInput | SortOrder
    headlineJp?: SortOrderInput | SortOrder
    professionalSummary?: SortOrderInput | SortOrder
    professionalSummaryJp?: SortOrderInput | SortOrder
    appealStatement?: SortOrderInput | SortOrder
    appealStatementJp?: SortOrderInput | SortOrder
    keyStrengths?: SortOrder
    motivationStatement?: SortOrderInput | SortOrder
    careerGoals?: SortOrderInput | SortOrder
    linkedinUrl?: SortOrderInput | SortOrder
    githubUrl?: SortOrderInput | SortOrder
    portfolioUrl?: SortOrderInput | SortOrder
    otherSocialProfiles?: SortOrderInput | SortOrder
    desiredSalaryMin?: SortOrderInput | SortOrder
    desiredSalaryMax?: SortOrderInput | SortOrder
    desiredSalaryType?: SortOrderInput | SortOrder
    preferredJobTypes?: SortOrder
    preferredWorkLocations?: SortOrder
    jobExpectations?: SortOrder
    interestsTags?: SortOrder
    currentVisaStatusJp?: SortOrderInput | SortOrder
    visaExpiryDateJp?: SortOrderInput | SortOrder
    desiredVisaSupport?: SortOrderInput | SortOrder
    japaneseProficiency?: SortOrderInput | SortOrder
    englishProficiency?: SortOrderInput | SortOrder
    otherLanguages?: SortOrderInput | SortOrder
    willingToRelocateInJapan?: SortOrderInput | SortOrder
    arrivalInJapanDate?: SortOrderInput | SortOrder
    expectedGraduationDate?: SortOrderInput | SortOrder
    currentYearOfStudy?: SortOrderInput | SortOrder
    studentId?: SortOrderInput | SortOrder
    isSearchable?: SortOrder
    profileCompleteness?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    skills?: CandidateSkillOrderByRelationAggregateInput
    cvs?: CVOrderByRelationAggregateInput
    applications?: ApplicationOrderByRelationAggregateInput
    education?: EducationOrderByRelationAggregateInput
    workExperience?: WorkExperienceOrderByRelationAggregateInput
    projects?: ProjectOrderByRelationAggregateInput
    qualifications?: QualificationOrderByRelationAggregateInput
    awards?: AwardOrderByRelationAggregateInput
    media?: CandidateMediaOrderByRelationAggregateInput
  }

  export type CandidateWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId?: number
    AND?: CandidateWhereInput | CandidateWhereInput[]
    OR?: CandidateWhereInput[]
    NOT?: CandidateWhereInput | CandidateWhereInput[]
    nameKana?: StringNullableFilter<"Candidate"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    gender?: EnumGenderTypeNullableFilter<"Candidate"> | $Enums.GenderType | null
    nationality?: StringNullableFilter<"Candidate"> | string | null
    currentAddressJp?: StringNullableFilter<"Candidate"> | string | null
    homeCountryAddress?: StringNullableFilter<"Candidate"> | string | null
    country?: StringNullableFilter<"Candidate"> | string | null
    headline?: StringNullableFilter<"Candidate"> | string | null
    headlineJp?: StringNullableFilter<"Candidate"> | string | null
    professionalSummary?: StringNullableFilter<"Candidate"> | string | null
    professionalSummaryJp?: StringNullableFilter<"Candidate"> | string | null
    appealStatement?: StringNullableFilter<"Candidate"> | string | null
    appealStatementJp?: StringNullableFilter<"Candidate"> | string | null
    keyStrengths?: StringNullableListFilter<"Candidate">
    motivationStatement?: StringNullableFilter<"Candidate"> | string | null
    careerGoals?: StringNullableFilter<"Candidate"> | string | null
    linkedinUrl?: StringNullableFilter<"Candidate"> | string | null
    githubUrl?: StringNullableFilter<"Candidate"> | string | null
    portfolioUrl?: StringNullableFilter<"Candidate"> | string | null
    otherSocialProfiles?: JsonNullableFilter<"Candidate">
    desiredSalaryMin?: DecimalNullableFilter<"Candidate"> | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: DecimalNullableFilter<"Candidate"> | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: EnumSalaryTypeNullableFilter<"Candidate"> | $Enums.SalaryType | null
    preferredJobTypes?: EnumJobTypeEnumNullableListFilter<"Candidate">
    preferredWorkLocations?: StringNullableListFilter<"Candidate">
    jobExpectations?: StringNullableListFilter<"Candidate">
    interestsTags?: StringNullableListFilter<"Candidate">
    currentVisaStatusJp?: StringNullableFilter<"Candidate"> | string | null
    visaExpiryDateJp?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    desiredVisaSupport?: BoolNullableFilter<"Candidate"> | boolean | null
    japaneseProficiency?: EnumJapaneseProficiencyLevelNullableFilter<"Candidate"> | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: EnumProficiencyLevelNullableFilter<"Candidate"> | $Enums.ProficiencyLevel | null
    otherLanguages?: JsonNullableFilter<"Candidate">
    willingToRelocateInJapan?: BoolNullableFilter<"Candidate"> | boolean | null
    arrivalInJapanDate?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    expectedGraduationDate?: DateTimeNullableFilter<"Candidate"> | Date | string | null
    currentYearOfStudy?: IntNullableFilter<"Candidate"> | number | null
    studentId?: StringNullableFilter<"Candidate"> | string | null
    isSearchable?: BoolFilter<"Candidate"> | boolean
    profileCompleteness?: FloatNullableFilter<"Candidate"> | number | null
    createdAt?: DateTimeFilter<"Candidate"> | Date | string
    updatedAt?: DateTimeFilter<"Candidate"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    skills?: CandidateSkillListRelationFilter
    cvs?: CVListRelationFilter
    applications?: ApplicationListRelationFilter
    education?: EducationListRelationFilter
    workExperience?: WorkExperienceListRelationFilter
    projects?: ProjectListRelationFilter
    qualifications?: QualificationListRelationFilter
    awards?: AwardListRelationFilter
    media?: CandidateMediaListRelationFilter
  }, "id" | "userId">

  export type CandidateOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    nameKana?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    currentAddressJp?: SortOrderInput | SortOrder
    homeCountryAddress?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    headline?: SortOrderInput | SortOrder
    headlineJp?: SortOrderInput | SortOrder
    professionalSummary?: SortOrderInput | SortOrder
    professionalSummaryJp?: SortOrderInput | SortOrder
    appealStatement?: SortOrderInput | SortOrder
    appealStatementJp?: SortOrderInput | SortOrder
    keyStrengths?: SortOrder
    motivationStatement?: SortOrderInput | SortOrder
    careerGoals?: SortOrderInput | SortOrder
    linkedinUrl?: SortOrderInput | SortOrder
    githubUrl?: SortOrderInput | SortOrder
    portfolioUrl?: SortOrderInput | SortOrder
    otherSocialProfiles?: SortOrderInput | SortOrder
    desiredSalaryMin?: SortOrderInput | SortOrder
    desiredSalaryMax?: SortOrderInput | SortOrder
    desiredSalaryType?: SortOrderInput | SortOrder
    preferredJobTypes?: SortOrder
    preferredWorkLocations?: SortOrder
    jobExpectations?: SortOrder
    interestsTags?: SortOrder
    currentVisaStatusJp?: SortOrderInput | SortOrder
    visaExpiryDateJp?: SortOrderInput | SortOrder
    desiredVisaSupport?: SortOrderInput | SortOrder
    japaneseProficiency?: SortOrderInput | SortOrder
    englishProficiency?: SortOrderInput | SortOrder
    otherLanguages?: SortOrderInput | SortOrder
    willingToRelocateInJapan?: SortOrderInput | SortOrder
    arrivalInJapanDate?: SortOrderInput | SortOrder
    expectedGraduationDate?: SortOrderInput | SortOrder
    currentYearOfStudy?: SortOrderInput | SortOrder
    studentId?: SortOrderInput | SortOrder
    isSearchable?: SortOrder
    profileCompleteness?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CandidateCountOrderByAggregateInput
    _avg?: CandidateAvgOrderByAggregateInput
    _max?: CandidateMaxOrderByAggregateInput
    _min?: CandidateMinOrderByAggregateInput
    _sum?: CandidateSumOrderByAggregateInput
  }

  export type CandidateScalarWhereWithAggregatesInput = {
    AND?: CandidateScalarWhereWithAggregatesInput | CandidateScalarWhereWithAggregatesInput[]
    OR?: CandidateScalarWhereWithAggregatesInput[]
    NOT?: CandidateScalarWhereWithAggregatesInput | CandidateScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Candidate"> | number
    userId?: IntWithAggregatesFilter<"Candidate"> | number
    nameKana?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"Candidate"> | Date | string | null
    gender?: EnumGenderTypeNullableWithAggregatesFilter<"Candidate"> | $Enums.GenderType | null
    nationality?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    currentAddressJp?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    homeCountryAddress?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    country?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    headline?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    headlineJp?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    professionalSummary?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    professionalSummaryJp?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    appealStatement?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    appealStatementJp?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    keyStrengths?: StringNullableListFilter<"Candidate">
    motivationStatement?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    careerGoals?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    linkedinUrl?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    githubUrl?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    portfolioUrl?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    otherSocialProfiles?: JsonNullableWithAggregatesFilter<"Candidate">
    desiredSalaryMin?: DecimalNullableWithAggregatesFilter<"Candidate"> | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: DecimalNullableWithAggregatesFilter<"Candidate"> | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: EnumSalaryTypeNullableWithAggregatesFilter<"Candidate"> | $Enums.SalaryType | null
    preferredJobTypes?: EnumJobTypeEnumNullableListFilter<"Candidate">
    preferredWorkLocations?: StringNullableListFilter<"Candidate">
    jobExpectations?: StringNullableListFilter<"Candidate">
    interestsTags?: StringNullableListFilter<"Candidate">
    currentVisaStatusJp?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    visaExpiryDateJp?: DateTimeNullableWithAggregatesFilter<"Candidate"> | Date | string | null
    desiredVisaSupport?: BoolNullableWithAggregatesFilter<"Candidate"> | boolean | null
    japaneseProficiency?: EnumJapaneseProficiencyLevelNullableWithAggregatesFilter<"Candidate"> | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: EnumProficiencyLevelNullableWithAggregatesFilter<"Candidate"> | $Enums.ProficiencyLevel | null
    otherLanguages?: JsonNullableWithAggregatesFilter<"Candidate">
    willingToRelocateInJapan?: BoolNullableWithAggregatesFilter<"Candidate"> | boolean | null
    arrivalInJapanDate?: DateTimeNullableWithAggregatesFilter<"Candidate"> | Date | string | null
    expectedGraduationDate?: DateTimeNullableWithAggregatesFilter<"Candidate"> | Date | string | null
    currentYearOfStudy?: IntNullableWithAggregatesFilter<"Candidate"> | number | null
    studentId?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    isSearchable?: BoolWithAggregatesFilter<"Candidate"> | boolean
    profileCompleteness?: FloatNullableWithAggregatesFilter<"Candidate"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Candidate"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Candidate"> | Date | string
  }

  export type JobWhereInput = {
    AND?: JobWhereInput | JobWhereInput[]
    OR?: JobWhereInput[]
    NOT?: JobWhereInput | JobWhereInput[]
    id?: IntFilter<"Job"> | number
    employerId?: IntFilter<"Job"> | number
    industryId?: IntNullableFilter<"Job"> | number | null
    title?: StringFilter<"Job"> | string
    titleJp?: StringNullableFilter<"Job"> | string | null
    description?: StringFilter<"Job"> | string
    descriptionJp?: StringNullableFilter<"Job"> | string | null
    requirements?: StringFilter<"Job"> | string
    requirementsJp?: StringNullableFilter<"Job"> | string | null
    benefits?: StringNullableFilter<"Job"> | string | null
    benefitsJp?: StringNullableFilter<"Job"> | string | null
    appealPoints?: StringNullableListFilter<"Job">
    salaryMin?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFilter<"Job"> | $Enums.SalaryType
    salaryDetails?: StringNullableFilter<"Job"> | string | null
    country?: StringFilter<"Job"> | string
    prefecture?: StringNullableFilter<"Job"> | string | null
    city?: StringNullableFilter<"Job"> | string | null
    addressDetail?: StringNullableFilter<"Job"> | string | null
    nearestStation?: StringNullableFilter<"Job"> | string | null
    isRemote?: BoolFilter<"Job"> | boolean
    remoteDetails?: StringNullableFilter<"Job"> | string | null
    jobType?: EnumJobTypeEnumFilter<"Job"> | $Enums.JobTypeEnum
    status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    postedDate?: DateTimeFilter<"Job"> | Date | string
    expiryDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    externalApplicationUrl?: StringNullableFilter<"Job"> | string | null
    hiringStages?: StringNullableListFilter<"Job">
    workingHoursDescription?: StringNullableFilter<"Job"> | string | null
    isFlexTime?: BoolNullableFilter<"Job"> | boolean | null
    coreTimeDescription?: StringNullableFilter<"Job"> | string | null
    actualWorkingHoursPerDay?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: EnumJapaneseProficiencyLevelNullableFilter<"Job"> | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: EnumProficiencyLevelNullableFilter<"Job"> | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: StringNullableFilter<"Job"> | string | null
    visaSupportAvailable?: BoolNullableFilter<"Job"> | boolean | null
    relocationSupportAvailable?: BoolNullableFilter<"Job"> | boolean | null
    housingSupportDetails?: StringNullableFilter<"Job"> | string | null
    foreignFriendlyEnvironment?: BoolNullableFilter<"Job"> | boolean | null
    targetCandidateDescription?: StringNullableFilter<"Job"> | string | null
    numberOfHires?: IntNullableFilter<"Job"> | number | null
    createdAt?: DateTimeFilter<"Job"> | Date | string
    updatedAt?: DateTimeFilter<"Job"> | Date | string
    employer?: XOR<EmployerScalarRelationFilter, EmployerWhereInput>
    industry?: XOR<IndustryNullableScalarRelationFilter, IndustryWhereInput> | null
    skills?: JobSkillListRelationFilter
    applications?: ApplicationListRelationFilter
    documents?: JobDocumentListRelationFilter
  }

  export type JobOrderByWithRelationInput = {
    id?: SortOrder
    employerId?: SortOrder
    industryId?: SortOrderInput | SortOrder
    title?: SortOrder
    titleJp?: SortOrderInput | SortOrder
    description?: SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    requirements?: SortOrder
    requirementsJp?: SortOrderInput | SortOrder
    benefits?: SortOrderInput | SortOrder
    benefitsJp?: SortOrderInput | SortOrder
    appealPoints?: SortOrder
    salaryMin?: SortOrderInput | SortOrder
    salaryMax?: SortOrderInput | SortOrder
    salaryType?: SortOrder
    salaryDetails?: SortOrderInput | SortOrder
    country?: SortOrder
    prefecture?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    addressDetail?: SortOrderInput | SortOrder
    nearestStation?: SortOrderInput | SortOrder
    isRemote?: SortOrder
    remoteDetails?: SortOrderInput | SortOrder
    jobType?: SortOrder
    status?: SortOrder
    postedDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    externalApplicationUrl?: SortOrderInput | SortOrder
    hiringStages?: SortOrder
    workingHoursDescription?: SortOrderInput | SortOrder
    isFlexTime?: SortOrderInput | SortOrder
    coreTimeDescription?: SortOrderInput | SortOrder
    actualWorkingHoursPerDay?: SortOrderInput | SortOrder
    avgOvertimeHoursPerMonth?: SortOrderInput | SortOrder
    requiredJapaneseLevel?: SortOrderInput | SortOrder
    requiredEnglishLevel?: SortOrderInput | SortOrder
    otherLanguageRequirements?: SortOrderInput | SortOrder
    visaSupportAvailable?: SortOrderInput | SortOrder
    relocationSupportAvailable?: SortOrderInput | SortOrder
    housingSupportDetails?: SortOrderInput | SortOrder
    foreignFriendlyEnvironment?: SortOrderInput | SortOrder
    targetCandidateDescription?: SortOrderInput | SortOrder
    numberOfHires?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employer?: EmployerOrderByWithRelationInput
    industry?: IndustryOrderByWithRelationInput
    skills?: JobSkillOrderByRelationAggregateInput
    applications?: ApplicationOrderByRelationAggregateInput
    documents?: JobDocumentOrderByRelationAggregateInput
  }

  export type JobWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: JobWhereInput | JobWhereInput[]
    OR?: JobWhereInput[]
    NOT?: JobWhereInput | JobWhereInput[]
    employerId?: IntFilter<"Job"> | number
    industryId?: IntNullableFilter<"Job"> | number | null
    title?: StringFilter<"Job"> | string
    titleJp?: StringNullableFilter<"Job"> | string | null
    description?: StringFilter<"Job"> | string
    descriptionJp?: StringNullableFilter<"Job"> | string | null
    requirements?: StringFilter<"Job"> | string
    requirementsJp?: StringNullableFilter<"Job"> | string | null
    benefits?: StringNullableFilter<"Job"> | string | null
    benefitsJp?: StringNullableFilter<"Job"> | string | null
    appealPoints?: StringNullableListFilter<"Job">
    salaryMin?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFilter<"Job"> | $Enums.SalaryType
    salaryDetails?: StringNullableFilter<"Job"> | string | null
    country?: StringFilter<"Job"> | string
    prefecture?: StringNullableFilter<"Job"> | string | null
    city?: StringNullableFilter<"Job"> | string | null
    addressDetail?: StringNullableFilter<"Job"> | string | null
    nearestStation?: StringNullableFilter<"Job"> | string | null
    isRemote?: BoolFilter<"Job"> | boolean
    remoteDetails?: StringNullableFilter<"Job"> | string | null
    jobType?: EnumJobTypeEnumFilter<"Job"> | $Enums.JobTypeEnum
    status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    postedDate?: DateTimeFilter<"Job"> | Date | string
    expiryDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    externalApplicationUrl?: StringNullableFilter<"Job"> | string | null
    hiringStages?: StringNullableListFilter<"Job">
    workingHoursDescription?: StringNullableFilter<"Job"> | string | null
    isFlexTime?: BoolNullableFilter<"Job"> | boolean | null
    coreTimeDescription?: StringNullableFilter<"Job"> | string | null
    actualWorkingHoursPerDay?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: EnumJapaneseProficiencyLevelNullableFilter<"Job"> | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: EnumProficiencyLevelNullableFilter<"Job"> | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: StringNullableFilter<"Job"> | string | null
    visaSupportAvailable?: BoolNullableFilter<"Job"> | boolean | null
    relocationSupportAvailable?: BoolNullableFilter<"Job"> | boolean | null
    housingSupportDetails?: StringNullableFilter<"Job"> | string | null
    foreignFriendlyEnvironment?: BoolNullableFilter<"Job"> | boolean | null
    targetCandidateDescription?: StringNullableFilter<"Job"> | string | null
    numberOfHires?: IntNullableFilter<"Job"> | number | null
    createdAt?: DateTimeFilter<"Job"> | Date | string
    updatedAt?: DateTimeFilter<"Job"> | Date | string
    employer?: XOR<EmployerScalarRelationFilter, EmployerWhereInput>
    industry?: XOR<IndustryNullableScalarRelationFilter, IndustryWhereInput> | null
    skills?: JobSkillListRelationFilter
    applications?: ApplicationListRelationFilter
    documents?: JobDocumentListRelationFilter
  }, "id">

  export type JobOrderByWithAggregationInput = {
    id?: SortOrder
    employerId?: SortOrder
    industryId?: SortOrderInput | SortOrder
    title?: SortOrder
    titleJp?: SortOrderInput | SortOrder
    description?: SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    requirements?: SortOrder
    requirementsJp?: SortOrderInput | SortOrder
    benefits?: SortOrderInput | SortOrder
    benefitsJp?: SortOrderInput | SortOrder
    appealPoints?: SortOrder
    salaryMin?: SortOrderInput | SortOrder
    salaryMax?: SortOrderInput | SortOrder
    salaryType?: SortOrder
    salaryDetails?: SortOrderInput | SortOrder
    country?: SortOrder
    prefecture?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    addressDetail?: SortOrderInput | SortOrder
    nearestStation?: SortOrderInput | SortOrder
    isRemote?: SortOrder
    remoteDetails?: SortOrderInput | SortOrder
    jobType?: SortOrder
    status?: SortOrder
    postedDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    externalApplicationUrl?: SortOrderInput | SortOrder
    hiringStages?: SortOrder
    workingHoursDescription?: SortOrderInput | SortOrder
    isFlexTime?: SortOrderInput | SortOrder
    coreTimeDescription?: SortOrderInput | SortOrder
    actualWorkingHoursPerDay?: SortOrderInput | SortOrder
    avgOvertimeHoursPerMonth?: SortOrderInput | SortOrder
    requiredJapaneseLevel?: SortOrderInput | SortOrder
    requiredEnglishLevel?: SortOrderInput | SortOrder
    otherLanguageRequirements?: SortOrderInput | SortOrder
    visaSupportAvailable?: SortOrderInput | SortOrder
    relocationSupportAvailable?: SortOrderInput | SortOrder
    housingSupportDetails?: SortOrderInput | SortOrder
    foreignFriendlyEnvironment?: SortOrderInput | SortOrder
    targetCandidateDescription?: SortOrderInput | SortOrder
    numberOfHires?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: JobCountOrderByAggregateInput
    _avg?: JobAvgOrderByAggregateInput
    _max?: JobMaxOrderByAggregateInput
    _min?: JobMinOrderByAggregateInput
    _sum?: JobSumOrderByAggregateInput
  }

  export type JobScalarWhereWithAggregatesInput = {
    AND?: JobScalarWhereWithAggregatesInput | JobScalarWhereWithAggregatesInput[]
    OR?: JobScalarWhereWithAggregatesInput[]
    NOT?: JobScalarWhereWithAggregatesInput | JobScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Job"> | number
    employerId?: IntWithAggregatesFilter<"Job"> | number
    industryId?: IntNullableWithAggregatesFilter<"Job"> | number | null
    title?: StringWithAggregatesFilter<"Job"> | string
    titleJp?: StringNullableWithAggregatesFilter<"Job"> | string | null
    description?: StringWithAggregatesFilter<"Job"> | string
    descriptionJp?: StringNullableWithAggregatesFilter<"Job"> | string | null
    requirements?: StringWithAggregatesFilter<"Job"> | string
    requirementsJp?: StringNullableWithAggregatesFilter<"Job"> | string | null
    benefits?: StringNullableWithAggregatesFilter<"Job"> | string | null
    benefitsJp?: StringNullableWithAggregatesFilter<"Job"> | string | null
    appealPoints?: StringNullableListFilter<"Job">
    salaryMin?: DecimalNullableWithAggregatesFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableWithAggregatesFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeWithAggregatesFilter<"Job"> | $Enums.SalaryType
    salaryDetails?: StringNullableWithAggregatesFilter<"Job"> | string | null
    country?: StringWithAggregatesFilter<"Job"> | string
    prefecture?: StringNullableWithAggregatesFilter<"Job"> | string | null
    city?: StringNullableWithAggregatesFilter<"Job"> | string | null
    addressDetail?: StringNullableWithAggregatesFilter<"Job"> | string | null
    nearestStation?: StringNullableWithAggregatesFilter<"Job"> | string | null
    isRemote?: BoolWithAggregatesFilter<"Job"> | boolean
    remoteDetails?: StringNullableWithAggregatesFilter<"Job"> | string | null
    jobType?: EnumJobTypeEnumWithAggregatesFilter<"Job"> | $Enums.JobTypeEnum
    status?: EnumJobStatusWithAggregatesFilter<"Job"> | $Enums.JobStatus
    postedDate?: DateTimeWithAggregatesFilter<"Job"> | Date | string
    expiryDate?: DateTimeNullableWithAggregatesFilter<"Job"> | Date | string | null
    externalApplicationUrl?: StringNullableWithAggregatesFilter<"Job"> | string | null
    hiringStages?: StringNullableListFilter<"Job">
    workingHoursDescription?: StringNullableWithAggregatesFilter<"Job"> | string | null
    isFlexTime?: BoolNullableWithAggregatesFilter<"Job"> | boolean | null
    coreTimeDescription?: StringNullableWithAggregatesFilter<"Job"> | string | null
    actualWorkingHoursPerDay?: DecimalNullableWithAggregatesFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: DecimalNullableWithAggregatesFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: EnumJapaneseProficiencyLevelNullableWithAggregatesFilter<"Job"> | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: EnumProficiencyLevelNullableWithAggregatesFilter<"Job"> | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: StringNullableWithAggregatesFilter<"Job"> | string | null
    visaSupportAvailable?: BoolNullableWithAggregatesFilter<"Job"> | boolean | null
    relocationSupportAvailable?: BoolNullableWithAggregatesFilter<"Job"> | boolean | null
    housingSupportDetails?: StringNullableWithAggregatesFilter<"Job"> | string | null
    foreignFriendlyEnvironment?: BoolNullableWithAggregatesFilter<"Job"> | boolean | null
    targetCandidateDescription?: StringNullableWithAggregatesFilter<"Job"> | string | null
    numberOfHires?: IntNullableWithAggregatesFilter<"Job"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Job"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Job"> | Date | string
  }

  export type JobSkillWhereInput = {
    AND?: JobSkillWhereInput | JobSkillWhereInput[]
    OR?: JobSkillWhereInput[]
    NOT?: JobSkillWhereInput | JobSkillWhereInput[]
    id?: IntFilter<"JobSkill"> | number
    jobId?: IntFilter<"JobSkill"> | number
    skillId?: IntFilter<"JobSkill"> | number
    importanceLevel?: IntNullableFilter<"JobSkill"> | number | null
    requiredYears?: IntNullableFilter<"JobSkill"> | number | null
    job?: XOR<JobScalarRelationFilter, JobWhereInput>
    skill?: XOR<SkillScalarRelationFilter, SkillWhereInput>
  }

  export type JobSkillOrderByWithRelationInput = {
    id?: SortOrder
    jobId?: SortOrder
    skillId?: SortOrder
    importanceLevel?: SortOrderInput | SortOrder
    requiredYears?: SortOrderInput | SortOrder
    job?: JobOrderByWithRelationInput
    skill?: SkillOrderByWithRelationInput
  }

  export type JobSkillWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    jobId_skillId?: JobSkillJobIdSkillIdCompoundUniqueInput
    AND?: JobSkillWhereInput | JobSkillWhereInput[]
    OR?: JobSkillWhereInput[]
    NOT?: JobSkillWhereInput | JobSkillWhereInput[]
    jobId?: IntFilter<"JobSkill"> | number
    skillId?: IntFilter<"JobSkill"> | number
    importanceLevel?: IntNullableFilter<"JobSkill"> | number | null
    requiredYears?: IntNullableFilter<"JobSkill"> | number | null
    job?: XOR<JobScalarRelationFilter, JobWhereInput>
    skill?: XOR<SkillScalarRelationFilter, SkillWhereInput>
  }, "id" | "jobId_skillId">

  export type JobSkillOrderByWithAggregationInput = {
    id?: SortOrder
    jobId?: SortOrder
    skillId?: SortOrder
    importanceLevel?: SortOrderInput | SortOrder
    requiredYears?: SortOrderInput | SortOrder
    _count?: JobSkillCountOrderByAggregateInput
    _avg?: JobSkillAvgOrderByAggregateInput
    _max?: JobSkillMaxOrderByAggregateInput
    _min?: JobSkillMinOrderByAggregateInput
    _sum?: JobSkillSumOrderByAggregateInput
  }

  export type JobSkillScalarWhereWithAggregatesInput = {
    AND?: JobSkillScalarWhereWithAggregatesInput | JobSkillScalarWhereWithAggregatesInput[]
    OR?: JobSkillScalarWhereWithAggregatesInput[]
    NOT?: JobSkillScalarWhereWithAggregatesInput | JobSkillScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"JobSkill"> | number
    jobId?: IntWithAggregatesFilter<"JobSkill"> | number
    skillId?: IntWithAggregatesFilter<"JobSkill"> | number
    importanceLevel?: IntNullableWithAggregatesFilter<"JobSkill"> | number | null
    requiredYears?: IntNullableWithAggregatesFilter<"JobSkill"> | number | null
  }

  export type CandidateSkillWhereInput = {
    AND?: CandidateSkillWhereInput | CandidateSkillWhereInput[]
    OR?: CandidateSkillWhereInput[]
    NOT?: CandidateSkillWhereInput | CandidateSkillWhereInput[]
    id?: IntFilter<"CandidateSkill"> | number
    candidateId?: IntFilter<"CandidateSkill"> | number
    skillId?: IntFilter<"CandidateSkill"> | number
    proficiencyLevel?: EnumProficiencyLevelNullableFilter<"CandidateSkill"> | $Enums.ProficiencyLevel | null
    experienceMonths?: IntNullableFilter<"CandidateSkill"> | number | null
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
    skill?: XOR<SkillScalarRelationFilter, SkillWhereInput>
  }

  export type CandidateSkillOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    skillId?: SortOrder
    proficiencyLevel?: SortOrderInput | SortOrder
    experienceMonths?: SortOrderInput | SortOrder
    candidate?: CandidateOrderByWithRelationInput
    skill?: SkillOrderByWithRelationInput
  }

  export type CandidateSkillWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    candidateId_skillId?: CandidateSkillCandidateIdSkillIdCompoundUniqueInput
    AND?: CandidateSkillWhereInput | CandidateSkillWhereInput[]
    OR?: CandidateSkillWhereInput[]
    NOT?: CandidateSkillWhereInput | CandidateSkillWhereInput[]
    candidateId?: IntFilter<"CandidateSkill"> | number
    skillId?: IntFilter<"CandidateSkill"> | number
    proficiencyLevel?: EnumProficiencyLevelNullableFilter<"CandidateSkill"> | $Enums.ProficiencyLevel | null
    experienceMonths?: IntNullableFilter<"CandidateSkill"> | number | null
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
    skill?: XOR<SkillScalarRelationFilter, SkillWhereInput>
  }, "id" | "candidateId_skillId">

  export type CandidateSkillOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    skillId?: SortOrder
    proficiencyLevel?: SortOrderInput | SortOrder
    experienceMonths?: SortOrderInput | SortOrder
    _count?: CandidateSkillCountOrderByAggregateInput
    _avg?: CandidateSkillAvgOrderByAggregateInput
    _max?: CandidateSkillMaxOrderByAggregateInput
    _min?: CandidateSkillMinOrderByAggregateInput
    _sum?: CandidateSkillSumOrderByAggregateInput
  }

  export type CandidateSkillScalarWhereWithAggregatesInput = {
    AND?: CandidateSkillScalarWhereWithAggregatesInput | CandidateSkillScalarWhereWithAggregatesInput[]
    OR?: CandidateSkillScalarWhereWithAggregatesInput[]
    NOT?: CandidateSkillScalarWhereWithAggregatesInput | CandidateSkillScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CandidateSkill"> | number
    candidateId?: IntWithAggregatesFilter<"CandidateSkill"> | number
    skillId?: IntWithAggregatesFilter<"CandidateSkill"> | number
    proficiencyLevel?: EnumProficiencyLevelNullableWithAggregatesFilter<"CandidateSkill"> | $Enums.ProficiencyLevel | null
    experienceMonths?: IntNullableWithAggregatesFilter<"CandidateSkill"> | number | null
  }

  export type CVWhereInput = {
    AND?: CVWhereInput | CVWhereInput[]
    OR?: CVWhereInput[]
    NOT?: CVWhereInput | CVWhereInput[]
    id?: IntFilter<"CV"> | number
    candidateId?: IntFilter<"CV"> | number
    fileName?: StringFilter<"CV"> | string
    fileUrl?: StringFilter<"CV"> | string
    fileType?: EnumFileTypeEnumNullableFilter<"CV"> | $Enums.FileTypeEnum | null
    language?: StringNullableFilter<"CV"> | string | null
    isPrimary?: BoolFilter<"CV"> | boolean
    uploadedAt?: DateTimeFilter<"CV"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
    applications?: ApplicationListRelationFilter
  }

  export type CVOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileType?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    uploadedAt?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    applications?: ApplicationOrderByRelationAggregateInput
  }

  export type CVWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CVWhereInput | CVWhereInput[]
    OR?: CVWhereInput[]
    NOT?: CVWhereInput | CVWhereInput[]
    candidateId?: IntFilter<"CV"> | number
    fileName?: StringFilter<"CV"> | string
    fileUrl?: StringFilter<"CV"> | string
    fileType?: EnumFileTypeEnumNullableFilter<"CV"> | $Enums.FileTypeEnum | null
    language?: StringNullableFilter<"CV"> | string | null
    isPrimary?: BoolFilter<"CV"> | boolean
    uploadedAt?: DateTimeFilter<"CV"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
    applications?: ApplicationListRelationFilter
  }, "id">

  export type CVOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileType?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    uploadedAt?: SortOrder
    _count?: CVCountOrderByAggregateInput
    _avg?: CVAvgOrderByAggregateInput
    _max?: CVMaxOrderByAggregateInput
    _min?: CVMinOrderByAggregateInput
    _sum?: CVSumOrderByAggregateInput
  }

  export type CVScalarWhereWithAggregatesInput = {
    AND?: CVScalarWhereWithAggregatesInput | CVScalarWhereWithAggregatesInput[]
    OR?: CVScalarWhereWithAggregatesInput[]
    NOT?: CVScalarWhereWithAggregatesInput | CVScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CV"> | number
    candidateId?: IntWithAggregatesFilter<"CV"> | number
    fileName?: StringWithAggregatesFilter<"CV"> | string
    fileUrl?: StringWithAggregatesFilter<"CV"> | string
    fileType?: EnumFileTypeEnumNullableWithAggregatesFilter<"CV"> | $Enums.FileTypeEnum | null
    language?: StringNullableWithAggregatesFilter<"CV"> | string | null
    isPrimary?: BoolWithAggregatesFilter<"CV"> | boolean
    uploadedAt?: DateTimeWithAggregatesFilter<"CV"> | Date | string
  }

  export type ApplicationWhereInput = {
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    id?: IntFilter<"Application"> | number
    candidateId?: IntFilter<"Application"> | number
    jobId?: IntFilter<"Application"> | number
    cvId?: IntFilter<"Application"> | number
    coverLetter?: StringNullableFilter<"Application"> | string | null
    applicationDate?: DateTimeFilter<"Application"> | Date | string
    status?: EnumApplicationStatusFilter<"Application"> | $Enums.ApplicationStatus
    statusMessage?: StringNullableFilter<"Application"> | string | null
    currentStageIndex?: IntNullableFilter<"Application"> | number | null
    internalNotes?: StringNullableFilter<"Application"> | string | null
    candidateNotes?: StringNullableFilter<"Application"> | string | null
    processLog?: JsonNullableFilter<"Application">
    isBookmarked?: BoolNullableFilter<"Application"> | boolean | null
    matchScore?: DecimalNullableFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    manualScore?: DecimalNullableFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    offerDetails?: JsonNullableFilter<"Application">
    lastUpdatedById?: IntNullableFilter<"Application"> | number | null
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
    job?: XOR<JobScalarRelationFilter, JobWhereInput>
    cv?: XOR<CVScalarRelationFilter, CVWhereInput>
    lastUpdatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ApplicationOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    jobId?: SortOrder
    cvId?: SortOrder
    coverLetter?: SortOrderInput | SortOrder
    applicationDate?: SortOrder
    status?: SortOrder
    statusMessage?: SortOrderInput | SortOrder
    currentStageIndex?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    candidateNotes?: SortOrderInput | SortOrder
    processLog?: SortOrderInput | SortOrder
    isBookmarked?: SortOrderInput | SortOrder
    matchScore?: SortOrderInput | SortOrder
    manualScore?: SortOrderInput | SortOrder
    offerDetails?: SortOrderInput | SortOrder
    lastUpdatedById?: SortOrderInput | SortOrder
    candidate?: CandidateOrderByWithRelationInput
    job?: JobOrderByWithRelationInput
    cv?: CVOrderByWithRelationInput
    lastUpdatedBy?: UserOrderByWithRelationInput
  }

  export type ApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    candidateId_jobId?: ApplicationCandidateIdJobIdCompoundUniqueInput
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    candidateId?: IntFilter<"Application"> | number
    jobId?: IntFilter<"Application"> | number
    cvId?: IntFilter<"Application"> | number
    coverLetter?: StringNullableFilter<"Application"> | string | null
    applicationDate?: DateTimeFilter<"Application"> | Date | string
    status?: EnumApplicationStatusFilter<"Application"> | $Enums.ApplicationStatus
    statusMessage?: StringNullableFilter<"Application"> | string | null
    currentStageIndex?: IntNullableFilter<"Application"> | number | null
    internalNotes?: StringNullableFilter<"Application"> | string | null
    candidateNotes?: StringNullableFilter<"Application"> | string | null
    processLog?: JsonNullableFilter<"Application">
    isBookmarked?: BoolNullableFilter<"Application"> | boolean | null
    matchScore?: DecimalNullableFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    manualScore?: DecimalNullableFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    offerDetails?: JsonNullableFilter<"Application">
    lastUpdatedById?: IntNullableFilter<"Application"> | number | null
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
    job?: XOR<JobScalarRelationFilter, JobWhereInput>
    cv?: XOR<CVScalarRelationFilter, CVWhereInput>
    lastUpdatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "candidateId_jobId">

  export type ApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    jobId?: SortOrder
    cvId?: SortOrder
    coverLetter?: SortOrderInput | SortOrder
    applicationDate?: SortOrder
    status?: SortOrder
    statusMessage?: SortOrderInput | SortOrder
    currentStageIndex?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    candidateNotes?: SortOrderInput | SortOrder
    processLog?: SortOrderInput | SortOrder
    isBookmarked?: SortOrderInput | SortOrder
    matchScore?: SortOrderInput | SortOrder
    manualScore?: SortOrderInput | SortOrder
    offerDetails?: SortOrderInput | SortOrder
    lastUpdatedById?: SortOrderInput | SortOrder
    _count?: ApplicationCountOrderByAggregateInput
    _avg?: ApplicationAvgOrderByAggregateInput
    _max?: ApplicationMaxOrderByAggregateInput
    _min?: ApplicationMinOrderByAggregateInput
    _sum?: ApplicationSumOrderByAggregateInput
  }

  export type ApplicationScalarWhereWithAggregatesInput = {
    AND?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    OR?: ApplicationScalarWhereWithAggregatesInput[]
    NOT?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Application"> | number
    candidateId?: IntWithAggregatesFilter<"Application"> | number
    jobId?: IntWithAggregatesFilter<"Application"> | number
    cvId?: IntWithAggregatesFilter<"Application"> | number
    coverLetter?: StringNullableWithAggregatesFilter<"Application"> | string | null
    applicationDate?: DateTimeWithAggregatesFilter<"Application"> | Date | string
    status?: EnumApplicationStatusWithAggregatesFilter<"Application"> | $Enums.ApplicationStatus
    statusMessage?: StringNullableWithAggregatesFilter<"Application"> | string | null
    currentStageIndex?: IntNullableWithAggregatesFilter<"Application"> | number | null
    internalNotes?: StringNullableWithAggregatesFilter<"Application"> | string | null
    candidateNotes?: StringNullableWithAggregatesFilter<"Application"> | string | null
    processLog?: JsonNullableWithAggregatesFilter<"Application">
    isBookmarked?: BoolNullableWithAggregatesFilter<"Application"> | boolean | null
    matchScore?: DecimalNullableWithAggregatesFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    manualScore?: DecimalNullableWithAggregatesFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    offerDetails?: JsonNullableWithAggregatesFilter<"Application">
    lastUpdatedById?: IntNullableWithAggregatesFilter<"Application"> | number | null
  }

  export type EducationWhereInput = {
    AND?: EducationWhereInput | EducationWhereInput[]
    OR?: EducationWhereInput[]
    NOT?: EducationWhereInput | EducationWhereInput[]
    id?: IntFilter<"Education"> | number
    candidateId?: IntFilter<"Education"> | number
    universityName?: StringFilter<"Education"> | string
    facultyDepartment?: StringNullableFilter<"Education"> | string | null
    degree?: StringNullableFilter<"Education"> | string | null
    major?: StringNullableFilter<"Education"> | string | null
    startDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    expectedGraduationDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    gpa?: DecimalNullableFilter<"Education"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Education"> | string | null
    descriptionJp?: StringNullableFilter<"Education"> | string | null
    country?: StringNullableFilter<"Education"> | string | null
    createdAt?: DateTimeFilter<"Education"> | Date | string
    updatedAt?: DateTimeFilter<"Education"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }

  export type EducationOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    universityName?: SortOrder
    facultyDepartment?: SortOrderInput | SortOrder
    degree?: SortOrderInput | SortOrder
    major?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    expectedGraduationDate?: SortOrderInput | SortOrder
    gpa?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
  }

  export type EducationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EducationWhereInput | EducationWhereInput[]
    OR?: EducationWhereInput[]
    NOT?: EducationWhereInput | EducationWhereInput[]
    candidateId?: IntFilter<"Education"> | number
    universityName?: StringFilter<"Education"> | string
    facultyDepartment?: StringNullableFilter<"Education"> | string | null
    degree?: StringNullableFilter<"Education"> | string | null
    major?: StringNullableFilter<"Education"> | string | null
    startDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    expectedGraduationDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    gpa?: DecimalNullableFilter<"Education"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Education"> | string | null
    descriptionJp?: StringNullableFilter<"Education"> | string | null
    country?: StringNullableFilter<"Education"> | string | null
    createdAt?: DateTimeFilter<"Education"> | Date | string
    updatedAt?: DateTimeFilter<"Education"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }, "id">

  export type EducationOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    universityName?: SortOrder
    facultyDepartment?: SortOrderInput | SortOrder
    degree?: SortOrderInput | SortOrder
    major?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    expectedGraduationDate?: SortOrderInput | SortOrder
    gpa?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EducationCountOrderByAggregateInput
    _avg?: EducationAvgOrderByAggregateInput
    _max?: EducationMaxOrderByAggregateInput
    _min?: EducationMinOrderByAggregateInput
    _sum?: EducationSumOrderByAggregateInput
  }

  export type EducationScalarWhereWithAggregatesInput = {
    AND?: EducationScalarWhereWithAggregatesInput | EducationScalarWhereWithAggregatesInput[]
    OR?: EducationScalarWhereWithAggregatesInput[]
    NOT?: EducationScalarWhereWithAggregatesInput | EducationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Education"> | number
    candidateId?: IntWithAggregatesFilter<"Education"> | number
    universityName?: StringWithAggregatesFilter<"Education"> | string
    facultyDepartment?: StringNullableWithAggregatesFilter<"Education"> | string | null
    degree?: StringNullableWithAggregatesFilter<"Education"> | string | null
    major?: StringNullableWithAggregatesFilter<"Education"> | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Education"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Education"> | Date | string | null
    expectedGraduationDate?: DateTimeNullableWithAggregatesFilter<"Education"> | Date | string | null
    gpa?: DecimalNullableWithAggregatesFilter<"Education"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableWithAggregatesFilter<"Education"> | string | null
    descriptionJp?: StringNullableWithAggregatesFilter<"Education"> | string | null
    country?: StringNullableWithAggregatesFilter<"Education"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Education"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Education"> | Date | string
  }

  export type WorkExperienceWhereInput = {
    AND?: WorkExperienceWhereInput | WorkExperienceWhereInput[]
    OR?: WorkExperienceWhereInput[]
    NOT?: WorkExperienceWhereInput | WorkExperienceWhereInput[]
    id?: IntFilter<"WorkExperience"> | number
    candidateId?: IntFilter<"WorkExperience"> | number
    companyName?: StringFilter<"WorkExperience"> | string
    jobTitle?: StringFilter<"WorkExperience"> | string
    employmentType?: EnumJobTypeEnumNullableFilter<"WorkExperience"> | $Enums.JobTypeEnum | null
    startDate?: DateTimeFilter<"WorkExperience"> | Date | string
    endDate?: DateTimeNullableFilter<"WorkExperience"> | Date | string | null
    isCurrent?: BoolFilter<"WorkExperience"> | boolean
    location?: StringNullableFilter<"WorkExperience"> | string | null
    description?: StringNullableFilter<"WorkExperience"> | string | null
    descriptionJp?: StringNullableFilter<"WorkExperience"> | string | null
    responsibilities?: StringNullableListFilter<"WorkExperience">
    keyToolsTechnologies?: StringNullableListFilter<"WorkExperience">
    createdAt?: DateTimeFilter<"WorkExperience"> | Date | string
    updatedAt?: DateTimeFilter<"WorkExperience"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }

  export type WorkExperienceOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    companyName?: SortOrder
    jobTitle?: SortOrder
    employmentType?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    isCurrent?: SortOrder
    location?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    responsibilities?: SortOrder
    keyToolsTechnologies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
  }

  export type WorkExperienceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: WorkExperienceWhereInput | WorkExperienceWhereInput[]
    OR?: WorkExperienceWhereInput[]
    NOT?: WorkExperienceWhereInput | WorkExperienceWhereInput[]
    candidateId?: IntFilter<"WorkExperience"> | number
    companyName?: StringFilter<"WorkExperience"> | string
    jobTitle?: StringFilter<"WorkExperience"> | string
    employmentType?: EnumJobTypeEnumNullableFilter<"WorkExperience"> | $Enums.JobTypeEnum | null
    startDate?: DateTimeFilter<"WorkExperience"> | Date | string
    endDate?: DateTimeNullableFilter<"WorkExperience"> | Date | string | null
    isCurrent?: BoolFilter<"WorkExperience"> | boolean
    location?: StringNullableFilter<"WorkExperience"> | string | null
    description?: StringNullableFilter<"WorkExperience"> | string | null
    descriptionJp?: StringNullableFilter<"WorkExperience"> | string | null
    responsibilities?: StringNullableListFilter<"WorkExperience">
    keyToolsTechnologies?: StringNullableListFilter<"WorkExperience">
    createdAt?: DateTimeFilter<"WorkExperience"> | Date | string
    updatedAt?: DateTimeFilter<"WorkExperience"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }, "id">

  export type WorkExperienceOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    companyName?: SortOrder
    jobTitle?: SortOrder
    employmentType?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    isCurrent?: SortOrder
    location?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    responsibilities?: SortOrder
    keyToolsTechnologies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WorkExperienceCountOrderByAggregateInput
    _avg?: WorkExperienceAvgOrderByAggregateInput
    _max?: WorkExperienceMaxOrderByAggregateInput
    _min?: WorkExperienceMinOrderByAggregateInput
    _sum?: WorkExperienceSumOrderByAggregateInput
  }

  export type WorkExperienceScalarWhereWithAggregatesInput = {
    AND?: WorkExperienceScalarWhereWithAggregatesInput | WorkExperienceScalarWhereWithAggregatesInput[]
    OR?: WorkExperienceScalarWhereWithAggregatesInput[]
    NOT?: WorkExperienceScalarWhereWithAggregatesInput | WorkExperienceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"WorkExperience"> | number
    candidateId?: IntWithAggregatesFilter<"WorkExperience"> | number
    companyName?: StringWithAggregatesFilter<"WorkExperience"> | string
    jobTitle?: StringWithAggregatesFilter<"WorkExperience"> | string
    employmentType?: EnumJobTypeEnumNullableWithAggregatesFilter<"WorkExperience"> | $Enums.JobTypeEnum | null
    startDate?: DateTimeWithAggregatesFilter<"WorkExperience"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"WorkExperience"> | Date | string | null
    isCurrent?: BoolWithAggregatesFilter<"WorkExperience"> | boolean
    location?: StringNullableWithAggregatesFilter<"WorkExperience"> | string | null
    description?: StringNullableWithAggregatesFilter<"WorkExperience"> | string | null
    descriptionJp?: StringNullableWithAggregatesFilter<"WorkExperience"> | string | null
    responsibilities?: StringNullableListFilter<"WorkExperience">
    keyToolsTechnologies?: StringNullableListFilter<"WorkExperience">
    createdAt?: DateTimeWithAggregatesFilter<"WorkExperience"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"WorkExperience"> | Date | string
  }

  export type ProjectWhereInput = {
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    id?: IntFilter<"Project"> | number
    candidateId?: IntFilter<"Project"> | number
    title?: StringFilter<"Project"> | string
    titleJp?: StringNullableFilter<"Project"> | string | null
    url?: StringNullableFilter<"Project"> | string | null
    purpose?: StringNullableFilter<"Project"> | string | null
    purposeJp?: StringNullableFilter<"Project"> | string | null
    description?: StringNullableFilter<"Project"> | string | null
    descriptionJp?: StringNullableFilter<"Project"> | string | null
    bulletPoints?: StringNullableListFilter<"Project">
    technologiesUsed?: StringNullableListFilter<"Project">
    teamDetails?: StringNullableFilter<"Project"> | string | null
    duration?: StringNullableFilter<"Project"> | string | null
    startDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    createdAt?: DateTimeFilter<"Project"> | Date | string
    updatedAt?: DateTimeFilter<"Project"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }

  export type ProjectOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    purpose?: SortOrderInput | SortOrder
    purposeJp?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    bulletPoints?: SortOrder
    technologiesUsed?: SortOrder
    teamDetails?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
  }

  export type ProjectWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    candidateId?: IntFilter<"Project"> | number
    title?: StringFilter<"Project"> | string
    titleJp?: StringNullableFilter<"Project"> | string | null
    url?: StringNullableFilter<"Project"> | string | null
    purpose?: StringNullableFilter<"Project"> | string | null
    purposeJp?: StringNullableFilter<"Project"> | string | null
    description?: StringNullableFilter<"Project"> | string | null
    descriptionJp?: StringNullableFilter<"Project"> | string | null
    bulletPoints?: StringNullableListFilter<"Project">
    technologiesUsed?: StringNullableListFilter<"Project">
    teamDetails?: StringNullableFilter<"Project"> | string | null
    duration?: StringNullableFilter<"Project"> | string | null
    startDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    createdAt?: DateTimeFilter<"Project"> | Date | string
    updatedAt?: DateTimeFilter<"Project"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }, "id">

  export type ProjectOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    purpose?: SortOrderInput | SortOrder
    purposeJp?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    descriptionJp?: SortOrderInput | SortOrder
    bulletPoints?: SortOrder
    technologiesUsed?: SortOrder
    teamDetails?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProjectCountOrderByAggregateInput
    _avg?: ProjectAvgOrderByAggregateInput
    _max?: ProjectMaxOrderByAggregateInput
    _min?: ProjectMinOrderByAggregateInput
    _sum?: ProjectSumOrderByAggregateInput
  }

  export type ProjectScalarWhereWithAggregatesInput = {
    AND?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    OR?: ProjectScalarWhereWithAggregatesInput[]
    NOT?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Project"> | number
    candidateId?: IntWithAggregatesFilter<"Project"> | number
    title?: StringWithAggregatesFilter<"Project"> | string
    titleJp?: StringNullableWithAggregatesFilter<"Project"> | string | null
    url?: StringNullableWithAggregatesFilter<"Project"> | string | null
    purpose?: StringNullableWithAggregatesFilter<"Project"> | string | null
    purposeJp?: StringNullableWithAggregatesFilter<"Project"> | string | null
    description?: StringNullableWithAggregatesFilter<"Project"> | string | null
    descriptionJp?: StringNullableWithAggregatesFilter<"Project"> | string | null
    bulletPoints?: StringNullableListFilter<"Project">
    technologiesUsed?: StringNullableListFilter<"Project">
    teamDetails?: StringNullableWithAggregatesFilter<"Project"> | string | null
    duration?: StringNullableWithAggregatesFilter<"Project"> | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Project"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Project"> | Date | string
  }

  export type QualificationWhereInput = {
    AND?: QualificationWhereInput | QualificationWhereInput[]
    OR?: QualificationWhereInput[]
    NOT?: QualificationWhereInput | QualificationWhereInput[]
    id?: IntFilter<"Qualification"> | number
    candidateId?: IntFilter<"Qualification"> | number
    name?: StringFilter<"Qualification"> | string
    issuingOrganization?: StringNullableFilter<"Qualification"> | string | null
    issueDate?: DateTimeNullableFilter<"Qualification"> | Date | string | null
    expiryDate?: DateTimeNullableFilter<"Qualification"> | Date | string | null
    credentialId?: StringNullableFilter<"Qualification"> | string | null
    credentialUrl?: StringNullableFilter<"Qualification"> | string | null
    description?: StringNullableFilter<"Qualification"> | string | null
    createdAt?: DateTimeFilter<"Qualification"> | Date | string
    updatedAt?: DateTimeFilter<"Qualification"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }

  export type QualificationOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    name?: SortOrder
    issuingOrganization?: SortOrderInput | SortOrder
    issueDate?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    credentialId?: SortOrderInput | SortOrder
    credentialUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
  }

  export type QualificationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: QualificationWhereInput | QualificationWhereInput[]
    OR?: QualificationWhereInput[]
    NOT?: QualificationWhereInput | QualificationWhereInput[]
    candidateId?: IntFilter<"Qualification"> | number
    name?: StringFilter<"Qualification"> | string
    issuingOrganization?: StringNullableFilter<"Qualification"> | string | null
    issueDate?: DateTimeNullableFilter<"Qualification"> | Date | string | null
    expiryDate?: DateTimeNullableFilter<"Qualification"> | Date | string | null
    credentialId?: StringNullableFilter<"Qualification"> | string | null
    credentialUrl?: StringNullableFilter<"Qualification"> | string | null
    description?: StringNullableFilter<"Qualification"> | string | null
    createdAt?: DateTimeFilter<"Qualification"> | Date | string
    updatedAt?: DateTimeFilter<"Qualification"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }, "id">

  export type QualificationOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    name?: SortOrder
    issuingOrganization?: SortOrderInput | SortOrder
    issueDate?: SortOrderInput | SortOrder
    expiryDate?: SortOrderInput | SortOrder
    credentialId?: SortOrderInput | SortOrder
    credentialUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: QualificationCountOrderByAggregateInput
    _avg?: QualificationAvgOrderByAggregateInput
    _max?: QualificationMaxOrderByAggregateInput
    _min?: QualificationMinOrderByAggregateInput
    _sum?: QualificationSumOrderByAggregateInput
  }

  export type QualificationScalarWhereWithAggregatesInput = {
    AND?: QualificationScalarWhereWithAggregatesInput | QualificationScalarWhereWithAggregatesInput[]
    OR?: QualificationScalarWhereWithAggregatesInput[]
    NOT?: QualificationScalarWhereWithAggregatesInput | QualificationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Qualification"> | number
    candidateId?: IntWithAggregatesFilter<"Qualification"> | number
    name?: StringWithAggregatesFilter<"Qualification"> | string
    issuingOrganization?: StringNullableWithAggregatesFilter<"Qualification"> | string | null
    issueDate?: DateTimeNullableWithAggregatesFilter<"Qualification"> | Date | string | null
    expiryDate?: DateTimeNullableWithAggregatesFilter<"Qualification"> | Date | string | null
    credentialId?: StringNullableWithAggregatesFilter<"Qualification"> | string | null
    credentialUrl?: StringNullableWithAggregatesFilter<"Qualification"> | string | null
    description?: StringNullableWithAggregatesFilter<"Qualification"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Qualification"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Qualification"> | Date | string
  }

  export type AwardWhereInput = {
    AND?: AwardWhereInput | AwardWhereInput[]
    OR?: AwardWhereInput[]
    NOT?: AwardWhereInput | AwardWhereInput[]
    id?: IntFilter<"Award"> | number
    candidateId?: IntFilter<"Award"> | number
    title?: StringFilter<"Award"> | string
    issuer?: StringNullableFilter<"Award"> | string | null
    date?: DateTimeNullableFilter<"Award"> | Date | string | null
    description?: StringNullableFilter<"Award"> | string | null
    createdAt?: DateTimeFilter<"Award"> | Date | string
    updatedAt?: DateTimeFilter<"Award"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }

  export type AwardOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    issuer?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
  }

  export type AwardWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AwardWhereInput | AwardWhereInput[]
    OR?: AwardWhereInput[]
    NOT?: AwardWhereInput | AwardWhereInput[]
    candidateId?: IntFilter<"Award"> | number
    title?: StringFilter<"Award"> | string
    issuer?: StringNullableFilter<"Award"> | string | null
    date?: DateTimeNullableFilter<"Award"> | Date | string | null
    description?: StringNullableFilter<"Award"> | string | null
    createdAt?: DateTimeFilter<"Award"> | Date | string
    updatedAt?: DateTimeFilter<"Award"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }, "id">

  export type AwardOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    issuer?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AwardCountOrderByAggregateInput
    _avg?: AwardAvgOrderByAggregateInput
    _max?: AwardMaxOrderByAggregateInput
    _min?: AwardMinOrderByAggregateInput
    _sum?: AwardSumOrderByAggregateInput
  }

  export type AwardScalarWhereWithAggregatesInput = {
    AND?: AwardScalarWhereWithAggregatesInput | AwardScalarWhereWithAggregatesInput[]
    OR?: AwardScalarWhereWithAggregatesInput[]
    NOT?: AwardScalarWhereWithAggregatesInput | AwardScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Award"> | number
    candidateId?: IntWithAggregatesFilter<"Award"> | number
    title?: StringWithAggregatesFilter<"Award"> | string
    issuer?: StringNullableWithAggregatesFilter<"Award"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"Award"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"Award"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Award"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Award"> | Date | string
  }

  export type CandidateMediaWhereInput = {
    AND?: CandidateMediaWhereInput | CandidateMediaWhereInput[]
    OR?: CandidateMediaWhereInput[]
    NOT?: CandidateMediaWhereInput | CandidateMediaWhereInput[]
    id?: IntFilter<"CandidateMedia"> | number
    candidateId?: IntFilter<"CandidateMedia"> | number
    mediaType?: EnumMediaTypeFilter<"CandidateMedia"> | $Enums.MediaType
    title?: StringNullableFilter<"CandidateMedia"> | string | null
    url?: StringFilter<"CandidateMedia"> | string
    thumbnailUrl?: StringNullableFilter<"CandidateMedia"> | string | null
    description?: StringNullableFilter<"CandidateMedia"> | string | null
    createdAt?: DateTimeFilter<"CandidateMedia"> | Date | string
    updatedAt?: DateTimeFilter<"CandidateMedia"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }

  export type CandidateMediaOrderByWithRelationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    mediaType?: SortOrder
    title?: SortOrderInput | SortOrder
    url?: SortOrder
    thumbnailUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
  }

  export type CandidateMediaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CandidateMediaWhereInput | CandidateMediaWhereInput[]
    OR?: CandidateMediaWhereInput[]
    NOT?: CandidateMediaWhereInput | CandidateMediaWhereInput[]
    candidateId?: IntFilter<"CandidateMedia"> | number
    mediaType?: EnumMediaTypeFilter<"CandidateMedia"> | $Enums.MediaType
    title?: StringNullableFilter<"CandidateMedia"> | string | null
    url?: StringFilter<"CandidateMedia"> | string
    thumbnailUrl?: StringNullableFilter<"CandidateMedia"> | string | null
    description?: StringNullableFilter<"CandidateMedia"> | string | null
    createdAt?: DateTimeFilter<"CandidateMedia"> | Date | string
    updatedAt?: DateTimeFilter<"CandidateMedia"> | Date | string
    candidate?: XOR<CandidateScalarRelationFilter, CandidateWhereInput>
  }, "id">

  export type CandidateMediaOrderByWithAggregationInput = {
    id?: SortOrder
    candidateId?: SortOrder
    mediaType?: SortOrder
    title?: SortOrderInput | SortOrder
    url?: SortOrder
    thumbnailUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CandidateMediaCountOrderByAggregateInput
    _avg?: CandidateMediaAvgOrderByAggregateInput
    _max?: CandidateMediaMaxOrderByAggregateInput
    _min?: CandidateMediaMinOrderByAggregateInput
    _sum?: CandidateMediaSumOrderByAggregateInput
  }

  export type CandidateMediaScalarWhereWithAggregatesInput = {
    AND?: CandidateMediaScalarWhereWithAggregatesInput | CandidateMediaScalarWhereWithAggregatesInput[]
    OR?: CandidateMediaScalarWhereWithAggregatesInput[]
    NOT?: CandidateMediaScalarWhereWithAggregatesInput | CandidateMediaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CandidateMedia"> | number
    candidateId?: IntWithAggregatesFilter<"CandidateMedia"> | number
    mediaType?: EnumMediaTypeWithAggregatesFilter<"CandidateMedia"> | $Enums.MediaType
    title?: StringNullableWithAggregatesFilter<"CandidateMedia"> | string | null
    url?: StringWithAggregatesFilter<"CandidateMedia"> | string
    thumbnailUrl?: StringNullableWithAggregatesFilter<"CandidateMedia"> | string | null
    description?: StringNullableWithAggregatesFilter<"CandidateMedia"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CandidateMedia"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CandidateMedia"> | Date | string
  }

  export type JobDocumentWhereInput = {
    AND?: JobDocumentWhereInput | JobDocumentWhereInput[]
    OR?: JobDocumentWhereInput[]
    NOT?: JobDocumentWhereInput | JobDocumentWhereInput[]
    id?: IntFilter<"JobDocument"> | number
    jobId?: IntFilter<"JobDocument"> | number
    documentName?: StringFilter<"JobDocument"> | string
    documentUrl?: StringFilter<"JobDocument"> | string
    documentType?: EnumDocumentTypeFilter<"JobDocument"> | $Enums.DocumentType
    thumbnailUrl?: StringNullableFilter<"JobDocument"> | string | null
    uploadedAt?: DateTimeFilter<"JobDocument"> | Date | string
    job?: XOR<JobScalarRelationFilter, JobWhereInput>
  }

  export type JobDocumentOrderByWithRelationInput = {
    id?: SortOrder
    jobId?: SortOrder
    documentName?: SortOrder
    documentUrl?: SortOrder
    documentType?: SortOrder
    thumbnailUrl?: SortOrderInput | SortOrder
    uploadedAt?: SortOrder
    job?: JobOrderByWithRelationInput
  }

  export type JobDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: JobDocumentWhereInput | JobDocumentWhereInput[]
    OR?: JobDocumentWhereInput[]
    NOT?: JobDocumentWhereInput | JobDocumentWhereInput[]
    jobId?: IntFilter<"JobDocument"> | number
    documentName?: StringFilter<"JobDocument"> | string
    documentUrl?: StringFilter<"JobDocument"> | string
    documentType?: EnumDocumentTypeFilter<"JobDocument"> | $Enums.DocumentType
    thumbnailUrl?: StringNullableFilter<"JobDocument"> | string | null
    uploadedAt?: DateTimeFilter<"JobDocument"> | Date | string
    job?: XOR<JobScalarRelationFilter, JobWhereInput>
  }, "id">

  export type JobDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    jobId?: SortOrder
    documentName?: SortOrder
    documentUrl?: SortOrder
    documentType?: SortOrder
    thumbnailUrl?: SortOrderInput | SortOrder
    uploadedAt?: SortOrder
    _count?: JobDocumentCountOrderByAggregateInput
    _avg?: JobDocumentAvgOrderByAggregateInput
    _max?: JobDocumentMaxOrderByAggregateInput
    _min?: JobDocumentMinOrderByAggregateInput
    _sum?: JobDocumentSumOrderByAggregateInput
  }

  export type JobDocumentScalarWhereWithAggregatesInput = {
    AND?: JobDocumentScalarWhereWithAggregatesInput | JobDocumentScalarWhereWithAggregatesInput[]
    OR?: JobDocumentScalarWhereWithAggregatesInput[]
    NOT?: JobDocumentScalarWhereWithAggregatesInput | JobDocumentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"JobDocument"> | number
    jobId?: IntWithAggregatesFilter<"JobDocument"> | number
    documentName?: StringWithAggregatesFilter<"JobDocument"> | string
    documentUrl?: StringWithAggregatesFilter<"JobDocument"> | string
    documentType?: EnumDocumentTypeWithAggregatesFilter<"JobDocument"> | $Enums.DocumentType
    thumbnailUrl?: StringNullableWithAggregatesFilter<"JobDocument"> | string | null
    uploadedAt?: DateTimeWithAggregatesFilter<"JobDocument"> | Date | string
  }

  export type IndustryCreateInput = {
    name: string
    nameJp?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobs?: JobCreateNestedManyWithoutIndustryInput
  }

  export type IndustryUncheckedCreateInput = {
    id?: number
    name: string
    nameJp?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobs?: JobUncheckedCreateNestedManyWithoutIndustryInput
  }

  export type IndustryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobs?: JobUpdateManyWithoutIndustryNestedInput
  }

  export type IndustryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobs?: JobUncheckedUpdateManyWithoutIndustryNestedInput
  }

  export type IndustryCreateManyInput = {
    id?: number
    name: string
    nameJp?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IndustryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IndustryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SkillCreateInput = {
    name: string
    nameJp?: string | null
    category?: $Enums.SkillCategory | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobSkills?: JobSkillCreateNestedManyWithoutSkillInput
    candidateSkills?: CandidateSkillCreateNestedManyWithoutSkillInput
  }

  export type SkillUncheckedCreateInput = {
    id?: number
    name: string
    nameJp?: string | null
    category?: $Enums.SkillCategory | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobSkills?: JobSkillUncheckedCreateNestedManyWithoutSkillInput
    candidateSkills?: CandidateSkillUncheckedCreateNestedManyWithoutSkillInput
  }

  export type SkillUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobSkills?: JobSkillUpdateManyWithoutSkillNestedInput
    candidateSkills?: CandidateSkillUpdateManyWithoutSkillNestedInput
  }

  export type SkillUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobSkills?: JobSkillUncheckedUpdateManyWithoutSkillNestedInput
    candidateSkills?: CandidateSkillUncheckedUpdateManyWithoutSkillNestedInput
  }

  export type SkillCreateManyInput = {
    id?: number
    name: string
    nameJp?: string | null
    category?: $Enums.SkillCategory | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SkillUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SkillUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerCreateNestedOneWithoutUserInput
    candidate?: CandidateCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationCreateNestedManyWithoutLastUpdatedByInput
    sessions?: SessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerUncheckedCreateNestedOneWithoutUserInput
    candidate?: CandidateUncheckedCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationUncheckedCreateNestedManyWithoutLastUpdatedByInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneWithoutUserNestedInput
    candidate?: CandidateUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUpdateManyWithoutLastUpdatedByNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUncheckedUpdateOneWithoutUserNestedInput
    candidate?: CandidateUncheckedUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUncheckedUpdateManyWithoutLastUpdatedByNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expiresAt: Date | string
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    userId: number
    expiresAt: Date | string
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    userId: number
    expiresAt: Date | string
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmployerCreateInput = {
    companyName: string
    companyNameKana?: string | null
    companyNameJp?: string | null
    companyLogoUrl?: string | null
    companyWebsite?: string | null
    companyDescription?: string | null
    companyDescriptionJp?: string | null
    businessOverview?: string | null
    businessOverviewJp?: string | null
    companyAddress?: string | null
    companyAddressJp?: string | null
    companyPhone?: string | null
    establishmentDate?: Date | string | null
    representativeName?: string | null
    representativeTitle?: string | null
    vietnamBranchExists?: boolean | null
    companySize?: $Enums.CompanySizeType | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutEmployerInput
    jobs?: JobCreateNestedManyWithoutEmployerInput
  }

  export type EmployerUncheckedCreateInput = {
    id?: number
    userId: number
    companyName: string
    companyNameKana?: string | null
    companyNameJp?: string | null
    companyLogoUrl?: string | null
    companyWebsite?: string | null
    companyDescription?: string | null
    companyDescriptionJp?: string | null
    businessOverview?: string | null
    businessOverviewJp?: string | null
    companyAddress?: string | null
    companyAddressJp?: string | null
    companyPhone?: string | null
    establishmentDate?: Date | string | null
    representativeName?: string | null
    representativeTitle?: string | null
    vietnamBranchExists?: boolean | null
    companySize?: $Enums.CompanySizeType | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobs?: JobUncheckedCreateNestedManyWithoutEmployerInput
  }

  export type EmployerUpdateInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutEmployerNestedInput
    jobs?: JobUpdateManyWithoutEmployerNestedInput
  }

  export type EmployerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobs?: JobUncheckedUpdateManyWithoutEmployerNestedInput
  }

  export type EmployerCreateManyInput = {
    id?: number
    userId: number
    companyName: string
    companyNameKana?: string | null
    companyNameJp?: string | null
    companyLogoUrl?: string | null
    companyWebsite?: string | null
    companyDescription?: string | null
    companyDescriptionJp?: string | null
    businessOverview?: string | null
    businessOverviewJp?: string | null
    companyAddress?: string | null
    companyAddressJp?: string | null
    companyPhone?: string | null
    establishmentDate?: Date | string | null
    representativeName?: string | null
    representativeTitle?: string | null
    vietnamBranchExists?: boolean | null
    companySize?: $Enums.CompanySizeType | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EmployerUpdateManyMutationInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EmployerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateCreateInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUpdateInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateCreateManyInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidateUpdateManyMutationInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobCreateInput = {
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer: EmployerCreateNestedOneWithoutJobsInput
    industry?: IndustryCreateNestedOneWithoutJobsInput
    skills?: JobSkillCreateNestedManyWithoutJobInput
    applications?: ApplicationCreateNestedManyWithoutJobInput
    documents?: JobDocumentCreateNestedManyWithoutJobInput
  }

  export type JobUncheckedCreateInput = {
    id?: number
    employerId: number
    industryId?: number | null
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: JobSkillUncheckedCreateNestedManyWithoutJobInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutJobInput
    documents?: JobDocumentUncheckedCreateNestedManyWithoutJobInput
  }

  export type JobUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneRequiredWithoutJobsNestedInput
    industry?: IndustryUpdateOneWithoutJobsNestedInput
    skills?: JobSkillUpdateManyWithoutJobNestedInput
    applications?: ApplicationUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    employerId?: IntFieldUpdateOperationsInput | number
    industryId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: JobSkillUncheckedUpdateManyWithoutJobNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUncheckedUpdateManyWithoutJobNestedInput
  }

  export type JobCreateManyInput = {
    id?: number
    employerId: number
    industryId?: number | null
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    employerId?: IntFieldUpdateOperationsInput | number
    industryId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobSkillCreateInput = {
    importanceLevel?: number | null
    requiredYears?: number | null
    job: JobCreateNestedOneWithoutSkillsInput
    skill: SkillCreateNestedOneWithoutJobSkillsInput
  }

  export type JobSkillUncheckedCreateInput = {
    id?: number
    jobId: number
    skillId: number
    importanceLevel?: number | null
    requiredYears?: number | null
  }

  export type JobSkillUpdateInput = {
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
    job?: JobUpdateOneRequiredWithoutSkillsNestedInput
    skill?: SkillUpdateOneRequiredWithoutJobSkillsNestedInput
  }

  export type JobSkillUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type JobSkillCreateManyInput = {
    id?: number
    jobId: number
    skillId: number
    importanceLevel?: number | null
    requiredYears?: number | null
  }

  export type JobSkillUpdateManyMutationInput = {
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type JobSkillUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CandidateSkillCreateInput = {
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
    candidate: CandidateCreateNestedOneWithoutSkillsInput
    skill: SkillCreateNestedOneWithoutCandidateSkillsInput
  }

  export type CandidateSkillUncheckedCreateInput = {
    id?: number
    candidateId: number
    skillId: number
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
  }

  export type CandidateSkillUpdateInput = {
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    candidate?: CandidateUpdateOneRequiredWithoutSkillsNestedInput
    skill?: SkillUpdateOneRequiredWithoutCandidateSkillsNestedInput
  }

  export type CandidateSkillUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CandidateSkillCreateManyInput = {
    id?: number
    candidateId: number
    skillId: number
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
  }

  export type CandidateSkillUpdateManyMutationInput = {
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CandidateSkillUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CVCreateInput = {
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutCvsInput
    applications?: ApplicationCreateNestedManyWithoutCvInput
  }

  export type CVUncheckedCreateInput = {
    id?: number
    candidateId: number
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
    applications?: ApplicationUncheckedCreateNestedManyWithoutCvInput
  }

  export type CVUpdateInput = {
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutCvsNestedInput
    applications?: ApplicationUpdateManyWithoutCvNestedInput
  }

  export type CVUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: ApplicationUncheckedUpdateManyWithoutCvNestedInput
  }

  export type CVCreateManyInput = {
    id?: number
    candidateId: number
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
  }

  export type CVUpdateManyMutationInput = {
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CVUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationCreateInput = {
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate: CandidateCreateNestedOneWithoutApplicationsInput
    job: JobCreateNestedOneWithoutApplicationsInput
    cv: CVCreateNestedOneWithoutApplicationsInput
    lastUpdatedBy?: UserCreateNestedOneWithoutApplicationsUpdatedInput
  }

  export type ApplicationUncheckedCreateInput = {
    id?: number
    candidateId: number
    jobId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type ApplicationUpdateInput = {
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate?: CandidateUpdateOneRequiredWithoutApplicationsNestedInput
    job?: JobUpdateOneRequiredWithoutApplicationsNestedInput
    cv?: CVUpdateOneRequiredWithoutApplicationsNestedInput
    lastUpdatedBy?: UserUpdateOneWithoutApplicationsUpdatedNestedInput
  }

  export type ApplicationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ApplicationCreateManyInput = {
    id?: number
    candidateId: number
    jobId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type ApplicationUpdateManyMutationInput = {
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ApplicationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EducationCreateInput = {
    universityName: string
    facultyDepartment?: string | null
    degree?: string | null
    major?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    gpa?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    descriptionJp?: string | null
    country?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutEducationInput
  }

  export type EducationUncheckedCreateInput = {
    id?: number
    candidateId: number
    universityName: string
    facultyDepartment?: string | null
    degree?: string | null
    major?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    gpa?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    descriptionJp?: string | null
    country?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EducationUpdateInput = {
    universityName?: StringFieldUpdateOperationsInput | string
    facultyDepartment?: NullableStringFieldUpdateOperationsInput | string | null
    degree?: NullableStringFieldUpdateOperationsInput | string | null
    major?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gpa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutEducationNestedInput
  }

  export type EducationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    universityName?: StringFieldUpdateOperationsInput | string
    facultyDepartment?: NullableStringFieldUpdateOperationsInput | string | null
    degree?: NullableStringFieldUpdateOperationsInput | string | null
    major?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gpa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EducationCreateManyInput = {
    id?: number
    candidateId: number
    universityName: string
    facultyDepartment?: string | null
    degree?: string | null
    major?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    gpa?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    descriptionJp?: string | null
    country?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EducationUpdateManyMutationInput = {
    universityName?: StringFieldUpdateOperationsInput | string
    facultyDepartment?: NullableStringFieldUpdateOperationsInput | string | null
    degree?: NullableStringFieldUpdateOperationsInput | string | null
    major?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gpa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EducationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    universityName?: StringFieldUpdateOperationsInput | string
    facultyDepartment?: NullableStringFieldUpdateOperationsInput | string | null
    degree?: NullableStringFieldUpdateOperationsInput | string | null
    major?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gpa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkExperienceCreateInput = {
    companyName: string
    jobTitle: string
    employmentType?: $Enums.JobTypeEnum | null
    startDate: Date | string
    endDate?: Date | string | null
    isCurrent?: boolean
    location?: string | null
    description?: string | null
    descriptionJp?: string | null
    responsibilities?: WorkExperienceCreateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceCreatekeyToolsTechnologiesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutWorkExperienceInput
  }

  export type WorkExperienceUncheckedCreateInput = {
    id?: number
    candidateId: number
    companyName: string
    jobTitle: string
    employmentType?: $Enums.JobTypeEnum | null
    startDate: Date | string
    endDate?: Date | string | null
    isCurrent?: boolean
    location?: string | null
    description?: string | null
    descriptionJp?: string | null
    responsibilities?: WorkExperienceCreateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceCreatekeyToolsTechnologiesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WorkExperienceUpdateInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    employmentType?: NullableEnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isCurrent?: BoolFieldUpdateOperationsInput | boolean
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    responsibilities?: WorkExperienceUpdateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceUpdatekeyToolsTechnologiesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutWorkExperienceNestedInput
  }

  export type WorkExperienceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    employmentType?: NullableEnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isCurrent?: BoolFieldUpdateOperationsInput | boolean
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    responsibilities?: WorkExperienceUpdateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceUpdatekeyToolsTechnologiesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkExperienceCreateManyInput = {
    id?: number
    candidateId: number
    companyName: string
    jobTitle: string
    employmentType?: $Enums.JobTypeEnum | null
    startDate: Date | string
    endDate?: Date | string | null
    isCurrent?: boolean
    location?: string | null
    description?: string | null
    descriptionJp?: string | null
    responsibilities?: WorkExperienceCreateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceCreatekeyToolsTechnologiesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WorkExperienceUpdateManyMutationInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    employmentType?: NullableEnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isCurrent?: BoolFieldUpdateOperationsInput | boolean
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    responsibilities?: WorkExperienceUpdateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceUpdatekeyToolsTechnologiesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkExperienceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    employmentType?: NullableEnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isCurrent?: BoolFieldUpdateOperationsInput | boolean
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    responsibilities?: WorkExperienceUpdateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceUpdatekeyToolsTechnologiesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectCreateInput = {
    title: string
    titleJp?: string | null
    url?: string | null
    purpose?: string | null
    purposeJp?: string | null
    description?: string | null
    descriptionJp?: string | null
    bulletPoints?: ProjectCreatebulletPointsInput | string[]
    technologiesUsed?: ProjectCreatetechnologiesUsedInput | string[]
    teamDetails?: string | null
    duration?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutProjectsInput
  }

  export type ProjectUncheckedCreateInput = {
    id?: number
    candidateId: number
    title: string
    titleJp?: string | null
    url?: string | null
    purpose?: string | null
    purposeJp?: string | null
    description?: string | null
    descriptionJp?: string | null
    bulletPoints?: ProjectCreatebulletPointsInput | string[]
    technologiesUsed?: ProjectCreatetechnologiesUsedInput | string[]
    teamDetails?: string | null
    duration?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProjectUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    purposeJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    bulletPoints?: ProjectUpdatebulletPointsInput | string[]
    technologiesUsed?: ProjectUpdatetechnologiesUsedInput | string[]
    teamDetails?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutProjectsNestedInput
  }

  export type ProjectUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    purposeJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    bulletPoints?: ProjectUpdatebulletPointsInput | string[]
    technologiesUsed?: ProjectUpdatetechnologiesUsedInput | string[]
    teamDetails?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectCreateManyInput = {
    id?: number
    candidateId: number
    title: string
    titleJp?: string | null
    url?: string | null
    purpose?: string | null
    purposeJp?: string | null
    description?: string | null
    descriptionJp?: string | null
    bulletPoints?: ProjectCreatebulletPointsInput | string[]
    technologiesUsed?: ProjectCreatetechnologiesUsedInput | string[]
    teamDetails?: string | null
    duration?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProjectUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    purposeJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    bulletPoints?: ProjectUpdatebulletPointsInput | string[]
    technologiesUsed?: ProjectUpdatetechnologiesUsedInput | string[]
    teamDetails?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    purposeJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    bulletPoints?: ProjectUpdatebulletPointsInput | string[]
    technologiesUsed?: ProjectUpdatetechnologiesUsedInput | string[]
    teamDetails?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualificationCreateInput = {
    name: string
    issuingOrganization?: string | null
    issueDate?: Date | string | null
    expiryDate?: Date | string | null
    credentialId?: string | null
    credentialUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutQualificationsInput
  }

  export type QualificationUncheckedCreateInput = {
    id?: number
    candidateId: number
    name: string
    issuingOrganization?: string | null
    issueDate?: Date | string | null
    expiryDate?: Date | string | null
    credentialId?: string | null
    credentialUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualificationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    issuingOrganization?: NullableStringFieldUpdateOperationsInput | string | null
    issueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    credentialId?: NullableStringFieldUpdateOperationsInput | string | null
    credentialUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutQualificationsNestedInput
  }

  export type QualificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    issuingOrganization?: NullableStringFieldUpdateOperationsInput | string | null
    issueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    credentialId?: NullableStringFieldUpdateOperationsInput | string | null
    credentialUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualificationCreateManyInput = {
    id?: number
    candidateId: number
    name: string
    issuingOrganization?: string | null
    issueDate?: Date | string | null
    expiryDate?: Date | string | null
    credentialId?: string | null
    credentialUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualificationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    issuingOrganization?: NullableStringFieldUpdateOperationsInput | string | null
    issueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    credentialId?: NullableStringFieldUpdateOperationsInput | string | null
    credentialUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    issuingOrganization?: NullableStringFieldUpdateOperationsInput | string | null
    issueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    credentialId?: NullableStringFieldUpdateOperationsInput | string | null
    credentialUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AwardCreateInput = {
    title: string
    issuer?: string | null
    date?: Date | string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutAwardsInput
  }

  export type AwardUncheckedCreateInput = {
    id?: number
    candidateId: number
    title: string
    issuer?: string | null
    date?: Date | string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AwardUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutAwardsNestedInput
  }

  export type AwardUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AwardCreateManyInput = {
    id?: number
    candidateId: number
    title: string
    issuer?: string | null
    date?: Date | string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AwardUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AwardUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateMediaCreateInput = {
    mediaType: $Enums.MediaType
    title?: string | null
    url: string
    thumbnailUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutMediaInput
  }

  export type CandidateMediaUncheckedCreateInput = {
    id?: number
    candidateId: number
    mediaType: $Enums.MediaType
    title?: string | null
    url: string
    thumbnailUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidateMediaUpdateInput = {
    mediaType?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutMediaNestedInput
  }

  export type CandidateMediaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    mediaType?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateMediaCreateManyInput = {
    id?: number
    candidateId: number
    mediaType: $Enums.MediaType
    title?: string | null
    url: string
    thumbnailUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidateMediaUpdateManyMutationInput = {
    mediaType?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateMediaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    mediaType?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobDocumentCreateInput = {
    documentName: string
    documentUrl: string
    documentType: $Enums.DocumentType
    thumbnailUrl?: string | null
    uploadedAt?: Date | string
    job: JobCreateNestedOneWithoutDocumentsInput
  }

  export type JobDocumentUncheckedCreateInput = {
    id?: number
    jobId: number
    documentName: string
    documentUrl: string
    documentType: $Enums.DocumentType
    thumbnailUrl?: string | null
    uploadedAt?: Date | string
  }

  export type JobDocumentUpdateInput = {
    documentName?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    job?: JobUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type JobDocumentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    documentName?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobDocumentCreateManyInput = {
    id?: number
    jobId: number
    documentName: string
    documentUrl: string
    documentType: $Enums.DocumentType
    thumbnailUrl?: string | null
    uploadedAt?: Date | string
  }

  export type JobDocumentUpdateManyMutationInput = {
    documentName?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobDocumentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    documentName?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type JobListRelationFilter = {
    every?: JobWhereInput
    some?: JobWhereInput
    none?: JobWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type JobOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type IndustryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IndustryAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IndustryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IndustryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IndustrySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumSkillCategoryNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SkillCategory | EnumSkillCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSkillCategoryNullableFilter<$PrismaModel> | $Enums.SkillCategory | null
  }

  export type JobSkillListRelationFilter = {
    every?: JobSkillWhereInput
    some?: JobSkillWhereInput
    none?: JobSkillWhereInput
  }

  export type CandidateSkillListRelationFilter = {
    every?: CandidateSkillWhereInput
    some?: CandidateSkillWhereInput
    none?: CandidateSkillWhereInput
  }

  export type JobSkillOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CandidateSkillOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SkillCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrder
    category?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SkillAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SkillMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrder
    category?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SkillMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    nameJp?: SortOrder
    category?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SkillSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumSkillCategoryNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SkillCategory | EnumSkillCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSkillCategoryNullableWithAggregatesFilter<$PrismaModel> | $Enums.SkillCategory | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSkillCategoryNullableFilter<$PrismaModel>
    _max?: NestedEnumSkillCategoryNullableFilter<$PrismaModel>
  }

  export type EnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EmployerNullableScalarRelationFilter = {
    is?: EmployerWhereInput | null
    isNot?: EmployerWhereInput | null
  }

  export type CandidateNullableScalarRelationFilter = {
    is?: CandidateWhereInput | null
    isNot?: CandidateWhereInput | null
  }

  export type ApplicationListRelationFilter = {
    every?: ApplicationWhereInput
    some?: ApplicationWhereInput
    none?: ApplicationWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type ApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    phoneNumber?: SortOrder
    userType?: SortOrder
    avatarUrl?: SortOrder
    isActive?: SortOrder
    isEmailVerified?: SortOrder
    emailVerifyToken?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    phoneNumber?: SortOrder
    userType?: SortOrder
    avatarUrl?: SortOrder
    isActive?: SortOrder
    isEmailVerified?: SortOrder
    emailVerifyToken?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    phoneNumber?: SortOrder
    userType?: SortOrder
    avatarUrl?: SortOrder
    isActive?: SortOrder
    isEmailVerified?: SortOrder
    emailVerifyToken?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
  }

  export type SessionAvgOrderByAggregateInput = {
    userId?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
  }

  export type SessionSumOrderByAggregateInput = {
    userId?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type EnumCompanySizeTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySizeType | EnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeTypeNullableFilter<$PrismaModel> | $Enums.CompanySizeType | null
  }

  export type EmployerCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    companyName?: SortOrder
    companyNameKana?: SortOrder
    companyNameJp?: SortOrder
    companyLogoUrl?: SortOrder
    companyWebsite?: SortOrder
    companyDescription?: SortOrder
    companyDescriptionJp?: SortOrder
    businessOverview?: SortOrder
    businessOverviewJp?: SortOrder
    companyAddress?: SortOrder
    companyAddressJp?: SortOrder
    companyPhone?: SortOrder
    establishmentDate?: SortOrder
    representativeName?: SortOrder
    representativeTitle?: SortOrder
    vietnamBranchExists?: SortOrder
    companySize?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EmployerAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type EmployerMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    companyName?: SortOrder
    companyNameKana?: SortOrder
    companyNameJp?: SortOrder
    companyLogoUrl?: SortOrder
    companyWebsite?: SortOrder
    companyDescription?: SortOrder
    companyDescriptionJp?: SortOrder
    businessOverview?: SortOrder
    businessOverviewJp?: SortOrder
    companyAddress?: SortOrder
    companyAddressJp?: SortOrder
    companyPhone?: SortOrder
    establishmentDate?: SortOrder
    representativeName?: SortOrder
    representativeTitle?: SortOrder
    vietnamBranchExists?: SortOrder
    companySize?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EmployerMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    companyName?: SortOrder
    companyNameKana?: SortOrder
    companyNameJp?: SortOrder
    companyLogoUrl?: SortOrder
    companyWebsite?: SortOrder
    companyDescription?: SortOrder
    companyDescriptionJp?: SortOrder
    businessOverview?: SortOrder
    businessOverviewJp?: SortOrder
    companyAddress?: SortOrder
    companyAddressJp?: SortOrder
    companyPhone?: SortOrder
    establishmentDate?: SortOrder
    representativeName?: SortOrder
    representativeTitle?: SortOrder
    vietnamBranchExists?: SortOrder
    companySize?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EmployerSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumCompanySizeTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySizeType | EnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.CompanySizeType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCompanySizeTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumCompanySizeTypeNullableFilter<$PrismaModel>
  }

  export type EnumGenderTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.GenderType | EnumGenderTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderTypeNullableFilter<$PrismaModel> | $Enums.GenderType | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumSalaryTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSalaryTypeNullableFilter<$PrismaModel> | $Enums.SalaryType | null
  }

  export type EnumJobTypeEnumNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    has?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    hasSome?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumJapaneseProficiencyLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.JapaneseProficiencyLevel | EnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJapaneseProficiencyLevelNullableFilter<$PrismaModel> | $Enums.JapaneseProficiencyLevel | null
  }

  export type EnumProficiencyLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ProficiencyLevel | EnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProficiencyLevelNullableFilter<$PrismaModel> | $Enums.ProficiencyLevel | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type CVListRelationFilter = {
    every?: CVWhereInput
    some?: CVWhereInput
    none?: CVWhereInput
  }

  export type EducationListRelationFilter = {
    every?: EducationWhereInput
    some?: EducationWhereInput
    none?: EducationWhereInput
  }

  export type WorkExperienceListRelationFilter = {
    every?: WorkExperienceWhereInput
    some?: WorkExperienceWhereInput
    none?: WorkExperienceWhereInput
  }

  export type ProjectListRelationFilter = {
    every?: ProjectWhereInput
    some?: ProjectWhereInput
    none?: ProjectWhereInput
  }

  export type QualificationListRelationFilter = {
    every?: QualificationWhereInput
    some?: QualificationWhereInput
    none?: QualificationWhereInput
  }

  export type AwardListRelationFilter = {
    every?: AwardWhereInput
    some?: AwardWhereInput
    none?: AwardWhereInput
  }

  export type CandidateMediaListRelationFilter = {
    every?: CandidateMediaWhereInput
    some?: CandidateMediaWhereInput
    none?: CandidateMediaWhereInput
  }

  export type CVOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EducationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WorkExperienceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QualificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AwardOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CandidateMediaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CandidateCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nameKana?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    currentAddressJp?: SortOrder
    homeCountryAddress?: SortOrder
    country?: SortOrder
    headline?: SortOrder
    headlineJp?: SortOrder
    professionalSummary?: SortOrder
    professionalSummaryJp?: SortOrder
    appealStatement?: SortOrder
    appealStatementJp?: SortOrder
    keyStrengths?: SortOrder
    motivationStatement?: SortOrder
    careerGoals?: SortOrder
    linkedinUrl?: SortOrder
    githubUrl?: SortOrder
    portfolioUrl?: SortOrder
    otherSocialProfiles?: SortOrder
    desiredSalaryMin?: SortOrder
    desiredSalaryMax?: SortOrder
    desiredSalaryType?: SortOrder
    preferredJobTypes?: SortOrder
    preferredWorkLocations?: SortOrder
    jobExpectations?: SortOrder
    interestsTags?: SortOrder
    currentVisaStatusJp?: SortOrder
    visaExpiryDateJp?: SortOrder
    desiredVisaSupport?: SortOrder
    japaneseProficiency?: SortOrder
    englishProficiency?: SortOrder
    otherLanguages?: SortOrder
    willingToRelocateInJapan?: SortOrder
    arrivalInJapanDate?: SortOrder
    expectedGraduationDate?: SortOrder
    currentYearOfStudy?: SortOrder
    studentId?: SortOrder
    isSearchable?: SortOrder
    profileCompleteness?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CandidateAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    desiredSalaryMin?: SortOrder
    desiredSalaryMax?: SortOrder
    currentYearOfStudy?: SortOrder
    profileCompleteness?: SortOrder
  }

  export type CandidateMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nameKana?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    currentAddressJp?: SortOrder
    homeCountryAddress?: SortOrder
    country?: SortOrder
    headline?: SortOrder
    headlineJp?: SortOrder
    professionalSummary?: SortOrder
    professionalSummaryJp?: SortOrder
    appealStatement?: SortOrder
    appealStatementJp?: SortOrder
    motivationStatement?: SortOrder
    careerGoals?: SortOrder
    linkedinUrl?: SortOrder
    githubUrl?: SortOrder
    portfolioUrl?: SortOrder
    desiredSalaryMin?: SortOrder
    desiredSalaryMax?: SortOrder
    desiredSalaryType?: SortOrder
    currentVisaStatusJp?: SortOrder
    visaExpiryDateJp?: SortOrder
    desiredVisaSupport?: SortOrder
    japaneseProficiency?: SortOrder
    englishProficiency?: SortOrder
    willingToRelocateInJapan?: SortOrder
    arrivalInJapanDate?: SortOrder
    expectedGraduationDate?: SortOrder
    currentYearOfStudy?: SortOrder
    studentId?: SortOrder
    isSearchable?: SortOrder
    profileCompleteness?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CandidateMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nameKana?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    currentAddressJp?: SortOrder
    homeCountryAddress?: SortOrder
    country?: SortOrder
    headline?: SortOrder
    headlineJp?: SortOrder
    professionalSummary?: SortOrder
    professionalSummaryJp?: SortOrder
    appealStatement?: SortOrder
    appealStatementJp?: SortOrder
    motivationStatement?: SortOrder
    careerGoals?: SortOrder
    linkedinUrl?: SortOrder
    githubUrl?: SortOrder
    portfolioUrl?: SortOrder
    desiredSalaryMin?: SortOrder
    desiredSalaryMax?: SortOrder
    desiredSalaryType?: SortOrder
    currentVisaStatusJp?: SortOrder
    visaExpiryDateJp?: SortOrder
    desiredVisaSupport?: SortOrder
    japaneseProficiency?: SortOrder
    englishProficiency?: SortOrder
    willingToRelocateInJapan?: SortOrder
    arrivalInJapanDate?: SortOrder
    expectedGraduationDate?: SortOrder
    currentYearOfStudy?: SortOrder
    studentId?: SortOrder
    isSearchable?: SortOrder
    profileCompleteness?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CandidateSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    desiredSalaryMin?: SortOrder
    desiredSalaryMax?: SortOrder
    currentYearOfStudy?: SortOrder
    profileCompleteness?: SortOrder
  }

  export type EnumGenderTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GenderType | EnumGenderTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.GenderType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderTypeNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumSalaryTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSalaryTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.SalaryType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSalaryTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumSalaryTypeNullableFilter<$PrismaModel>
  }

  export type EnumJapaneseProficiencyLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JapaneseProficiencyLevel | EnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJapaneseProficiencyLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.JapaneseProficiencyLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumJapaneseProficiencyLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumJapaneseProficiencyLevelNullableFilter<$PrismaModel>
  }

  export type EnumProficiencyLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProficiencyLevel | EnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProficiencyLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.ProficiencyLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumProficiencyLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumProficiencyLevelNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumSalaryTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSalaryTypeFilter<$PrismaModel> | $Enums.SalaryType
  }

  export type EnumJobTypeEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel>
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeEnumFilter<$PrismaModel> | $Enums.JobTypeEnum
  }

  export type EnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type EmployerScalarRelationFilter = {
    is?: EmployerWhereInput
    isNot?: EmployerWhereInput
  }

  export type IndustryNullableScalarRelationFilter = {
    is?: IndustryWhereInput | null
    isNot?: IndustryWhereInput | null
  }

  export type JobDocumentListRelationFilter = {
    every?: JobDocumentWhereInput
    some?: JobDocumentWhereInput
    none?: JobDocumentWhereInput
  }

  export type JobDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobCountOrderByAggregateInput = {
    id?: SortOrder
    employerId?: SortOrder
    industryId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    requirements?: SortOrder
    requirementsJp?: SortOrder
    benefits?: SortOrder
    benefitsJp?: SortOrder
    appealPoints?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    salaryType?: SortOrder
    salaryDetails?: SortOrder
    country?: SortOrder
    prefecture?: SortOrder
    city?: SortOrder
    addressDetail?: SortOrder
    nearestStation?: SortOrder
    isRemote?: SortOrder
    remoteDetails?: SortOrder
    jobType?: SortOrder
    status?: SortOrder
    postedDate?: SortOrder
    expiryDate?: SortOrder
    externalApplicationUrl?: SortOrder
    hiringStages?: SortOrder
    workingHoursDescription?: SortOrder
    isFlexTime?: SortOrder
    coreTimeDescription?: SortOrder
    actualWorkingHoursPerDay?: SortOrder
    avgOvertimeHoursPerMonth?: SortOrder
    requiredJapaneseLevel?: SortOrder
    requiredEnglishLevel?: SortOrder
    otherLanguageRequirements?: SortOrder
    visaSupportAvailable?: SortOrder
    relocationSupportAvailable?: SortOrder
    housingSupportDetails?: SortOrder
    foreignFriendlyEnvironment?: SortOrder
    targetCandidateDescription?: SortOrder
    numberOfHires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobAvgOrderByAggregateInput = {
    id?: SortOrder
    employerId?: SortOrder
    industryId?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    actualWorkingHoursPerDay?: SortOrder
    avgOvertimeHoursPerMonth?: SortOrder
    numberOfHires?: SortOrder
  }

  export type JobMaxOrderByAggregateInput = {
    id?: SortOrder
    employerId?: SortOrder
    industryId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    requirements?: SortOrder
    requirementsJp?: SortOrder
    benefits?: SortOrder
    benefitsJp?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    salaryType?: SortOrder
    salaryDetails?: SortOrder
    country?: SortOrder
    prefecture?: SortOrder
    city?: SortOrder
    addressDetail?: SortOrder
    nearestStation?: SortOrder
    isRemote?: SortOrder
    remoteDetails?: SortOrder
    jobType?: SortOrder
    status?: SortOrder
    postedDate?: SortOrder
    expiryDate?: SortOrder
    externalApplicationUrl?: SortOrder
    workingHoursDescription?: SortOrder
    isFlexTime?: SortOrder
    coreTimeDescription?: SortOrder
    actualWorkingHoursPerDay?: SortOrder
    avgOvertimeHoursPerMonth?: SortOrder
    requiredJapaneseLevel?: SortOrder
    requiredEnglishLevel?: SortOrder
    otherLanguageRequirements?: SortOrder
    visaSupportAvailable?: SortOrder
    relocationSupportAvailable?: SortOrder
    housingSupportDetails?: SortOrder
    foreignFriendlyEnvironment?: SortOrder
    targetCandidateDescription?: SortOrder
    numberOfHires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobMinOrderByAggregateInput = {
    id?: SortOrder
    employerId?: SortOrder
    industryId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    requirements?: SortOrder
    requirementsJp?: SortOrder
    benefits?: SortOrder
    benefitsJp?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    salaryType?: SortOrder
    salaryDetails?: SortOrder
    country?: SortOrder
    prefecture?: SortOrder
    city?: SortOrder
    addressDetail?: SortOrder
    nearestStation?: SortOrder
    isRemote?: SortOrder
    remoteDetails?: SortOrder
    jobType?: SortOrder
    status?: SortOrder
    postedDate?: SortOrder
    expiryDate?: SortOrder
    externalApplicationUrl?: SortOrder
    workingHoursDescription?: SortOrder
    isFlexTime?: SortOrder
    coreTimeDescription?: SortOrder
    actualWorkingHoursPerDay?: SortOrder
    avgOvertimeHoursPerMonth?: SortOrder
    requiredJapaneseLevel?: SortOrder
    requiredEnglishLevel?: SortOrder
    otherLanguageRequirements?: SortOrder
    visaSupportAvailable?: SortOrder
    relocationSupportAvailable?: SortOrder
    housingSupportDetails?: SortOrder
    foreignFriendlyEnvironment?: SortOrder
    targetCandidateDescription?: SortOrder
    numberOfHires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobSumOrderByAggregateInput = {
    id?: SortOrder
    employerId?: SortOrder
    industryId?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    actualWorkingHoursPerDay?: SortOrder
    avgOvertimeHoursPerMonth?: SortOrder
    numberOfHires?: SortOrder
  }

  export type EnumSalaryTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSalaryTypeWithAggregatesFilter<$PrismaModel> | $Enums.SalaryType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSalaryTypeFilter<$PrismaModel>
    _max?: NestedEnumSalaryTypeFilter<$PrismaModel>
  }

  export type EnumJobTypeEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel>
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeEnumWithAggregatesFilter<$PrismaModel> | $Enums.JobTypeEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobTypeEnumFilter<$PrismaModel>
    _max?: NestedEnumJobTypeEnumFilter<$PrismaModel>
  }

  export type EnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type JobScalarRelationFilter = {
    is?: JobWhereInput
    isNot?: JobWhereInput
  }

  export type SkillScalarRelationFilter = {
    is?: SkillWhereInput
    isNot?: SkillWhereInput
  }

  export type JobSkillJobIdSkillIdCompoundUniqueInput = {
    jobId: number
    skillId: number
  }

  export type JobSkillCountOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    skillId?: SortOrder
    importanceLevel?: SortOrder
    requiredYears?: SortOrder
  }

  export type JobSkillAvgOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    skillId?: SortOrder
    importanceLevel?: SortOrder
    requiredYears?: SortOrder
  }

  export type JobSkillMaxOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    skillId?: SortOrder
    importanceLevel?: SortOrder
    requiredYears?: SortOrder
  }

  export type JobSkillMinOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    skillId?: SortOrder
    importanceLevel?: SortOrder
    requiredYears?: SortOrder
  }

  export type JobSkillSumOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    skillId?: SortOrder
    importanceLevel?: SortOrder
    requiredYears?: SortOrder
  }

  export type CandidateScalarRelationFilter = {
    is?: CandidateWhereInput
    isNot?: CandidateWhereInput
  }

  export type CandidateSkillCandidateIdSkillIdCompoundUniqueInput = {
    candidateId: number
    skillId: number
  }

  export type CandidateSkillCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    skillId?: SortOrder
    proficiencyLevel?: SortOrder
    experienceMonths?: SortOrder
  }

  export type CandidateSkillAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    skillId?: SortOrder
    experienceMonths?: SortOrder
  }

  export type CandidateSkillMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    skillId?: SortOrder
    proficiencyLevel?: SortOrder
    experienceMonths?: SortOrder
  }

  export type CandidateSkillMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    skillId?: SortOrder
    proficiencyLevel?: SortOrder
    experienceMonths?: SortOrder
  }

  export type CandidateSkillSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    skillId?: SortOrder
    experienceMonths?: SortOrder
  }

  export type EnumFileTypeEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FileTypeEnum | EnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFileTypeEnumNullableFilter<$PrismaModel> | $Enums.FileTypeEnum | null
  }

  export type CVCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileType?: SortOrder
    language?: SortOrder
    isPrimary?: SortOrder
    uploadedAt?: SortOrder
  }

  export type CVAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type CVMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileType?: SortOrder
    language?: SortOrder
    isPrimary?: SortOrder
    uploadedAt?: SortOrder
  }

  export type CVMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileType?: SortOrder
    language?: SortOrder
    isPrimary?: SortOrder
    uploadedAt?: SortOrder
  }

  export type CVSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type EnumFileTypeEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FileTypeEnum | EnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFileTypeEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.FileTypeEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFileTypeEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumFileTypeEnumNullableFilter<$PrismaModel>
  }

  export type EnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type CVScalarRelationFilter = {
    is?: CVWhereInput
    isNot?: CVWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type ApplicationCandidateIdJobIdCompoundUniqueInput = {
    candidateId: number
    jobId: number
  }

  export type ApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    jobId?: SortOrder
    cvId?: SortOrder
    coverLetter?: SortOrder
    applicationDate?: SortOrder
    status?: SortOrder
    statusMessage?: SortOrder
    currentStageIndex?: SortOrder
    internalNotes?: SortOrder
    candidateNotes?: SortOrder
    processLog?: SortOrder
    isBookmarked?: SortOrder
    matchScore?: SortOrder
    manualScore?: SortOrder
    offerDetails?: SortOrder
    lastUpdatedById?: SortOrder
  }

  export type ApplicationAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    jobId?: SortOrder
    cvId?: SortOrder
    currentStageIndex?: SortOrder
    matchScore?: SortOrder
    manualScore?: SortOrder
    lastUpdatedById?: SortOrder
  }

  export type ApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    jobId?: SortOrder
    cvId?: SortOrder
    coverLetter?: SortOrder
    applicationDate?: SortOrder
    status?: SortOrder
    statusMessage?: SortOrder
    currentStageIndex?: SortOrder
    internalNotes?: SortOrder
    candidateNotes?: SortOrder
    isBookmarked?: SortOrder
    matchScore?: SortOrder
    manualScore?: SortOrder
    lastUpdatedById?: SortOrder
  }

  export type ApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    jobId?: SortOrder
    cvId?: SortOrder
    coverLetter?: SortOrder
    applicationDate?: SortOrder
    status?: SortOrder
    statusMessage?: SortOrder
    currentStageIndex?: SortOrder
    internalNotes?: SortOrder
    candidateNotes?: SortOrder
    isBookmarked?: SortOrder
    matchScore?: SortOrder
    manualScore?: SortOrder
    lastUpdatedById?: SortOrder
  }

  export type ApplicationSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    jobId?: SortOrder
    cvId?: SortOrder
    currentStageIndex?: SortOrder
    matchScore?: SortOrder
    manualScore?: SortOrder
    lastUpdatedById?: SortOrder
  }

  export type EnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type EducationCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    universityName?: SortOrder
    facultyDepartment?: SortOrder
    degree?: SortOrder
    major?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    expectedGraduationDate?: SortOrder
    gpa?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    country?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EducationAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    gpa?: SortOrder
  }

  export type EducationMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    universityName?: SortOrder
    facultyDepartment?: SortOrder
    degree?: SortOrder
    major?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    expectedGraduationDate?: SortOrder
    gpa?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    country?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EducationMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    universityName?: SortOrder
    facultyDepartment?: SortOrder
    degree?: SortOrder
    major?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    expectedGraduationDate?: SortOrder
    gpa?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    country?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EducationSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    gpa?: SortOrder
  }

  export type EnumJobTypeEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJobTypeEnumNullableFilter<$PrismaModel> | $Enums.JobTypeEnum | null
  }

  export type WorkExperienceCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    companyName?: SortOrder
    jobTitle?: SortOrder
    employmentType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isCurrent?: SortOrder
    location?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    responsibilities?: SortOrder
    keyToolsTechnologies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkExperienceAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type WorkExperienceMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    companyName?: SortOrder
    jobTitle?: SortOrder
    employmentType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isCurrent?: SortOrder
    location?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkExperienceMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    companyName?: SortOrder
    jobTitle?: SortOrder
    employmentType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isCurrent?: SortOrder
    location?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkExperienceSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type EnumJobTypeEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJobTypeEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.JobTypeEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumJobTypeEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumJobTypeEnumNullableFilter<$PrismaModel>
  }

  export type ProjectCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrder
    url?: SortOrder
    purpose?: SortOrder
    purposeJp?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    bulletPoints?: SortOrder
    technologiesUsed?: SortOrder
    teamDetails?: SortOrder
    duration?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProjectAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type ProjectMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrder
    url?: SortOrder
    purpose?: SortOrder
    purposeJp?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    teamDetails?: SortOrder
    duration?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProjectMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    titleJp?: SortOrder
    url?: SortOrder
    purpose?: SortOrder
    purposeJp?: SortOrder
    description?: SortOrder
    descriptionJp?: SortOrder
    teamDetails?: SortOrder
    duration?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProjectSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type QualificationCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    name?: SortOrder
    issuingOrganization?: SortOrder
    issueDate?: SortOrder
    expiryDate?: SortOrder
    credentialId?: SortOrder
    credentialUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualificationAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type QualificationMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    name?: SortOrder
    issuingOrganization?: SortOrder
    issueDate?: SortOrder
    expiryDate?: SortOrder
    credentialId?: SortOrder
    credentialUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualificationMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    name?: SortOrder
    issuingOrganization?: SortOrder
    issueDate?: SortOrder
    expiryDate?: SortOrder
    credentialId?: SortOrder
    credentialUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualificationSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type AwardCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    issuer?: SortOrder
    date?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AwardAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type AwardMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    issuer?: SortOrder
    date?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AwardMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    title?: SortOrder
    issuer?: SortOrder
    date?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AwardSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type EnumMediaTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeFilter<$PrismaModel> | $Enums.MediaType
  }

  export type CandidateMediaCountOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    mediaType?: SortOrder
    title?: SortOrder
    url?: SortOrder
    thumbnailUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CandidateMediaAvgOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type CandidateMediaMaxOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    mediaType?: SortOrder
    title?: SortOrder
    url?: SortOrder
    thumbnailUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CandidateMediaMinOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
    mediaType?: SortOrder
    title?: SortOrder
    url?: SortOrder
    thumbnailUrl?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CandidateMediaSumOrderByAggregateInput = {
    id?: SortOrder
    candidateId?: SortOrder
  }

  export type EnumMediaTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeWithAggregatesFilter<$PrismaModel> | $Enums.MediaType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMediaTypeFilter<$PrismaModel>
    _max?: NestedEnumMediaTypeFilter<$PrismaModel>
  }

  export type EnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type JobDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    documentName?: SortOrder
    documentUrl?: SortOrder
    documentType?: SortOrder
    thumbnailUrl?: SortOrder
    uploadedAt?: SortOrder
  }

  export type JobDocumentAvgOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
  }

  export type JobDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    documentName?: SortOrder
    documentUrl?: SortOrder
    documentType?: SortOrder
    thumbnailUrl?: SortOrder
    uploadedAt?: SortOrder
  }

  export type JobDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    documentName?: SortOrder
    documentUrl?: SortOrder
    documentType?: SortOrder
    thumbnailUrl?: SortOrder
    uploadedAt?: SortOrder
  }

  export type JobDocumentSumOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
  }

  export type EnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type JobCreateNestedManyWithoutIndustryInput = {
    create?: XOR<JobCreateWithoutIndustryInput, JobUncheckedCreateWithoutIndustryInput> | JobCreateWithoutIndustryInput[] | JobUncheckedCreateWithoutIndustryInput[]
    connectOrCreate?: JobCreateOrConnectWithoutIndustryInput | JobCreateOrConnectWithoutIndustryInput[]
    createMany?: JobCreateManyIndustryInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type JobUncheckedCreateNestedManyWithoutIndustryInput = {
    create?: XOR<JobCreateWithoutIndustryInput, JobUncheckedCreateWithoutIndustryInput> | JobCreateWithoutIndustryInput[] | JobUncheckedCreateWithoutIndustryInput[]
    connectOrCreate?: JobCreateOrConnectWithoutIndustryInput | JobCreateOrConnectWithoutIndustryInput[]
    createMany?: JobCreateManyIndustryInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type JobUpdateManyWithoutIndustryNestedInput = {
    create?: XOR<JobCreateWithoutIndustryInput, JobUncheckedCreateWithoutIndustryInput> | JobCreateWithoutIndustryInput[] | JobUncheckedCreateWithoutIndustryInput[]
    connectOrCreate?: JobCreateOrConnectWithoutIndustryInput | JobCreateOrConnectWithoutIndustryInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutIndustryInput | JobUpsertWithWhereUniqueWithoutIndustryInput[]
    createMany?: JobCreateManyIndustryInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutIndustryInput | JobUpdateWithWhereUniqueWithoutIndustryInput[]
    updateMany?: JobUpdateManyWithWhereWithoutIndustryInput | JobUpdateManyWithWhereWithoutIndustryInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type JobUncheckedUpdateManyWithoutIndustryNestedInput = {
    create?: XOR<JobCreateWithoutIndustryInput, JobUncheckedCreateWithoutIndustryInput> | JobCreateWithoutIndustryInput[] | JobUncheckedCreateWithoutIndustryInput[]
    connectOrCreate?: JobCreateOrConnectWithoutIndustryInput | JobCreateOrConnectWithoutIndustryInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutIndustryInput | JobUpsertWithWhereUniqueWithoutIndustryInput[]
    createMany?: JobCreateManyIndustryInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutIndustryInput | JobUpdateWithWhereUniqueWithoutIndustryInput[]
    updateMany?: JobUpdateManyWithWhereWithoutIndustryInput | JobUpdateManyWithWhereWithoutIndustryInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type JobSkillCreateNestedManyWithoutSkillInput = {
    create?: XOR<JobSkillCreateWithoutSkillInput, JobSkillUncheckedCreateWithoutSkillInput> | JobSkillCreateWithoutSkillInput[] | JobSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutSkillInput | JobSkillCreateOrConnectWithoutSkillInput[]
    createMany?: JobSkillCreateManySkillInputEnvelope
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
  }

  export type CandidateSkillCreateNestedManyWithoutSkillInput = {
    create?: XOR<CandidateSkillCreateWithoutSkillInput, CandidateSkillUncheckedCreateWithoutSkillInput> | CandidateSkillCreateWithoutSkillInput[] | CandidateSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutSkillInput | CandidateSkillCreateOrConnectWithoutSkillInput[]
    createMany?: CandidateSkillCreateManySkillInputEnvelope
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
  }

  export type JobSkillUncheckedCreateNestedManyWithoutSkillInput = {
    create?: XOR<JobSkillCreateWithoutSkillInput, JobSkillUncheckedCreateWithoutSkillInput> | JobSkillCreateWithoutSkillInput[] | JobSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutSkillInput | JobSkillCreateOrConnectWithoutSkillInput[]
    createMany?: JobSkillCreateManySkillInputEnvelope
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
  }

  export type CandidateSkillUncheckedCreateNestedManyWithoutSkillInput = {
    create?: XOR<CandidateSkillCreateWithoutSkillInput, CandidateSkillUncheckedCreateWithoutSkillInput> | CandidateSkillCreateWithoutSkillInput[] | CandidateSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutSkillInput | CandidateSkillCreateOrConnectWithoutSkillInput[]
    createMany?: CandidateSkillCreateManySkillInputEnvelope
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
  }

  export type NullableEnumSkillCategoryFieldUpdateOperationsInput = {
    set?: $Enums.SkillCategory | null
  }

  export type JobSkillUpdateManyWithoutSkillNestedInput = {
    create?: XOR<JobSkillCreateWithoutSkillInput, JobSkillUncheckedCreateWithoutSkillInput> | JobSkillCreateWithoutSkillInput[] | JobSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutSkillInput | JobSkillCreateOrConnectWithoutSkillInput[]
    upsert?: JobSkillUpsertWithWhereUniqueWithoutSkillInput | JobSkillUpsertWithWhereUniqueWithoutSkillInput[]
    createMany?: JobSkillCreateManySkillInputEnvelope
    set?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    disconnect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    delete?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    update?: JobSkillUpdateWithWhereUniqueWithoutSkillInput | JobSkillUpdateWithWhereUniqueWithoutSkillInput[]
    updateMany?: JobSkillUpdateManyWithWhereWithoutSkillInput | JobSkillUpdateManyWithWhereWithoutSkillInput[]
    deleteMany?: JobSkillScalarWhereInput | JobSkillScalarWhereInput[]
  }

  export type CandidateSkillUpdateManyWithoutSkillNestedInput = {
    create?: XOR<CandidateSkillCreateWithoutSkillInput, CandidateSkillUncheckedCreateWithoutSkillInput> | CandidateSkillCreateWithoutSkillInput[] | CandidateSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutSkillInput | CandidateSkillCreateOrConnectWithoutSkillInput[]
    upsert?: CandidateSkillUpsertWithWhereUniqueWithoutSkillInput | CandidateSkillUpsertWithWhereUniqueWithoutSkillInput[]
    createMany?: CandidateSkillCreateManySkillInputEnvelope
    set?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    disconnect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    delete?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    update?: CandidateSkillUpdateWithWhereUniqueWithoutSkillInput | CandidateSkillUpdateWithWhereUniqueWithoutSkillInput[]
    updateMany?: CandidateSkillUpdateManyWithWhereWithoutSkillInput | CandidateSkillUpdateManyWithWhereWithoutSkillInput[]
    deleteMany?: CandidateSkillScalarWhereInput | CandidateSkillScalarWhereInput[]
  }

  export type JobSkillUncheckedUpdateManyWithoutSkillNestedInput = {
    create?: XOR<JobSkillCreateWithoutSkillInput, JobSkillUncheckedCreateWithoutSkillInput> | JobSkillCreateWithoutSkillInput[] | JobSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutSkillInput | JobSkillCreateOrConnectWithoutSkillInput[]
    upsert?: JobSkillUpsertWithWhereUniqueWithoutSkillInput | JobSkillUpsertWithWhereUniqueWithoutSkillInput[]
    createMany?: JobSkillCreateManySkillInputEnvelope
    set?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    disconnect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    delete?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    update?: JobSkillUpdateWithWhereUniqueWithoutSkillInput | JobSkillUpdateWithWhereUniqueWithoutSkillInput[]
    updateMany?: JobSkillUpdateManyWithWhereWithoutSkillInput | JobSkillUpdateManyWithWhereWithoutSkillInput[]
    deleteMany?: JobSkillScalarWhereInput | JobSkillScalarWhereInput[]
  }

  export type CandidateSkillUncheckedUpdateManyWithoutSkillNestedInput = {
    create?: XOR<CandidateSkillCreateWithoutSkillInput, CandidateSkillUncheckedCreateWithoutSkillInput> | CandidateSkillCreateWithoutSkillInput[] | CandidateSkillUncheckedCreateWithoutSkillInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutSkillInput | CandidateSkillCreateOrConnectWithoutSkillInput[]
    upsert?: CandidateSkillUpsertWithWhereUniqueWithoutSkillInput | CandidateSkillUpsertWithWhereUniqueWithoutSkillInput[]
    createMany?: CandidateSkillCreateManySkillInputEnvelope
    set?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    disconnect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    delete?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    update?: CandidateSkillUpdateWithWhereUniqueWithoutSkillInput | CandidateSkillUpdateWithWhereUniqueWithoutSkillInput[]
    updateMany?: CandidateSkillUpdateManyWithWhereWithoutSkillInput | CandidateSkillUpdateManyWithWhereWithoutSkillInput[]
    deleteMany?: CandidateSkillScalarWhereInput | CandidateSkillScalarWhereInput[]
  }

  export type EmployerCreateNestedOneWithoutUserInput = {
    create?: XOR<EmployerCreateWithoutUserInput, EmployerUncheckedCreateWithoutUserInput>
    connectOrCreate?: EmployerCreateOrConnectWithoutUserInput
    connect?: EmployerWhereUniqueInput
  }

  export type CandidateCreateNestedOneWithoutUserInput = {
    create?: XOR<CandidateCreateWithoutUserInput, CandidateUncheckedCreateWithoutUserInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutUserInput
    connect?: CandidateWhereUniqueInput
  }

  export type ApplicationCreateNestedManyWithoutLastUpdatedByInput = {
    create?: XOR<ApplicationCreateWithoutLastUpdatedByInput, ApplicationUncheckedCreateWithoutLastUpdatedByInput> | ApplicationCreateWithoutLastUpdatedByInput[] | ApplicationUncheckedCreateWithoutLastUpdatedByInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutLastUpdatedByInput | ApplicationCreateOrConnectWithoutLastUpdatedByInput[]
    createMany?: ApplicationCreateManyLastUpdatedByInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type EmployerUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<EmployerCreateWithoutUserInput, EmployerUncheckedCreateWithoutUserInput>
    connectOrCreate?: EmployerCreateOrConnectWithoutUserInput
    connect?: EmployerWhereUniqueInput
  }

  export type CandidateUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<CandidateCreateWithoutUserInput, CandidateUncheckedCreateWithoutUserInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutUserInput
    connect?: CandidateWhereUniqueInput
  }

  export type ApplicationUncheckedCreateNestedManyWithoutLastUpdatedByInput = {
    create?: XOR<ApplicationCreateWithoutLastUpdatedByInput, ApplicationUncheckedCreateWithoutLastUpdatedByInput> | ApplicationCreateWithoutLastUpdatedByInput[] | ApplicationUncheckedCreateWithoutLastUpdatedByInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutLastUpdatedByInput | ApplicationCreateOrConnectWithoutLastUpdatedByInput[]
    createMany?: ApplicationCreateManyLastUpdatedByInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type EnumUserTypeFieldUpdateOperationsInput = {
    set?: $Enums.UserType
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EmployerUpdateOneWithoutUserNestedInput = {
    create?: XOR<EmployerCreateWithoutUserInput, EmployerUncheckedCreateWithoutUserInput>
    connectOrCreate?: EmployerCreateOrConnectWithoutUserInput
    upsert?: EmployerUpsertWithoutUserInput
    disconnect?: EmployerWhereInput | boolean
    delete?: EmployerWhereInput | boolean
    connect?: EmployerWhereUniqueInput
    update?: XOR<XOR<EmployerUpdateToOneWithWhereWithoutUserInput, EmployerUpdateWithoutUserInput>, EmployerUncheckedUpdateWithoutUserInput>
  }

  export type CandidateUpdateOneWithoutUserNestedInput = {
    create?: XOR<CandidateCreateWithoutUserInput, CandidateUncheckedCreateWithoutUserInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutUserInput
    upsert?: CandidateUpsertWithoutUserInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutUserInput, CandidateUpdateWithoutUserInput>, CandidateUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUpdateManyWithoutLastUpdatedByNestedInput = {
    create?: XOR<ApplicationCreateWithoutLastUpdatedByInput, ApplicationUncheckedCreateWithoutLastUpdatedByInput> | ApplicationCreateWithoutLastUpdatedByInput[] | ApplicationUncheckedCreateWithoutLastUpdatedByInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutLastUpdatedByInput | ApplicationCreateOrConnectWithoutLastUpdatedByInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutLastUpdatedByInput | ApplicationUpsertWithWhereUniqueWithoutLastUpdatedByInput[]
    createMany?: ApplicationCreateManyLastUpdatedByInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutLastUpdatedByInput | ApplicationUpdateWithWhereUniqueWithoutLastUpdatedByInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutLastUpdatedByInput | ApplicationUpdateManyWithWhereWithoutLastUpdatedByInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type EmployerUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<EmployerCreateWithoutUserInput, EmployerUncheckedCreateWithoutUserInput>
    connectOrCreate?: EmployerCreateOrConnectWithoutUserInput
    upsert?: EmployerUpsertWithoutUserInput
    disconnect?: EmployerWhereInput | boolean
    delete?: EmployerWhereInput | boolean
    connect?: EmployerWhereUniqueInput
    update?: XOR<XOR<EmployerUpdateToOneWithWhereWithoutUserInput, EmployerUpdateWithoutUserInput>, EmployerUncheckedUpdateWithoutUserInput>
  }

  export type CandidateUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<CandidateCreateWithoutUserInput, CandidateUncheckedCreateWithoutUserInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutUserInput
    upsert?: CandidateUpsertWithoutUserInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutUserInput, CandidateUpdateWithoutUserInput>, CandidateUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUncheckedUpdateManyWithoutLastUpdatedByNestedInput = {
    create?: XOR<ApplicationCreateWithoutLastUpdatedByInput, ApplicationUncheckedCreateWithoutLastUpdatedByInput> | ApplicationCreateWithoutLastUpdatedByInput[] | ApplicationUncheckedCreateWithoutLastUpdatedByInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutLastUpdatedByInput | ApplicationCreateOrConnectWithoutLastUpdatedByInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutLastUpdatedByInput | ApplicationUpsertWithWhereUniqueWithoutLastUpdatedByInput[]
    createMany?: ApplicationCreateManyLastUpdatedByInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutLastUpdatedByInput | ApplicationUpdateWithWhereUniqueWithoutLastUpdatedByInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutLastUpdatedByInput | ApplicationUpdateManyWithWhereWithoutLastUpdatedByInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserCreateNestedOneWithoutEmployerInput = {
    create?: XOR<UserCreateWithoutEmployerInput, UserUncheckedCreateWithoutEmployerInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmployerInput
    connect?: UserWhereUniqueInput
  }

  export type JobCreateNestedManyWithoutEmployerInput = {
    create?: XOR<JobCreateWithoutEmployerInput, JobUncheckedCreateWithoutEmployerInput> | JobCreateWithoutEmployerInput[] | JobUncheckedCreateWithoutEmployerInput[]
    connectOrCreate?: JobCreateOrConnectWithoutEmployerInput | JobCreateOrConnectWithoutEmployerInput[]
    createMany?: JobCreateManyEmployerInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type JobUncheckedCreateNestedManyWithoutEmployerInput = {
    create?: XOR<JobCreateWithoutEmployerInput, JobUncheckedCreateWithoutEmployerInput> | JobCreateWithoutEmployerInput[] | JobUncheckedCreateWithoutEmployerInput[]
    connectOrCreate?: JobCreateOrConnectWithoutEmployerInput | JobCreateOrConnectWithoutEmployerInput[]
    createMany?: JobCreateManyEmployerInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableEnumCompanySizeTypeFieldUpdateOperationsInput = {
    set?: $Enums.CompanySizeType | null
  }

  export type UserUpdateOneRequiredWithoutEmployerNestedInput = {
    create?: XOR<UserCreateWithoutEmployerInput, UserUncheckedCreateWithoutEmployerInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmployerInput
    upsert?: UserUpsertWithoutEmployerInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEmployerInput, UserUpdateWithoutEmployerInput>, UserUncheckedUpdateWithoutEmployerInput>
  }

  export type JobUpdateManyWithoutEmployerNestedInput = {
    create?: XOR<JobCreateWithoutEmployerInput, JobUncheckedCreateWithoutEmployerInput> | JobCreateWithoutEmployerInput[] | JobUncheckedCreateWithoutEmployerInput[]
    connectOrCreate?: JobCreateOrConnectWithoutEmployerInput | JobCreateOrConnectWithoutEmployerInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutEmployerInput | JobUpsertWithWhereUniqueWithoutEmployerInput[]
    createMany?: JobCreateManyEmployerInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutEmployerInput | JobUpdateWithWhereUniqueWithoutEmployerInput[]
    updateMany?: JobUpdateManyWithWhereWithoutEmployerInput | JobUpdateManyWithWhereWithoutEmployerInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type JobUncheckedUpdateManyWithoutEmployerNestedInput = {
    create?: XOR<JobCreateWithoutEmployerInput, JobUncheckedCreateWithoutEmployerInput> | JobCreateWithoutEmployerInput[] | JobUncheckedCreateWithoutEmployerInput[]
    connectOrCreate?: JobCreateOrConnectWithoutEmployerInput | JobCreateOrConnectWithoutEmployerInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutEmployerInput | JobUpsertWithWhereUniqueWithoutEmployerInput[]
    createMany?: JobCreateManyEmployerInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutEmployerInput | JobUpdateWithWhereUniqueWithoutEmployerInput[]
    updateMany?: JobUpdateManyWithWhereWithoutEmployerInput | JobUpdateManyWithWhereWithoutEmployerInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type CandidateCreatekeyStrengthsInput = {
    set: string[]
  }

  export type CandidateCreatepreferredJobTypesInput = {
    set: $Enums.JobTypeEnum[]
  }

  export type CandidateCreatepreferredWorkLocationsInput = {
    set: string[]
  }

  export type CandidateCreatejobExpectationsInput = {
    set: string[]
  }

  export type CandidateCreateinterestsTagsInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutCandidateInput = {
    create?: XOR<UserCreateWithoutCandidateInput, UserUncheckedCreateWithoutCandidateInput>
    connectOrCreate?: UserCreateOrConnectWithoutCandidateInput
    connect?: UserWhereUniqueInput
  }

  export type CandidateSkillCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CandidateSkillCreateWithoutCandidateInput, CandidateSkillUncheckedCreateWithoutCandidateInput> | CandidateSkillCreateWithoutCandidateInput[] | CandidateSkillUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutCandidateInput | CandidateSkillCreateOrConnectWithoutCandidateInput[]
    createMany?: CandidateSkillCreateManyCandidateInputEnvelope
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
  }

  export type CVCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CVCreateWithoutCandidateInput, CVUncheckedCreateWithoutCandidateInput> | CVCreateWithoutCandidateInput[] | CVUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CVCreateOrConnectWithoutCandidateInput | CVCreateOrConnectWithoutCandidateInput[]
    createMany?: CVCreateManyCandidateInputEnvelope
    connect?: CVWhereUniqueInput | CVWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EducationCreateNestedManyWithoutCandidateInput = {
    create?: XOR<EducationCreateWithoutCandidateInput, EducationUncheckedCreateWithoutCandidateInput> | EducationCreateWithoutCandidateInput[] | EducationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: EducationCreateOrConnectWithoutCandidateInput | EducationCreateOrConnectWithoutCandidateInput[]
    createMany?: EducationCreateManyCandidateInputEnvelope
    connect?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
  }

  export type WorkExperienceCreateNestedManyWithoutCandidateInput = {
    create?: XOR<WorkExperienceCreateWithoutCandidateInput, WorkExperienceUncheckedCreateWithoutCandidateInput> | WorkExperienceCreateWithoutCandidateInput[] | WorkExperienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: WorkExperienceCreateOrConnectWithoutCandidateInput | WorkExperienceCreateOrConnectWithoutCandidateInput[]
    createMany?: WorkExperienceCreateManyCandidateInputEnvelope
    connect?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
  }

  export type ProjectCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ProjectCreateWithoutCandidateInput, ProjectUncheckedCreateWithoutCandidateInput> | ProjectCreateWithoutCandidateInput[] | ProjectUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCandidateInput | ProjectCreateOrConnectWithoutCandidateInput[]
    createMany?: ProjectCreateManyCandidateInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type QualificationCreateNestedManyWithoutCandidateInput = {
    create?: XOR<QualificationCreateWithoutCandidateInput, QualificationUncheckedCreateWithoutCandidateInput> | QualificationCreateWithoutCandidateInput[] | QualificationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: QualificationCreateOrConnectWithoutCandidateInput | QualificationCreateOrConnectWithoutCandidateInput[]
    createMany?: QualificationCreateManyCandidateInputEnvelope
    connect?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
  }

  export type AwardCreateNestedManyWithoutCandidateInput = {
    create?: XOR<AwardCreateWithoutCandidateInput, AwardUncheckedCreateWithoutCandidateInput> | AwardCreateWithoutCandidateInput[] | AwardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: AwardCreateOrConnectWithoutCandidateInput | AwardCreateOrConnectWithoutCandidateInput[]
    createMany?: AwardCreateManyCandidateInputEnvelope
    connect?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
  }

  export type CandidateMediaCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CandidateMediaCreateWithoutCandidateInput, CandidateMediaUncheckedCreateWithoutCandidateInput> | CandidateMediaCreateWithoutCandidateInput[] | CandidateMediaUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateMediaCreateOrConnectWithoutCandidateInput | CandidateMediaCreateOrConnectWithoutCandidateInput[]
    createMany?: CandidateMediaCreateManyCandidateInputEnvelope
    connect?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
  }

  export type CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CandidateSkillCreateWithoutCandidateInput, CandidateSkillUncheckedCreateWithoutCandidateInput> | CandidateSkillCreateWithoutCandidateInput[] | CandidateSkillUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutCandidateInput | CandidateSkillCreateOrConnectWithoutCandidateInput[]
    createMany?: CandidateSkillCreateManyCandidateInputEnvelope
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
  }

  export type CVUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CVCreateWithoutCandidateInput, CVUncheckedCreateWithoutCandidateInput> | CVCreateWithoutCandidateInput[] | CVUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CVCreateOrConnectWithoutCandidateInput | CVCreateOrConnectWithoutCandidateInput[]
    createMany?: CVCreateManyCandidateInputEnvelope
    connect?: CVWhereUniqueInput | CVWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EducationUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<EducationCreateWithoutCandidateInput, EducationUncheckedCreateWithoutCandidateInput> | EducationCreateWithoutCandidateInput[] | EducationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: EducationCreateOrConnectWithoutCandidateInput | EducationCreateOrConnectWithoutCandidateInput[]
    createMany?: EducationCreateManyCandidateInputEnvelope
    connect?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
  }

  export type WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<WorkExperienceCreateWithoutCandidateInput, WorkExperienceUncheckedCreateWithoutCandidateInput> | WorkExperienceCreateWithoutCandidateInput[] | WorkExperienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: WorkExperienceCreateOrConnectWithoutCandidateInput | WorkExperienceCreateOrConnectWithoutCandidateInput[]
    createMany?: WorkExperienceCreateManyCandidateInputEnvelope
    connect?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ProjectCreateWithoutCandidateInput, ProjectUncheckedCreateWithoutCandidateInput> | ProjectCreateWithoutCandidateInput[] | ProjectUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCandidateInput | ProjectCreateOrConnectWithoutCandidateInput[]
    createMany?: ProjectCreateManyCandidateInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type QualificationUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<QualificationCreateWithoutCandidateInput, QualificationUncheckedCreateWithoutCandidateInput> | QualificationCreateWithoutCandidateInput[] | QualificationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: QualificationCreateOrConnectWithoutCandidateInput | QualificationCreateOrConnectWithoutCandidateInput[]
    createMany?: QualificationCreateManyCandidateInputEnvelope
    connect?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
  }

  export type AwardUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<AwardCreateWithoutCandidateInput, AwardUncheckedCreateWithoutCandidateInput> | AwardCreateWithoutCandidateInput[] | AwardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: AwardCreateOrConnectWithoutCandidateInput | AwardCreateOrConnectWithoutCandidateInput[]
    createMany?: AwardCreateManyCandidateInputEnvelope
    connect?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
  }

  export type CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CandidateMediaCreateWithoutCandidateInput, CandidateMediaUncheckedCreateWithoutCandidateInput> | CandidateMediaCreateWithoutCandidateInput[] | CandidateMediaUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateMediaCreateOrConnectWithoutCandidateInput | CandidateMediaCreateOrConnectWithoutCandidateInput[]
    createMany?: CandidateMediaCreateManyCandidateInputEnvelope
    connect?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
  }

  export type NullableEnumGenderTypeFieldUpdateOperationsInput = {
    set?: $Enums.GenderType | null
  }

  export type CandidateUpdatekeyStrengthsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableEnumSalaryTypeFieldUpdateOperationsInput = {
    set?: $Enums.SalaryType | null
  }

  export type CandidateUpdatepreferredJobTypesInput = {
    set?: $Enums.JobTypeEnum[]
    push?: $Enums.JobTypeEnum | $Enums.JobTypeEnum[]
  }

  export type CandidateUpdatepreferredWorkLocationsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CandidateUpdatejobExpectationsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CandidateUpdateinterestsTagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput = {
    set?: $Enums.JapaneseProficiencyLevel | null
  }

  export type NullableEnumProficiencyLevelFieldUpdateOperationsInput = {
    set?: $Enums.ProficiencyLevel | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutCandidateNestedInput = {
    create?: XOR<UserCreateWithoutCandidateInput, UserUncheckedCreateWithoutCandidateInput>
    connectOrCreate?: UserCreateOrConnectWithoutCandidateInput
    upsert?: UserUpsertWithoutCandidateInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCandidateInput, UserUpdateWithoutCandidateInput>, UserUncheckedUpdateWithoutCandidateInput>
  }

  export type CandidateSkillUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CandidateSkillCreateWithoutCandidateInput, CandidateSkillUncheckedCreateWithoutCandidateInput> | CandidateSkillCreateWithoutCandidateInput[] | CandidateSkillUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutCandidateInput | CandidateSkillCreateOrConnectWithoutCandidateInput[]
    upsert?: CandidateSkillUpsertWithWhereUniqueWithoutCandidateInput | CandidateSkillUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CandidateSkillCreateManyCandidateInputEnvelope
    set?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    disconnect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    delete?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    update?: CandidateSkillUpdateWithWhereUniqueWithoutCandidateInput | CandidateSkillUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CandidateSkillUpdateManyWithWhereWithoutCandidateInput | CandidateSkillUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CandidateSkillScalarWhereInput | CandidateSkillScalarWhereInput[]
  }

  export type CVUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CVCreateWithoutCandidateInput, CVUncheckedCreateWithoutCandidateInput> | CVCreateWithoutCandidateInput[] | CVUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CVCreateOrConnectWithoutCandidateInput | CVCreateOrConnectWithoutCandidateInput[]
    upsert?: CVUpsertWithWhereUniqueWithoutCandidateInput | CVUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CVCreateManyCandidateInputEnvelope
    set?: CVWhereUniqueInput | CVWhereUniqueInput[]
    disconnect?: CVWhereUniqueInput | CVWhereUniqueInput[]
    delete?: CVWhereUniqueInput | CVWhereUniqueInput[]
    connect?: CVWhereUniqueInput | CVWhereUniqueInput[]
    update?: CVUpdateWithWhereUniqueWithoutCandidateInput | CVUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CVUpdateManyWithWhereWithoutCandidateInput | CVUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CVScalarWhereInput | CVScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutCandidateInput | ApplicationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutCandidateInput | ApplicationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutCandidateInput | ApplicationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EducationUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<EducationCreateWithoutCandidateInput, EducationUncheckedCreateWithoutCandidateInput> | EducationCreateWithoutCandidateInput[] | EducationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: EducationCreateOrConnectWithoutCandidateInput | EducationCreateOrConnectWithoutCandidateInput[]
    upsert?: EducationUpsertWithWhereUniqueWithoutCandidateInput | EducationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: EducationCreateManyCandidateInputEnvelope
    set?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    disconnect?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    delete?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    connect?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    update?: EducationUpdateWithWhereUniqueWithoutCandidateInput | EducationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: EducationUpdateManyWithWhereWithoutCandidateInput | EducationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: EducationScalarWhereInput | EducationScalarWhereInput[]
  }

  export type WorkExperienceUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<WorkExperienceCreateWithoutCandidateInput, WorkExperienceUncheckedCreateWithoutCandidateInput> | WorkExperienceCreateWithoutCandidateInput[] | WorkExperienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: WorkExperienceCreateOrConnectWithoutCandidateInput | WorkExperienceCreateOrConnectWithoutCandidateInput[]
    upsert?: WorkExperienceUpsertWithWhereUniqueWithoutCandidateInput | WorkExperienceUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: WorkExperienceCreateManyCandidateInputEnvelope
    set?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    disconnect?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    delete?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    connect?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    update?: WorkExperienceUpdateWithWhereUniqueWithoutCandidateInput | WorkExperienceUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: WorkExperienceUpdateManyWithWhereWithoutCandidateInput | WorkExperienceUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: WorkExperienceScalarWhereInput | WorkExperienceScalarWhereInput[]
  }

  export type ProjectUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ProjectCreateWithoutCandidateInput, ProjectUncheckedCreateWithoutCandidateInput> | ProjectCreateWithoutCandidateInput[] | ProjectUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCandidateInput | ProjectCreateOrConnectWithoutCandidateInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutCandidateInput | ProjectUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ProjectCreateManyCandidateInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutCandidateInput | ProjectUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutCandidateInput | ProjectUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type QualificationUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<QualificationCreateWithoutCandidateInput, QualificationUncheckedCreateWithoutCandidateInput> | QualificationCreateWithoutCandidateInput[] | QualificationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: QualificationCreateOrConnectWithoutCandidateInput | QualificationCreateOrConnectWithoutCandidateInput[]
    upsert?: QualificationUpsertWithWhereUniqueWithoutCandidateInput | QualificationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: QualificationCreateManyCandidateInputEnvelope
    set?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    disconnect?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    delete?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    connect?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    update?: QualificationUpdateWithWhereUniqueWithoutCandidateInput | QualificationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: QualificationUpdateManyWithWhereWithoutCandidateInput | QualificationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: QualificationScalarWhereInput | QualificationScalarWhereInput[]
  }

  export type AwardUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<AwardCreateWithoutCandidateInput, AwardUncheckedCreateWithoutCandidateInput> | AwardCreateWithoutCandidateInput[] | AwardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: AwardCreateOrConnectWithoutCandidateInput | AwardCreateOrConnectWithoutCandidateInput[]
    upsert?: AwardUpsertWithWhereUniqueWithoutCandidateInput | AwardUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: AwardCreateManyCandidateInputEnvelope
    set?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    disconnect?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    delete?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    connect?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    update?: AwardUpdateWithWhereUniqueWithoutCandidateInput | AwardUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: AwardUpdateManyWithWhereWithoutCandidateInput | AwardUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: AwardScalarWhereInput | AwardScalarWhereInput[]
  }

  export type CandidateMediaUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CandidateMediaCreateWithoutCandidateInput, CandidateMediaUncheckedCreateWithoutCandidateInput> | CandidateMediaCreateWithoutCandidateInput[] | CandidateMediaUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateMediaCreateOrConnectWithoutCandidateInput | CandidateMediaCreateOrConnectWithoutCandidateInput[]
    upsert?: CandidateMediaUpsertWithWhereUniqueWithoutCandidateInput | CandidateMediaUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CandidateMediaCreateManyCandidateInputEnvelope
    set?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    disconnect?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    delete?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    connect?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    update?: CandidateMediaUpdateWithWhereUniqueWithoutCandidateInput | CandidateMediaUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CandidateMediaUpdateManyWithWhereWithoutCandidateInput | CandidateMediaUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CandidateMediaScalarWhereInput | CandidateMediaScalarWhereInput[]
  }

  export type CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CandidateSkillCreateWithoutCandidateInput, CandidateSkillUncheckedCreateWithoutCandidateInput> | CandidateSkillCreateWithoutCandidateInput[] | CandidateSkillUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateSkillCreateOrConnectWithoutCandidateInput | CandidateSkillCreateOrConnectWithoutCandidateInput[]
    upsert?: CandidateSkillUpsertWithWhereUniqueWithoutCandidateInput | CandidateSkillUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CandidateSkillCreateManyCandidateInputEnvelope
    set?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    disconnect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    delete?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    connect?: CandidateSkillWhereUniqueInput | CandidateSkillWhereUniqueInput[]
    update?: CandidateSkillUpdateWithWhereUniqueWithoutCandidateInput | CandidateSkillUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CandidateSkillUpdateManyWithWhereWithoutCandidateInput | CandidateSkillUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CandidateSkillScalarWhereInput | CandidateSkillScalarWhereInput[]
  }

  export type CVUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CVCreateWithoutCandidateInput, CVUncheckedCreateWithoutCandidateInput> | CVCreateWithoutCandidateInput[] | CVUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CVCreateOrConnectWithoutCandidateInput | CVCreateOrConnectWithoutCandidateInput[]
    upsert?: CVUpsertWithWhereUniqueWithoutCandidateInput | CVUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CVCreateManyCandidateInputEnvelope
    set?: CVWhereUniqueInput | CVWhereUniqueInput[]
    disconnect?: CVWhereUniqueInput | CVWhereUniqueInput[]
    delete?: CVWhereUniqueInput | CVWhereUniqueInput[]
    connect?: CVWhereUniqueInput | CVWhereUniqueInput[]
    update?: CVUpdateWithWhereUniqueWithoutCandidateInput | CVUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CVUpdateManyWithWhereWithoutCandidateInput | CVUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CVScalarWhereInput | CVScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutCandidateInput | ApplicationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutCandidateInput | ApplicationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutCandidateInput | ApplicationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EducationUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<EducationCreateWithoutCandidateInput, EducationUncheckedCreateWithoutCandidateInput> | EducationCreateWithoutCandidateInput[] | EducationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: EducationCreateOrConnectWithoutCandidateInput | EducationCreateOrConnectWithoutCandidateInput[]
    upsert?: EducationUpsertWithWhereUniqueWithoutCandidateInput | EducationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: EducationCreateManyCandidateInputEnvelope
    set?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    disconnect?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    delete?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    connect?: EducationWhereUniqueInput | EducationWhereUniqueInput[]
    update?: EducationUpdateWithWhereUniqueWithoutCandidateInput | EducationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: EducationUpdateManyWithWhereWithoutCandidateInput | EducationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: EducationScalarWhereInput | EducationScalarWhereInput[]
  }

  export type WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<WorkExperienceCreateWithoutCandidateInput, WorkExperienceUncheckedCreateWithoutCandidateInput> | WorkExperienceCreateWithoutCandidateInput[] | WorkExperienceUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: WorkExperienceCreateOrConnectWithoutCandidateInput | WorkExperienceCreateOrConnectWithoutCandidateInput[]
    upsert?: WorkExperienceUpsertWithWhereUniqueWithoutCandidateInput | WorkExperienceUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: WorkExperienceCreateManyCandidateInputEnvelope
    set?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    disconnect?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    delete?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    connect?: WorkExperienceWhereUniqueInput | WorkExperienceWhereUniqueInput[]
    update?: WorkExperienceUpdateWithWhereUniqueWithoutCandidateInput | WorkExperienceUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: WorkExperienceUpdateManyWithWhereWithoutCandidateInput | WorkExperienceUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: WorkExperienceScalarWhereInput | WorkExperienceScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ProjectCreateWithoutCandidateInput, ProjectUncheckedCreateWithoutCandidateInput> | ProjectCreateWithoutCandidateInput[] | ProjectUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCandidateInput | ProjectCreateOrConnectWithoutCandidateInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutCandidateInput | ProjectUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ProjectCreateManyCandidateInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutCandidateInput | ProjectUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutCandidateInput | ProjectUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type QualificationUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<QualificationCreateWithoutCandidateInput, QualificationUncheckedCreateWithoutCandidateInput> | QualificationCreateWithoutCandidateInput[] | QualificationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: QualificationCreateOrConnectWithoutCandidateInput | QualificationCreateOrConnectWithoutCandidateInput[]
    upsert?: QualificationUpsertWithWhereUniqueWithoutCandidateInput | QualificationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: QualificationCreateManyCandidateInputEnvelope
    set?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    disconnect?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    delete?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    connect?: QualificationWhereUniqueInput | QualificationWhereUniqueInput[]
    update?: QualificationUpdateWithWhereUniqueWithoutCandidateInput | QualificationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: QualificationUpdateManyWithWhereWithoutCandidateInput | QualificationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: QualificationScalarWhereInput | QualificationScalarWhereInput[]
  }

  export type AwardUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<AwardCreateWithoutCandidateInput, AwardUncheckedCreateWithoutCandidateInput> | AwardCreateWithoutCandidateInput[] | AwardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: AwardCreateOrConnectWithoutCandidateInput | AwardCreateOrConnectWithoutCandidateInput[]
    upsert?: AwardUpsertWithWhereUniqueWithoutCandidateInput | AwardUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: AwardCreateManyCandidateInputEnvelope
    set?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    disconnect?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    delete?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    connect?: AwardWhereUniqueInput | AwardWhereUniqueInput[]
    update?: AwardUpdateWithWhereUniqueWithoutCandidateInput | AwardUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: AwardUpdateManyWithWhereWithoutCandidateInput | AwardUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: AwardScalarWhereInput | AwardScalarWhereInput[]
  }

  export type CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CandidateMediaCreateWithoutCandidateInput, CandidateMediaUncheckedCreateWithoutCandidateInput> | CandidateMediaCreateWithoutCandidateInput[] | CandidateMediaUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CandidateMediaCreateOrConnectWithoutCandidateInput | CandidateMediaCreateOrConnectWithoutCandidateInput[]
    upsert?: CandidateMediaUpsertWithWhereUniqueWithoutCandidateInput | CandidateMediaUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CandidateMediaCreateManyCandidateInputEnvelope
    set?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    disconnect?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    delete?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    connect?: CandidateMediaWhereUniqueInput | CandidateMediaWhereUniqueInput[]
    update?: CandidateMediaUpdateWithWhereUniqueWithoutCandidateInput | CandidateMediaUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CandidateMediaUpdateManyWithWhereWithoutCandidateInput | CandidateMediaUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CandidateMediaScalarWhereInput | CandidateMediaScalarWhereInput[]
  }

  export type JobCreateappealPointsInput = {
    set: string[]
  }

  export type JobCreatehiringStagesInput = {
    set: string[]
  }

  export type EmployerCreateNestedOneWithoutJobsInput = {
    create?: XOR<EmployerCreateWithoutJobsInput, EmployerUncheckedCreateWithoutJobsInput>
    connectOrCreate?: EmployerCreateOrConnectWithoutJobsInput
    connect?: EmployerWhereUniqueInput
  }

  export type IndustryCreateNestedOneWithoutJobsInput = {
    create?: XOR<IndustryCreateWithoutJobsInput, IndustryUncheckedCreateWithoutJobsInput>
    connectOrCreate?: IndustryCreateOrConnectWithoutJobsInput
    connect?: IndustryWhereUniqueInput
  }

  export type JobSkillCreateNestedManyWithoutJobInput = {
    create?: XOR<JobSkillCreateWithoutJobInput, JobSkillUncheckedCreateWithoutJobInput> | JobSkillCreateWithoutJobInput[] | JobSkillUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutJobInput | JobSkillCreateOrConnectWithoutJobInput[]
    createMany?: JobSkillCreateManyJobInputEnvelope
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutJobInput = {
    create?: XOR<ApplicationCreateWithoutJobInput, ApplicationUncheckedCreateWithoutJobInput> | ApplicationCreateWithoutJobInput[] | ApplicationUncheckedCreateWithoutJobInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutJobInput | ApplicationCreateOrConnectWithoutJobInput[]
    createMany?: ApplicationCreateManyJobInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type JobDocumentCreateNestedManyWithoutJobInput = {
    create?: XOR<JobDocumentCreateWithoutJobInput, JobDocumentUncheckedCreateWithoutJobInput> | JobDocumentCreateWithoutJobInput[] | JobDocumentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobDocumentCreateOrConnectWithoutJobInput | JobDocumentCreateOrConnectWithoutJobInput[]
    createMany?: JobDocumentCreateManyJobInputEnvelope
    connect?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
  }

  export type JobSkillUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<JobSkillCreateWithoutJobInput, JobSkillUncheckedCreateWithoutJobInput> | JobSkillCreateWithoutJobInput[] | JobSkillUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutJobInput | JobSkillCreateOrConnectWithoutJobInput[]
    createMany?: JobSkillCreateManyJobInputEnvelope
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<ApplicationCreateWithoutJobInput, ApplicationUncheckedCreateWithoutJobInput> | ApplicationCreateWithoutJobInput[] | ApplicationUncheckedCreateWithoutJobInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutJobInput | ApplicationCreateOrConnectWithoutJobInput[]
    createMany?: ApplicationCreateManyJobInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type JobDocumentUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<JobDocumentCreateWithoutJobInput, JobDocumentUncheckedCreateWithoutJobInput> | JobDocumentCreateWithoutJobInput[] | JobDocumentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobDocumentCreateOrConnectWithoutJobInput | JobDocumentCreateOrConnectWithoutJobInput[]
    createMany?: JobDocumentCreateManyJobInputEnvelope
    connect?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
  }

  export type JobUpdateappealPointsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumSalaryTypeFieldUpdateOperationsInput = {
    set?: $Enums.SalaryType
  }

  export type EnumJobTypeEnumFieldUpdateOperationsInput = {
    set?: $Enums.JobTypeEnum
  }

  export type EnumJobStatusFieldUpdateOperationsInput = {
    set?: $Enums.JobStatus
  }

  export type JobUpdatehiringStagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployerUpdateOneRequiredWithoutJobsNestedInput = {
    create?: XOR<EmployerCreateWithoutJobsInput, EmployerUncheckedCreateWithoutJobsInput>
    connectOrCreate?: EmployerCreateOrConnectWithoutJobsInput
    upsert?: EmployerUpsertWithoutJobsInput
    connect?: EmployerWhereUniqueInput
    update?: XOR<XOR<EmployerUpdateToOneWithWhereWithoutJobsInput, EmployerUpdateWithoutJobsInput>, EmployerUncheckedUpdateWithoutJobsInput>
  }

  export type IndustryUpdateOneWithoutJobsNestedInput = {
    create?: XOR<IndustryCreateWithoutJobsInput, IndustryUncheckedCreateWithoutJobsInput>
    connectOrCreate?: IndustryCreateOrConnectWithoutJobsInput
    upsert?: IndustryUpsertWithoutJobsInput
    disconnect?: IndustryWhereInput | boolean
    delete?: IndustryWhereInput | boolean
    connect?: IndustryWhereUniqueInput
    update?: XOR<XOR<IndustryUpdateToOneWithWhereWithoutJobsInput, IndustryUpdateWithoutJobsInput>, IndustryUncheckedUpdateWithoutJobsInput>
  }

  export type JobSkillUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobSkillCreateWithoutJobInput, JobSkillUncheckedCreateWithoutJobInput> | JobSkillCreateWithoutJobInput[] | JobSkillUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutJobInput | JobSkillCreateOrConnectWithoutJobInput[]
    upsert?: JobSkillUpsertWithWhereUniqueWithoutJobInput | JobSkillUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobSkillCreateManyJobInputEnvelope
    set?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    disconnect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    delete?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    update?: JobSkillUpdateWithWhereUniqueWithoutJobInput | JobSkillUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobSkillUpdateManyWithWhereWithoutJobInput | JobSkillUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobSkillScalarWhereInput | JobSkillScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutJobNestedInput = {
    create?: XOR<ApplicationCreateWithoutJobInput, ApplicationUncheckedCreateWithoutJobInput> | ApplicationCreateWithoutJobInput[] | ApplicationUncheckedCreateWithoutJobInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutJobInput | ApplicationCreateOrConnectWithoutJobInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutJobInput | ApplicationUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: ApplicationCreateManyJobInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutJobInput | ApplicationUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutJobInput | ApplicationUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type JobDocumentUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobDocumentCreateWithoutJobInput, JobDocumentUncheckedCreateWithoutJobInput> | JobDocumentCreateWithoutJobInput[] | JobDocumentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobDocumentCreateOrConnectWithoutJobInput | JobDocumentCreateOrConnectWithoutJobInput[]
    upsert?: JobDocumentUpsertWithWhereUniqueWithoutJobInput | JobDocumentUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobDocumentCreateManyJobInputEnvelope
    set?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    disconnect?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    delete?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    connect?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    update?: JobDocumentUpdateWithWhereUniqueWithoutJobInput | JobDocumentUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobDocumentUpdateManyWithWhereWithoutJobInput | JobDocumentUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobDocumentScalarWhereInput | JobDocumentScalarWhereInput[]
  }

  export type JobSkillUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobSkillCreateWithoutJobInput, JobSkillUncheckedCreateWithoutJobInput> | JobSkillCreateWithoutJobInput[] | JobSkillUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobSkillCreateOrConnectWithoutJobInput | JobSkillCreateOrConnectWithoutJobInput[]
    upsert?: JobSkillUpsertWithWhereUniqueWithoutJobInput | JobSkillUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobSkillCreateManyJobInputEnvelope
    set?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    disconnect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    delete?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    connect?: JobSkillWhereUniqueInput | JobSkillWhereUniqueInput[]
    update?: JobSkillUpdateWithWhereUniqueWithoutJobInput | JobSkillUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobSkillUpdateManyWithWhereWithoutJobInput | JobSkillUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobSkillScalarWhereInput | JobSkillScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<ApplicationCreateWithoutJobInput, ApplicationUncheckedCreateWithoutJobInput> | ApplicationCreateWithoutJobInput[] | ApplicationUncheckedCreateWithoutJobInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutJobInput | ApplicationCreateOrConnectWithoutJobInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutJobInput | ApplicationUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: ApplicationCreateManyJobInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutJobInput | ApplicationUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutJobInput | ApplicationUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type JobDocumentUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobDocumentCreateWithoutJobInput, JobDocumentUncheckedCreateWithoutJobInput> | JobDocumentCreateWithoutJobInput[] | JobDocumentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobDocumentCreateOrConnectWithoutJobInput | JobDocumentCreateOrConnectWithoutJobInput[]
    upsert?: JobDocumentUpsertWithWhereUniqueWithoutJobInput | JobDocumentUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobDocumentCreateManyJobInputEnvelope
    set?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    disconnect?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    delete?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    connect?: JobDocumentWhereUniqueInput | JobDocumentWhereUniqueInput[]
    update?: JobDocumentUpdateWithWhereUniqueWithoutJobInput | JobDocumentUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobDocumentUpdateManyWithWhereWithoutJobInput | JobDocumentUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobDocumentScalarWhereInput | JobDocumentScalarWhereInput[]
  }

  export type JobCreateNestedOneWithoutSkillsInput = {
    create?: XOR<JobCreateWithoutSkillsInput, JobUncheckedCreateWithoutSkillsInput>
    connectOrCreate?: JobCreateOrConnectWithoutSkillsInput
    connect?: JobWhereUniqueInput
  }

  export type SkillCreateNestedOneWithoutJobSkillsInput = {
    create?: XOR<SkillCreateWithoutJobSkillsInput, SkillUncheckedCreateWithoutJobSkillsInput>
    connectOrCreate?: SkillCreateOrConnectWithoutJobSkillsInput
    connect?: SkillWhereUniqueInput
  }

  export type JobUpdateOneRequiredWithoutSkillsNestedInput = {
    create?: XOR<JobCreateWithoutSkillsInput, JobUncheckedCreateWithoutSkillsInput>
    connectOrCreate?: JobCreateOrConnectWithoutSkillsInput
    upsert?: JobUpsertWithoutSkillsInput
    connect?: JobWhereUniqueInput
    update?: XOR<XOR<JobUpdateToOneWithWhereWithoutSkillsInput, JobUpdateWithoutSkillsInput>, JobUncheckedUpdateWithoutSkillsInput>
  }

  export type SkillUpdateOneRequiredWithoutJobSkillsNestedInput = {
    create?: XOR<SkillCreateWithoutJobSkillsInput, SkillUncheckedCreateWithoutJobSkillsInput>
    connectOrCreate?: SkillCreateOrConnectWithoutJobSkillsInput
    upsert?: SkillUpsertWithoutJobSkillsInput
    connect?: SkillWhereUniqueInput
    update?: XOR<XOR<SkillUpdateToOneWithWhereWithoutJobSkillsInput, SkillUpdateWithoutJobSkillsInput>, SkillUncheckedUpdateWithoutJobSkillsInput>
  }

  export type CandidateCreateNestedOneWithoutSkillsInput = {
    create?: XOR<CandidateCreateWithoutSkillsInput, CandidateUncheckedCreateWithoutSkillsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutSkillsInput
    connect?: CandidateWhereUniqueInput
  }

  export type SkillCreateNestedOneWithoutCandidateSkillsInput = {
    create?: XOR<SkillCreateWithoutCandidateSkillsInput, SkillUncheckedCreateWithoutCandidateSkillsInput>
    connectOrCreate?: SkillCreateOrConnectWithoutCandidateSkillsInput
    connect?: SkillWhereUniqueInput
  }

  export type CandidateUpdateOneRequiredWithoutSkillsNestedInput = {
    create?: XOR<CandidateCreateWithoutSkillsInput, CandidateUncheckedCreateWithoutSkillsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutSkillsInput
    upsert?: CandidateUpsertWithoutSkillsInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutSkillsInput, CandidateUpdateWithoutSkillsInput>, CandidateUncheckedUpdateWithoutSkillsInput>
  }

  export type SkillUpdateOneRequiredWithoutCandidateSkillsNestedInput = {
    create?: XOR<SkillCreateWithoutCandidateSkillsInput, SkillUncheckedCreateWithoutCandidateSkillsInput>
    connectOrCreate?: SkillCreateOrConnectWithoutCandidateSkillsInput
    upsert?: SkillUpsertWithoutCandidateSkillsInput
    connect?: SkillWhereUniqueInput
    update?: XOR<XOR<SkillUpdateToOneWithWhereWithoutCandidateSkillsInput, SkillUpdateWithoutCandidateSkillsInput>, SkillUncheckedUpdateWithoutCandidateSkillsInput>
  }

  export type CandidateCreateNestedOneWithoutCvsInput = {
    create?: XOR<CandidateCreateWithoutCvsInput, CandidateUncheckedCreateWithoutCvsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutCvsInput
    connect?: CandidateWhereUniqueInput
  }

  export type ApplicationCreateNestedManyWithoutCvInput = {
    create?: XOR<ApplicationCreateWithoutCvInput, ApplicationUncheckedCreateWithoutCvInput> | ApplicationCreateWithoutCvInput[] | ApplicationUncheckedCreateWithoutCvInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCvInput | ApplicationCreateOrConnectWithoutCvInput[]
    createMany?: ApplicationCreateManyCvInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutCvInput = {
    create?: XOR<ApplicationCreateWithoutCvInput, ApplicationUncheckedCreateWithoutCvInput> | ApplicationCreateWithoutCvInput[] | ApplicationUncheckedCreateWithoutCvInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCvInput | ApplicationCreateOrConnectWithoutCvInput[]
    createMany?: ApplicationCreateManyCvInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type NullableEnumFileTypeEnumFieldUpdateOperationsInput = {
    set?: $Enums.FileTypeEnum | null
  }

  export type CandidateUpdateOneRequiredWithoutCvsNestedInput = {
    create?: XOR<CandidateCreateWithoutCvsInput, CandidateUncheckedCreateWithoutCvsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutCvsInput
    upsert?: CandidateUpsertWithoutCvsInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutCvsInput, CandidateUpdateWithoutCvsInput>, CandidateUncheckedUpdateWithoutCvsInput>
  }

  export type ApplicationUpdateManyWithoutCvNestedInput = {
    create?: XOR<ApplicationCreateWithoutCvInput, ApplicationUncheckedCreateWithoutCvInput> | ApplicationCreateWithoutCvInput[] | ApplicationUncheckedCreateWithoutCvInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCvInput | ApplicationCreateOrConnectWithoutCvInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutCvInput | ApplicationUpsertWithWhereUniqueWithoutCvInput[]
    createMany?: ApplicationCreateManyCvInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutCvInput | ApplicationUpdateWithWhereUniqueWithoutCvInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutCvInput | ApplicationUpdateManyWithWhereWithoutCvInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutCvNestedInput = {
    create?: XOR<ApplicationCreateWithoutCvInput, ApplicationUncheckedCreateWithoutCvInput> | ApplicationCreateWithoutCvInput[] | ApplicationUncheckedCreateWithoutCvInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCvInput | ApplicationCreateOrConnectWithoutCvInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutCvInput | ApplicationUpsertWithWhereUniqueWithoutCvInput[]
    createMany?: ApplicationCreateManyCvInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutCvInput | ApplicationUpdateWithWhereUniqueWithoutCvInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutCvInput | ApplicationUpdateManyWithWhereWithoutCvInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type CandidateCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<CandidateCreateWithoutApplicationsInput, CandidateUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutApplicationsInput
    connect?: CandidateWhereUniqueInput
  }

  export type JobCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<JobCreateWithoutApplicationsInput, JobUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: JobCreateOrConnectWithoutApplicationsInput
    connect?: JobWhereUniqueInput
  }

  export type CVCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<CVCreateWithoutApplicationsInput, CVUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: CVCreateOrConnectWithoutApplicationsInput
    connect?: CVWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutApplicationsUpdatedInput = {
    create?: XOR<UserCreateWithoutApplicationsUpdatedInput, UserUncheckedCreateWithoutApplicationsUpdatedInput>
    connectOrCreate?: UserCreateOrConnectWithoutApplicationsUpdatedInput
    connect?: UserWhereUniqueInput
  }

  export type EnumApplicationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ApplicationStatus
  }

  export type CandidateUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<CandidateCreateWithoutApplicationsInput, CandidateUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutApplicationsInput
    upsert?: CandidateUpsertWithoutApplicationsInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutApplicationsInput, CandidateUpdateWithoutApplicationsInput>, CandidateUncheckedUpdateWithoutApplicationsInput>
  }

  export type JobUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<JobCreateWithoutApplicationsInput, JobUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: JobCreateOrConnectWithoutApplicationsInput
    upsert?: JobUpsertWithoutApplicationsInput
    connect?: JobWhereUniqueInput
    update?: XOR<XOR<JobUpdateToOneWithWhereWithoutApplicationsInput, JobUpdateWithoutApplicationsInput>, JobUncheckedUpdateWithoutApplicationsInput>
  }

  export type CVUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<CVCreateWithoutApplicationsInput, CVUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: CVCreateOrConnectWithoutApplicationsInput
    upsert?: CVUpsertWithoutApplicationsInput
    connect?: CVWhereUniqueInput
    update?: XOR<XOR<CVUpdateToOneWithWhereWithoutApplicationsInput, CVUpdateWithoutApplicationsInput>, CVUncheckedUpdateWithoutApplicationsInput>
  }

  export type UserUpdateOneWithoutApplicationsUpdatedNestedInput = {
    create?: XOR<UserCreateWithoutApplicationsUpdatedInput, UserUncheckedCreateWithoutApplicationsUpdatedInput>
    connectOrCreate?: UserCreateOrConnectWithoutApplicationsUpdatedInput
    upsert?: UserUpsertWithoutApplicationsUpdatedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApplicationsUpdatedInput, UserUpdateWithoutApplicationsUpdatedInput>, UserUncheckedUpdateWithoutApplicationsUpdatedInput>
  }

  export type CandidateCreateNestedOneWithoutEducationInput = {
    create?: XOR<CandidateCreateWithoutEducationInput, CandidateUncheckedCreateWithoutEducationInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutEducationInput
    connect?: CandidateWhereUniqueInput
  }

  export type CandidateUpdateOneRequiredWithoutEducationNestedInput = {
    create?: XOR<CandidateCreateWithoutEducationInput, CandidateUncheckedCreateWithoutEducationInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutEducationInput
    upsert?: CandidateUpsertWithoutEducationInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutEducationInput, CandidateUpdateWithoutEducationInput>, CandidateUncheckedUpdateWithoutEducationInput>
  }

  export type WorkExperienceCreateresponsibilitiesInput = {
    set: string[]
  }

  export type WorkExperienceCreatekeyToolsTechnologiesInput = {
    set: string[]
  }

  export type CandidateCreateNestedOneWithoutWorkExperienceInput = {
    create?: XOR<CandidateCreateWithoutWorkExperienceInput, CandidateUncheckedCreateWithoutWorkExperienceInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutWorkExperienceInput
    connect?: CandidateWhereUniqueInput
  }

  export type NullableEnumJobTypeEnumFieldUpdateOperationsInput = {
    set?: $Enums.JobTypeEnum | null
  }

  export type WorkExperienceUpdateresponsibilitiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type WorkExperienceUpdatekeyToolsTechnologiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CandidateUpdateOneRequiredWithoutWorkExperienceNestedInput = {
    create?: XOR<CandidateCreateWithoutWorkExperienceInput, CandidateUncheckedCreateWithoutWorkExperienceInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutWorkExperienceInput
    upsert?: CandidateUpsertWithoutWorkExperienceInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutWorkExperienceInput, CandidateUpdateWithoutWorkExperienceInput>, CandidateUncheckedUpdateWithoutWorkExperienceInput>
  }

  export type ProjectCreatebulletPointsInput = {
    set: string[]
  }

  export type ProjectCreatetechnologiesUsedInput = {
    set: string[]
  }

  export type CandidateCreateNestedOneWithoutProjectsInput = {
    create?: XOR<CandidateCreateWithoutProjectsInput, CandidateUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutProjectsInput
    connect?: CandidateWhereUniqueInput
  }

  export type ProjectUpdatebulletPointsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ProjectUpdatetechnologiesUsedInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CandidateUpdateOneRequiredWithoutProjectsNestedInput = {
    create?: XOR<CandidateCreateWithoutProjectsInput, CandidateUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutProjectsInput
    upsert?: CandidateUpsertWithoutProjectsInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutProjectsInput, CandidateUpdateWithoutProjectsInput>, CandidateUncheckedUpdateWithoutProjectsInput>
  }

  export type CandidateCreateNestedOneWithoutQualificationsInput = {
    create?: XOR<CandidateCreateWithoutQualificationsInput, CandidateUncheckedCreateWithoutQualificationsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutQualificationsInput
    connect?: CandidateWhereUniqueInput
  }

  export type CandidateUpdateOneRequiredWithoutQualificationsNestedInput = {
    create?: XOR<CandidateCreateWithoutQualificationsInput, CandidateUncheckedCreateWithoutQualificationsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutQualificationsInput
    upsert?: CandidateUpsertWithoutQualificationsInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutQualificationsInput, CandidateUpdateWithoutQualificationsInput>, CandidateUncheckedUpdateWithoutQualificationsInput>
  }

  export type CandidateCreateNestedOneWithoutAwardsInput = {
    create?: XOR<CandidateCreateWithoutAwardsInput, CandidateUncheckedCreateWithoutAwardsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutAwardsInput
    connect?: CandidateWhereUniqueInput
  }

  export type CandidateUpdateOneRequiredWithoutAwardsNestedInput = {
    create?: XOR<CandidateCreateWithoutAwardsInput, CandidateUncheckedCreateWithoutAwardsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutAwardsInput
    upsert?: CandidateUpsertWithoutAwardsInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutAwardsInput, CandidateUpdateWithoutAwardsInput>, CandidateUncheckedUpdateWithoutAwardsInput>
  }

  export type CandidateCreateNestedOneWithoutMediaInput = {
    create?: XOR<CandidateCreateWithoutMediaInput, CandidateUncheckedCreateWithoutMediaInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutMediaInput
    connect?: CandidateWhereUniqueInput
  }

  export type EnumMediaTypeFieldUpdateOperationsInput = {
    set?: $Enums.MediaType
  }

  export type CandidateUpdateOneRequiredWithoutMediaNestedInput = {
    create?: XOR<CandidateCreateWithoutMediaInput, CandidateUncheckedCreateWithoutMediaInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutMediaInput
    upsert?: CandidateUpsertWithoutMediaInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutMediaInput, CandidateUpdateWithoutMediaInput>, CandidateUncheckedUpdateWithoutMediaInput>
  }

  export type JobCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<JobCreateWithoutDocumentsInput, JobUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: JobCreateOrConnectWithoutDocumentsInput
    connect?: JobWhereUniqueInput
  }

  export type EnumDocumentTypeFieldUpdateOperationsInput = {
    set?: $Enums.DocumentType
  }

  export type JobUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<JobCreateWithoutDocumentsInput, JobUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: JobCreateOrConnectWithoutDocumentsInput
    upsert?: JobUpsertWithoutDocumentsInput
    connect?: JobWhereUniqueInput
    update?: XOR<XOR<JobUpdateToOneWithWhereWithoutDocumentsInput, JobUpdateWithoutDocumentsInput>, JobUncheckedUpdateWithoutDocumentsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumSkillCategoryNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SkillCategory | EnumSkillCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSkillCategoryNullableFilter<$PrismaModel> | $Enums.SkillCategory | null
  }

  export type NestedEnumSkillCategoryNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SkillCategory | EnumSkillCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SkillCategory[] | ListEnumSkillCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSkillCategoryNullableWithAggregatesFilter<$PrismaModel> | $Enums.SkillCategory | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSkillCategoryNullableFilter<$PrismaModel>
    _max?: NestedEnumSkillCategoryNullableFilter<$PrismaModel>
  }

  export type NestedEnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumCompanySizeTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySizeType | EnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeTypeNullableFilter<$PrismaModel> | $Enums.CompanySizeType | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumCompanySizeTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySizeType | EnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySizeType[] | ListEnumCompanySizeTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.CompanySizeType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCompanySizeTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumCompanySizeTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumGenderTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.GenderType | EnumGenderTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderTypeNullableFilter<$PrismaModel> | $Enums.GenderType | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumSalaryTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSalaryTypeNullableFilter<$PrismaModel> | $Enums.SalaryType | null
  }

  export type NestedEnumJapaneseProficiencyLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.JapaneseProficiencyLevel | EnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJapaneseProficiencyLevelNullableFilter<$PrismaModel> | $Enums.JapaneseProficiencyLevel | null
  }

  export type NestedEnumProficiencyLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ProficiencyLevel | EnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProficiencyLevelNullableFilter<$PrismaModel> | $Enums.ProficiencyLevel | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumGenderTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GenderType | EnumGenderTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.GenderType[] | ListEnumGenderTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.GenderType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderTypeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumSalaryTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSalaryTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.SalaryType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSalaryTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumSalaryTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumJapaneseProficiencyLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JapaneseProficiencyLevel | EnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JapaneseProficiencyLevel[] | ListEnumJapaneseProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJapaneseProficiencyLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.JapaneseProficiencyLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumJapaneseProficiencyLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumJapaneseProficiencyLevelNullableFilter<$PrismaModel>
  }

  export type NestedEnumProficiencyLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProficiencyLevel | EnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProficiencyLevel[] | ListEnumProficiencyLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProficiencyLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.ProficiencyLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumProficiencyLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumProficiencyLevelNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumSalaryTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSalaryTypeFilter<$PrismaModel> | $Enums.SalaryType
  }

  export type NestedEnumJobTypeEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel>
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeEnumFilter<$PrismaModel> | $Enums.JobTypeEnum
  }

  export type NestedEnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type NestedEnumSalaryTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SalaryType | EnumSalaryTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SalaryType[] | ListEnumSalaryTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSalaryTypeWithAggregatesFilter<$PrismaModel> | $Enums.SalaryType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSalaryTypeFilter<$PrismaModel>
    _max?: NestedEnumSalaryTypeFilter<$PrismaModel>
  }

  export type NestedEnumJobTypeEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel>
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeEnumWithAggregatesFilter<$PrismaModel> | $Enums.JobTypeEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobTypeEnumFilter<$PrismaModel>
    _max?: NestedEnumJobTypeEnumFilter<$PrismaModel>
  }

  export type NestedEnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type NestedEnumFileTypeEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FileTypeEnum | EnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFileTypeEnumNullableFilter<$PrismaModel> | $Enums.FileTypeEnum | null
  }

  export type NestedEnumFileTypeEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FileTypeEnum | EnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FileTypeEnum[] | ListEnumFileTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFileTypeEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.FileTypeEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFileTypeEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumFileTypeEnumNullableFilter<$PrismaModel>
  }

  export type NestedEnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type NestedEnumJobTypeEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJobTypeEnumNullableFilter<$PrismaModel> | $Enums.JobTypeEnum | null
  }

  export type NestedEnumJobTypeEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobTypeEnum | EnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.JobTypeEnum[] | ListEnumJobTypeEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumJobTypeEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.JobTypeEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumJobTypeEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumJobTypeEnumNullableFilter<$PrismaModel>
  }

  export type NestedEnumMediaTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeFilter<$PrismaModel> | $Enums.MediaType
  }

  export type NestedEnumMediaTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeWithAggregatesFilter<$PrismaModel> | $Enums.MediaType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMediaTypeFilter<$PrismaModel>
    _max?: NestedEnumMediaTypeFilter<$PrismaModel>
  }

  export type NestedEnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type JobCreateWithoutIndustryInput = {
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer: EmployerCreateNestedOneWithoutJobsInput
    skills?: JobSkillCreateNestedManyWithoutJobInput
    applications?: ApplicationCreateNestedManyWithoutJobInput
    documents?: JobDocumentCreateNestedManyWithoutJobInput
  }

  export type JobUncheckedCreateWithoutIndustryInput = {
    id?: number
    employerId: number
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: JobSkillUncheckedCreateNestedManyWithoutJobInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutJobInput
    documents?: JobDocumentUncheckedCreateNestedManyWithoutJobInput
  }

  export type JobCreateOrConnectWithoutIndustryInput = {
    where: JobWhereUniqueInput
    create: XOR<JobCreateWithoutIndustryInput, JobUncheckedCreateWithoutIndustryInput>
  }

  export type JobCreateManyIndustryInputEnvelope = {
    data: JobCreateManyIndustryInput | JobCreateManyIndustryInput[]
    skipDuplicates?: boolean
  }

  export type JobUpsertWithWhereUniqueWithoutIndustryInput = {
    where: JobWhereUniqueInput
    update: XOR<JobUpdateWithoutIndustryInput, JobUncheckedUpdateWithoutIndustryInput>
    create: XOR<JobCreateWithoutIndustryInput, JobUncheckedCreateWithoutIndustryInput>
  }

  export type JobUpdateWithWhereUniqueWithoutIndustryInput = {
    where: JobWhereUniqueInput
    data: XOR<JobUpdateWithoutIndustryInput, JobUncheckedUpdateWithoutIndustryInput>
  }

  export type JobUpdateManyWithWhereWithoutIndustryInput = {
    where: JobScalarWhereInput
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyWithoutIndustryInput>
  }

  export type JobScalarWhereInput = {
    AND?: JobScalarWhereInput | JobScalarWhereInput[]
    OR?: JobScalarWhereInput[]
    NOT?: JobScalarWhereInput | JobScalarWhereInput[]
    id?: IntFilter<"Job"> | number
    employerId?: IntFilter<"Job"> | number
    industryId?: IntNullableFilter<"Job"> | number | null
    title?: StringFilter<"Job"> | string
    titleJp?: StringNullableFilter<"Job"> | string | null
    description?: StringFilter<"Job"> | string
    descriptionJp?: StringNullableFilter<"Job"> | string | null
    requirements?: StringFilter<"Job"> | string
    requirementsJp?: StringNullableFilter<"Job"> | string | null
    benefits?: StringNullableFilter<"Job"> | string | null
    benefitsJp?: StringNullableFilter<"Job"> | string | null
    appealPoints?: StringNullableListFilter<"Job">
    salaryMin?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFilter<"Job"> | $Enums.SalaryType
    salaryDetails?: StringNullableFilter<"Job"> | string | null
    country?: StringFilter<"Job"> | string
    prefecture?: StringNullableFilter<"Job"> | string | null
    city?: StringNullableFilter<"Job"> | string | null
    addressDetail?: StringNullableFilter<"Job"> | string | null
    nearestStation?: StringNullableFilter<"Job"> | string | null
    isRemote?: BoolFilter<"Job"> | boolean
    remoteDetails?: StringNullableFilter<"Job"> | string | null
    jobType?: EnumJobTypeEnumFilter<"Job"> | $Enums.JobTypeEnum
    status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    postedDate?: DateTimeFilter<"Job"> | Date | string
    expiryDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    externalApplicationUrl?: StringNullableFilter<"Job"> | string | null
    hiringStages?: StringNullableListFilter<"Job">
    workingHoursDescription?: StringNullableFilter<"Job"> | string | null
    isFlexTime?: BoolNullableFilter<"Job"> | boolean | null
    coreTimeDescription?: StringNullableFilter<"Job"> | string | null
    actualWorkingHoursPerDay?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: DecimalNullableFilter<"Job"> | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: EnumJapaneseProficiencyLevelNullableFilter<"Job"> | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: EnumProficiencyLevelNullableFilter<"Job"> | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: StringNullableFilter<"Job"> | string | null
    visaSupportAvailable?: BoolNullableFilter<"Job"> | boolean | null
    relocationSupportAvailable?: BoolNullableFilter<"Job"> | boolean | null
    housingSupportDetails?: StringNullableFilter<"Job"> | string | null
    foreignFriendlyEnvironment?: BoolNullableFilter<"Job"> | boolean | null
    targetCandidateDescription?: StringNullableFilter<"Job"> | string | null
    numberOfHires?: IntNullableFilter<"Job"> | number | null
    createdAt?: DateTimeFilter<"Job"> | Date | string
    updatedAt?: DateTimeFilter<"Job"> | Date | string
  }

  export type JobSkillCreateWithoutSkillInput = {
    importanceLevel?: number | null
    requiredYears?: number | null
    job: JobCreateNestedOneWithoutSkillsInput
  }

  export type JobSkillUncheckedCreateWithoutSkillInput = {
    id?: number
    jobId: number
    importanceLevel?: number | null
    requiredYears?: number | null
  }

  export type JobSkillCreateOrConnectWithoutSkillInput = {
    where: JobSkillWhereUniqueInput
    create: XOR<JobSkillCreateWithoutSkillInput, JobSkillUncheckedCreateWithoutSkillInput>
  }

  export type JobSkillCreateManySkillInputEnvelope = {
    data: JobSkillCreateManySkillInput | JobSkillCreateManySkillInput[]
    skipDuplicates?: boolean
  }

  export type CandidateSkillCreateWithoutSkillInput = {
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
    candidate: CandidateCreateNestedOneWithoutSkillsInput
  }

  export type CandidateSkillUncheckedCreateWithoutSkillInput = {
    id?: number
    candidateId: number
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
  }

  export type CandidateSkillCreateOrConnectWithoutSkillInput = {
    where: CandidateSkillWhereUniqueInput
    create: XOR<CandidateSkillCreateWithoutSkillInput, CandidateSkillUncheckedCreateWithoutSkillInput>
  }

  export type CandidateSkillCreateManySkillInputEnvelope = {
    data: CandidateSkillCreateManySkillInput | CandidateSkillCreateManySkillInput[]
    skipDuplicates?: boolean
  }

  export type JobSkillUpsertWithWhereUniqueWithoutSkillInput = {
    where: JobSkillWhereUniqueInput
    update: XOR<JobSkillUpdateWithoutSkillInput, JobSkillUncheckedUpdateWithoutSkillInput>
    create: XOR<JobSkillCreateWithoutSkillInput, JobSkillUncheckedCreateWithoutSkillInput>
  }

  export type JobSkillUpdateWithWhereUniqueWithoutSkillInput = {
    where: JobSkillWhereUniqueInput
    data: XOR<JobSkillUpdateWithoutSkillInput, JobSkillUncheckedUpdateWithoutSkillInput>
  }

  export type JobSkillUpdateManyWithWhereWithoutSkillInput = {
    where: JobSkillScalarWhereInput
    data: XOR<JobSkillUpdateManyMutationInput, JobSkillUncheckedUpdateManyWithoutSkillInput>
  }

  export type JobSkillScalarWhereInput = {
    AND?: JobSkillScalarWhereInput | JobSkillScalarWhereInput[]
    OR?: JobSkillScalarWhereInput[]
    NOT?: JobSkillScalarWhereInput | JobSkillScalarWhereInput[]
    id?: IntFilter<"JobSkill"> | number
    jobId?: IntFilter<"JobSkill"> | number
    skillId?: IntFilter<"JobSkill"> | number
    importanceLevel?: IntNullableFilter<"JobSkill"> | number | null
    requiredYears?: IntNullableFilter<"JobSkill"> | number | null
  }

  export type CandidateSkillUpsertWithWhereUniqueWithoutSkillInput = {
    where: CandidateSkillWhereUniqueInput
    update: XOR<CandidateSkillUpdateWithoutSkillInput, CandidateSkillUncheckedUpdateWithoutSkillInput>
    create: XOR<CandidateSkillCreateWithoutSkillInput, CandidateSkillUncheckedCreateWithoutSkillInput>
  }

  export type CandidateSkillUpdateWithWhereUniqueWithoutSkillInput = {
    where: CandidateSkillWhereUniqueInput
    data: XOR<CandidateSkillUpdateWithoutSkillInput, CandidateSkillUncheckedUpdateWithoutSkillInput>
  }

  export type CandidateSkillUpdateManyWithWhereWithoutSkillInput = {
    where: CandidateSkillScalarWhereInput
    data: XOR<CandidateSkillUpdateManyMutationInput, CandidateSkillUncheckedUpdateManyWithoutSkillInput>
  }

  export type CandidateSkillScalarWhereInput = {
    AND?: CandidateSkillScalarWhereInput | CandidateSkillScalarWhereInput[]
    OR?: CandidateSkillScalarWhereInput[]
    NOT?: CandidateSkillScalarWhereInput | CandidateSkillScalarWhereInput[]
    id?: IntFilter<"CandidateSkill"> | number
    candidateId?: IntFilter<"CandidateSkill"> | number
    skillId?: IntFilter<"CandidateSkill"> | number
    proficiencyLevel?: EnumProficiencyLevelNullableFilter<"CandidateSkill"> | $Enums.ProficiencyLevel | null
    experienceMonths?: IntNullableFilter<"CandidateSkill"> | number | null
  }

  export type EmployerCreateWithoutUserInput = {
    companyName: string
    companyNameKana?: string | null
    companyNameJp?: string | null
    companyLogoUrl?: string | null
    companyWebsite?: string | null
    companyDescription?: string | null
    companyDescriptionJp?: string | null
    businessOverview?: string | null
    businessOverviewJp?: string | null
    companyAddress?: string | null
    companyAddressJp?: string | null
    companyPhone?: string | null
    establishmentDate?: Date | string | null
    representativeName?: string | null
    representativeTitle?: string | null
    vietnamBranchExists?: boolean | null
    companySize?: $Enums.CompanySizeType | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobs?: JobCreateNestedManyWithoutEmployerInput
  }

  export type EmployerUncheckedCreateWithoutUserInput = {
    id?: number
    companyName: string
    companyNameKana?: string | null
    companyNameJp?: string | null
    companyLogoUrl?: string | null
    companyWebsite?: string | null
    companyDescription?: string | null
    companyDescriptionJp?: string | null
    businessOverview?: string | null
    businessOverviewJp?: string | null
    companyAddress?: string | null
    companyAddressJp?: string | null
    companyPhone?: string | null
    establishmentDate?: Date | string | null
    representativeName?: string | null
    representativeTitle?: string | null
    vietnamBranchExists?: boolean | null
    companySize?: $Enums.CompanySizeType | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobs?: JobUncheckedCreateNestedManyWithoutEmployerInput
  }

  export type EmployerCreateOrConnectWithoutUserInput = {
    where: EmployerWhereUniqueInput
    create: XOR<EmployerCreateWithoutUserInput, EmployerUncheckedCreateWithoutUserInput>
  }

  export type CandidateCreateWithoutUserInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutUserInput = {
    id?: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutUserInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutUserInput, CandidateUncheckedCreateWithoutUserInput>
  }

  export type ApplicationCreateWithoutLastUpdatedByInput = {
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate: CandidateCreateNestedOneWithoutApplicationsInput
    job: JobCreateNestedOneWithoutApplicationsInput
    cv: CVCreateNestedOneWithoutApplicationsInput
  }

  export type ApplicationUncheckedCreateWithoutLastUpdatedByInput = {
    id?: number
    candidateId: number
    jobId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ApplicationCreateOrConnectWithoutLastUpdatedByInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutLastUpdatedByInput, ApplicationUncheckedCreateWithoutLastUpdatedByInput>
  }

  export type ApplicationCreateManyLastUpdatedByInputEnvelope = {
    data: ApplicationCreateManyLastUpdatedByInput | ApplicationCreateManyLastUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expiresAt: Date | string
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expiresAt: Date | string
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EmployerUpsertWithoutUserInput = {
    update: XOR<EmployerUpdateWithoutUserInput, EmployerUncheckedUpdateWithoutUserInput>
    create: XOR<EmployerCreateWithoutUserInput, EmployerUncheckedCreateWithoutUserInput>
    where?: EmployerWhereInput
  }

  export type EmployerUpdateToOneWithWhereWithoutUserInput = {
    where?: EmployerWhereInput
    data: XOR<EmployerUpdateWithoutUserInput, EmployerUncheckedUpdateWithoutUserInput>
  }

  export type EmployerUpdateWithoutUserInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobs?: JobUpdateManyWithoutEmployerNestedInput
  }

  export type EmployerUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobs?: JobUncheckedUpdateManyWithoutEmployerNestedInput
  }

  export type CandidateUpsertWithoutUserInput = {
    update: XOR<CandidateUpdateWithoutUserInput, CandidateUncheckedUpdateWithoutUserInput>
    create: XOR<CandidateCreateWithoutUserInput, CandidateUncheckedCreateWithoutUserInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutUserInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutUserInput, CandidateUncheckedUpdateWithoutUserInput>
  }

  export type CandidateUpdateWithoutUserInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type ApplicationUpsertWithWhereUniqueWithoutLastUpdatedByInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutLastUpdatedByInput, ApplicationUncheckedUpdateWithoutLastUpdatedByInput>
    create: XOR<ApplicationCreateWithoutLastUpdatedByInput, ApplicationUncheckedCreateWithoutLastUpdatedByInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutLastUpdatedByInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutLastUpdatedByInput, ApplicationUncheckedUpdateWithoutLastUpdatedByInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutLastUpdatedByInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutLastUpdatedByInput>
  }

  export type ApplicationScalarWhereInput = {
    AND?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    OR?: ApplicationScalarWhereInput[]
    NOT?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    id?: IntFilter<"Application"> | number
    candidateId?: IntFilter<"Application"> | number
    jobId?: IntFilter<"Application"> | number
    cvId?: IntFilter<"Application"> | number
    coverLetter?: StringNullableFilter<"Application"> | string | null
    applicationDate?: DateTimeFilter<"Application"> | Date | string
    status?: EnumApplicationStatusFilter<"Application"> | $Enums.ApplicationStatus
    statusMessage?: StringNullableFilter<"Application"> | string | null
    currentStageIndex?: IntNullableFilter<"Application"> | number | null
    internalNotes?: StringNullableFilter<"Application"> | string | null
    candidateNotes?: StringNullableFilter<"Application"> | string | null
    processLog?: JsonNullableFilter<"Application">
    isBookmarked?: BoolNullableFilter<"Application"> | boolean | null
    matchScore?: DecimalNullableFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    manualScore?: DecimalNullableFilter<"Application"> | Decimal | DecimalJsLike | number | string | null
    offerDetails?: JsonNullableFilter<"Application">
    lastUpdatedById?: IntNullableFilter<"Application"> | number | null
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: IntFilter<"Session"> | number
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
  }

  export type UserCreateWithoutSessionsInput = {
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerCreateNestedOneWithoutUserInput
    candidate?: CandidateCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationCreateNestedManyWithoutLastUpdatedByInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: number
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerUncheckedCreateNestedOneWithoutUserInput
    candidate?: CandidateUncheckedCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationUncheckedCreateNestedManyWithoutLastUpdatedByInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneWithoutUserNestedInput
    candidate?: CandidateUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUpdateManyWithoutLastUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUncheckedUpdateOneWithoutUserNestedInput
    candidate?: CandidateUncheckedUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUncheckedUpdateManyWithoutLastUpdatedByNestedInput
  }

  export type UserCreateWithoutEmployerInput = {
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate?: CandidateCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationCreateNestedManyWithoutLastUpdatedByInput
    sessions?: SessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEmployerInput = {
    id?: number
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidate?: CandidateUncheckedCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationUncheckedCreateNestedManyWithoutLastUpdatedByInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEmployerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEmployerInput, UserUncheckedCreateWithoutEmployerInput>
  }

  export type JobCreateWithoutEmployerInput = {
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    industry?: IndustryCreateNestedOneWithoutJobsInput
    skills?: JobSkillCreateNestedManyWithoutJobInput
    applications?: ApplicationCreateNestedManyWithoutJobInput
    documents?: JobDocumentCreateNestedManyWithoutJobInput
  }

  export type JobUncheckedCreateWithoutEmployerInput = {
    id?: number
    industryId?: number | null
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: JobSkillUncheckedCreateNestedManyWithoutJobInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutJobInput
    documents?: JobDocumentUncheckedCreateNestedManyWithoutJobInput
  }

  export type JobCreateOrConnectWithoutEmployerInput = {
    where: JobWhereUniqueInput
    create: XOR<JobCreateWithoutEmployerInput, JobUncheckedCreateWithoutEmployerInput>
  }

  export type JobCreateManyEmployerInputEnvelope = {
    data: JobCreateManyEmployerInput | JobCreateManyEmployerInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutEmployerInput = {
    update: XOR<UserUpdateWithoutEmployerInput, UserUncheckedUpdateWithoutEmployerInput>
    create: XOR<UserCreateWithoutEmployerInput, UserUncheckedCreateWithoutEmployerInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEmployerInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEmployerInput, UserUncheckedUpdateWithoutEmployerInput>
  }

  export type UserUpdateWithoutEmployerInput = {
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUpdateManyWithoutLastUpdatedByNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEmployerInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUncheckedUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUncheckedUpdateManyWithoutLastUpdatedByNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type JobUpsertWithWhereUniqueWithoutEmployerInput = {
    where: JobWhereUniqueInput
    update: XOR<JobUpdateWithoutEmployerInput, JobUncheckedUpdateWithoutEmployerInput>
    create: XOR<JobCreateWithoutEmployerInput, JobUncheckedCreateWithoutEmployerInput>
  }

  export type JobUpdateWithWhereUniqueWithoutEmployerInput = {
    where: JobWhereUniqueInput
    data: XOR<JobUpdateWithoutEmployerInput, JobUncheckedUpdateWithoutEmployerInput>
  }

  export type JobUpdateManyWithWhereWithoutEmployerInput = {
    where: JobScalarWhereInput
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyWithoutEmployerInput>
  }

  export type UserCreateWithoutCandidateInput = {
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationCreateNestedManyWithoutLastUpdatedByInput
    sessions?: SessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCandidateInput = {
    id?: number
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerUncheckedCreateNestedOneWithoutUserInput
    applicationsUpdated?: ApplicationUncheckedCreateNestedManyWithoutLastUpdatedByInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCandidateInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCandidateInput, UserUncheckedCreateWithoutCandidateInput>
  }

  export type CandidateSkillCreateWithoutCandidateInput = {
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
    skill: SkillCreateNestedOneWithoutCandidateSkillsInput
  }

  export type CandidateSkillUncheckedCreateWithoutCandidateInput = {
    id?: number
    skillId: number
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
  }

  export type CandidateSkillCreateOrConnectWithoutCandidateInput = {
    where: CandidateSkillWhereUniqueInput
    create: XOR<CandidateSkillCreateWithoutCandidateInput, CandidateSkillUncheckedCreateWithoutCandidateInput>
  }

  export type CandidateSkillCreateManyCandidateInputEnvelope = {
    data: CandidateSkillCreateManyCandidateInput | CandidateSkillCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type CVCreateWithoutCandidateInput = {
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
    applications?: ApplicationCreateNestedManyWithoutCvInput
  }

  export type CVUncheckedCreateWithoutCandidateInput = {
    id?: number
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
    applications?: ApplicationUncheckedCreateNestedManyWithoutCvInput
  }

  export type CVCreateOrConnectWithoutCandidateInput = {
    where: CVWhereUniqueInput
    create: XOR<CVCreateWithoutCandidateInput, CVUncheckedCreateWithoutCandidateInput>
  }

  export type CVCreateManyCandidateInputEnvelope = {
    data: CVCreateManyCandidateInput | CVCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationCreateWithoutCandidateInput = {
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    job: JobCreateNestedOneWithoutApplicationsInput
    cv: CVCreateNestedOneWithoutApplicationsInput
    lastUpdatedBy?: UserCreateNestedOneWithoutApplicationsUpdatedInput
  }

  export type ApplicationUncheckedCreateWithoutCandidateInput = {
    id?: number
    jobId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type ApplicationCreateOrConnectWithoutCandidateInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput>
  }

  export type ApplicationCreateManyCandidateInputEnvelope = {
    data: ApplicationCreateManyCandidateInput | ApplicationCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type EducationCreateWithoutCandidateInput = {
    universityName: string
    facultyDepartment?: string | null
    degree?: string | null
    major?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    gpa?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    descriptionJp?: string | null
    country?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EducationUncheckedCreateWithoutCandidateInput = {
    id?: number
    universityName: string
    facultyDepartment?: string | null
    degree?: string | null
    major?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    gpa?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    descriptionJp?: string | null
    country?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EducationCreateOrConnectWithoutCandidateInput = {
    where: EducationWhereUniqueInput
    create: XOR<EducationCreateWithoutCandidateInput, EducationUncheckedCreateWithoutCandidateInput>
  }

  export type EducationCreateManyCandidateInputEnvelope = {
    data: EducationCreateManyCandidateInput | EducationCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type WorkExperienceCreateWithoutCandidateInput = {
    companyName: string
    jobTitle: string
    employmentType?: $Enums.JobTypeEnum | null
    startDate: Date | string
    endDate?: Date | string | null
    isCurrent?: boolean
    location?: string | null
    description?: string | null
    descriptionJp?: string | null
    responsibilities?: WorkExperienceCreateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceCreatekeyToolsTechnologiesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WorkExperienceUncheckedCreateWithoutCandidateInput = {
    id?: number
    companyName: string
    jobTitle: string
    employmentType?: $Enums.JobTypeEnum | null
    startDate: Date | string
    endDate?: Date | string | null
    isCurrent?: boolean
    location?: string | null
    description?: string | null
    descriptionJp?: string | null
    responsibilities?: WorkExperienceCreateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceCreatekeyToolsTechnologiesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WorkExperienceCreateOrConnectWithoutCandidateInput = {
    where: WorkExperienceWhereUniqueInput
    create: XOR<WorkExperienceCreateWithoutCandidateInput, WorkExperienceUncheckedCreateWithoutCandidateInput>
  }

  export type WorkExperienceCreateManyCandidateInputEnvelope = {
    data: WorkExperienceCreateManyCandidateInput | WorkExperienceCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutCandidateInput = {
    title: string
    titleJp?: string | null
    url?: string | null
    purpose?: string | null
    purposeJp?: string | null
    description?: string | null
    descriptionJp?: string | null
    bulletPoints?: ProjectCreatebulletPointsInput | string[]
    technologiesUsed?: ProjectCreatetechnologiesUsedInput | string[]
    teamDetails?: string | null
    duration?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProjectUncheckedCreateWithoutCandidateInput = {
    id?: number
    title: string
    titleJp?: string | null
    url?: string | null
    purpose?: string | null
    purposeJp?: string | null
    description?: string | null
    descriptionJp?: string | null
    bulletPoints?: ProjectCreatebulletPointsInput | string[]
    technologiesUsed?: ProjectCreatetechnologiesUsedInput | string[]
    teamDetails?: string | null
    duration?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProjectCreateOrConnectWithoutCandidateInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutCandidateInput, ProjectUncheckedCreateWithoutCandidateInput>
  }

  export type ProjectCreateManyCandidateInputEnvelope = {
    data: ProjectCreateManyCandidateInput | ProjectCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type QualificationCreateWithoutCandidateInput = {
    name: string
    issuingOrganization?: string | null
    issueDate?: Date | string | null
    expiryDate?: Date | string | null
    credentialId?: string | null
    credentialUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualificationUncheckedCreateWithoutCandidateInput = {
    id?: number
    name: string
    issuingOrganization?: string | null
    issueDate?: Date | string | null
    expiryDate?: Date | string | null
    credentialId?: string | null
    credentialUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualificationCreateOrConnectWithoutCandidateInput = {
    where: QualificationWhereUniqueInput
    create: XOR<QualificationCreateWithoutCandidateInput, QualificationUncheckedCreateWithoutCandidateInput>
  }

  export type QualificationCreateManyCandidateInputEnvelope = {
    data: QualificationCreateManyCandidateInput | QualificationCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type AwardCreateWithoutCandidateInput = {
    title: string
    issuer?: string | null
    date?: Date | string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AwardUncheckedCreateWithoutCandidateInput = {
    id?: number
    title: string
    issuer?: string | null
    date?: Date | string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AwardCreateOrConnectWithoutCandidateInput = {
    where: AwardWhereUniqueInput
    create: XOR<AwardCreateWithoutCandidateInput, AwardUncheckedCreateWithoutCandidateInput>
  }

  export type AwardCreateManyCandidateInputEnvelope = {
    data: AwardCreateManyCandidateInput | AwardCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type CandidateMediaCreateWithoutCandidateInput = {
    mediaType: $Enums.MediaType
    title?: string | null
    url: string
    thumbnailUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidateMediaUncheckedCreateWithoutCandidateInput = {
    id?: number
    mediaType: $Enums.MediaType
    title?: string | null
    url: string
    thumbnailUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidateMediaCreateOrConnectWithoutCandidateInput = {
    where: CandidateMediaWhereUniqueInput
    create: XOR<CandidateMediaCreateWithoutCandidateInput, CandidateMediaUncheckedCreateWithoutCandidateInput>
  }

  export type CandidateMediaCreateManyCandidateInputEnvelope = {
    data: CandidateMediaCreateManyCandidateInput | CandidateMediaCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCandidateInput = {
    update: XOR<UserUpdateWithoutCandidateInput, UserUncheckedUpdateWithoutCandidateInput>
    create: XOR<UserCreateWithoutCandidateInput, UserUncheckedCreateWithoutCandidateInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCandidateInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCandidateInput, UserUncheckedUpdateWithoutCandidateInput>
  }

  export type UserUpdateWithoutCandidateInput = {
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUpdateManyWithoutLastUpdatedByNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUncheckedUpdateOneWithoutUserNestedInput
    applicationsUpdated?: ApplicationUncheckedUpdateManyWithoutLastUpdatedByNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CandidateSkillUpsertWithWhereUniqueWithoutCandidateInput = {
    where: CandidateSkillWhereUniqueInput
    update: XOR<CandidateSkillUpdateWithoutCandidateInput, CandidateSkillUncheckedUpdateWithoutCandidateInput>
    create: XOR<CandidateSkillCreateWithoutCandidateInput, CandidateSkillUncheckedCreateWithoutCandidateInput>
  }

  export type CandidateSkillUpdateWithWhereUniqueWithoutCandidateInput = {
    where: CandidateSkillWhereUniqueInput
    data: XOR<CandidateSkillUpdateWithoutCandidateInput, CandidateSkillUncheckedUpdateWithoutCandidateInput>
  }

  export type CandidateSkillUpdateManyWithWhereWithoutCandidateInput = {
    where: CandidateSkillScalarWhereInput
    data: XOR<CandidateSkillUpdateManyMutationInput, CandidateSkillUncheckedUpdateManyWithoutCandidateInput>
  }

  export type CVUpsertWithWhereUniqueWithoutCandidateInput = {
    where: CVWhereUniqueInput
    update: XOR<CVUpdateWithoutCandidateInput, CVUncheckedUpdateWithoutCandidateInput>
    create: XOR<CVCreateWithoutCandidateInput, CVUncheckedCreateWithoutCandidateInput>
  }

  export type CVUpdateWithWhereUniqueWithoutCandidateInput = {
    where: CVWhereUniqueInput
    data: XOR<CVUpdateWithoutCandidateInput, CVUncheckedUpdateWithoutCandidateInput>
  }

  export type CVUpdateManyWithWhereWithoutCandidateInput = {
    where: CVScalarWhereInput
    data: XOR<CVUpdateManyMutationInput, CVUncheckedUpdateManyWithoutCandidateInput>
  }

  export type CVScalarWhereInput = {
    AND?: CVScalarWhereInput | CVScalarWhereInput[]
    OR?: CVScalarWhereInput[]
    NOT?: CVScalarWhereInput | CVScalarWhereInput[]
    id?: IntFilter<"CV"> | number
    candidateId?: IntFilter<"CV"> | number
    fileName?: StringFilter<"CV"> | string
    fileUrl?: StringFilter<"CV"> | string
    fileType?: EnumFileTypeEnumNullableFilter<"CV"> | $Enums.FileTypeEnum | null
    language?: StringNullableFilter<"CV"> | string | null
    isPrimary?: BoolFilter<"CV"> | boolean
    uploadedAt?: DateTimeFilter<"CV"> | Date | string
  }

  export type ApplicationUpsertWithWhereUniqueWithoutCandidateInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutCandidateInput, ApplicationUncheckedUpdateWithoutCandidateInput>
    create: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutCandidateInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutCandidateInput, ApplicationUncheckedUpdateWithoutCandidateInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutCandidateInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutCandidateInput>
  }

  export type EducationUpsertWithWhereUniqueWithoutCandidateInput = {
    where: EducationWhereUniqueInput
    update: XOR<EducationUpdateWithoutCandidateInput, EducationUncheckedUpdateWithoutCandidateInput>
    create: XOR<EducationCreateWithoutCandidateInput, EducationUncheckedCreateWithoutCandidateInput>
  }

  export type EducationUpdateWithWhereUniqueWithoutCandidateInput = {
    where: EducationWhereUniqueInput
    data: XOR<EducationUpdateWithoutCandidateInput, EducationUncheckedUpdateWithoutCandidateInput>
  }

  export type EducationUpdateManyWithWhereWithoutCandidateInput = {
    where: EducationScalarWhereInput
    data: XOR<EducationUpdateManyMutationInput, EducationUncheckedUpdateManyWithoutCandidateInput>
  }

  export type EducationScalarWhereInput = {
    AND?: EducationScalarWhereInput | EducationScalarWhereInput[]
    OR?: EducationScalarWhereInput[]
    NOT?: EducationScalarWhereInput | EducationScalarWhereInput[]
    id?: IntFilter<"Education"> | number
    candidateId?: IntFilter<"Education"> | number
    universityName?: StringFilter<"Education"> | string
    facultyDepartment?: StringNullableFilter<"Education"> | string | null
    degree?: StringNullableFilter<"Education"> | string | null
    major?: StringNullableFilter<"Education"> | string | null
    startDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    expectedGraduationDate?: DateTimeNullableFilter<"Education"> | Date | string | null
    gpa?: DecimalNullableFilter<"Education"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Education"> | string | null
    descriptionJp?: StringNullableFilter<"Education"> | string | null
    country?: StringNullableFilter<"Education"> | string | null
    createdAt?: DateTimeFilter<"Education"> | Date | string
    updatedAt?: DateTimeFilter<"Education"> | Date | string
  }

  export type WorkExperienceUpsertWithWhereUniqueWithoutCandidateInput = {
    where: WorkExperienceWhereUniqueInput
    update: XOR<WorkExperienceUpdateWithoutCandidateInput, WorkExperienceUncheckedUpdateWithoutCandidateInput>
    create: XOR<WorkExperienceCreateWithoutCandidateInput, WorkExperienceUncheckedCreateWithoutCandidateInput>
  }

  export type WorkExperienceUpdateWithWhereUniqueWithoutCandidateInput = {
    where: WorkExperienceWhereUniqueInput
    data: XOR<WorkExperienceUpdateWithoutCandidateInput, WorkExperienceUncheckedUpdateWithoutCandidateInput>
  }

  export type WorkExperienceUpdateManyWithWhereWithoutCandidateInput = {
    where: WorkExperienceScalarWhereInput
    data: XOR<WorkExperienceUpdateManyMutationInput, WorkExperienceUncheckedUpdateManyWithoutCandidateInput>
  }

  export type WorkExperienceScalarWhereInput = {
    AND?: WorkExperienceScalarWhereInput | WorkExperienceScalarWhereInput[]
    OR?: WorkExperienceScalarWhereInput[]
    NOT?: WorkExperienceScalarWhereInput | WorkExperienceScalarWhereInput[]
    id?: IntFilter<"WorkExperience"> | number
    candidateId?: IntFilter<"WorkExperience"> | number
    companyName?: StringFilter<"WorkExperience"> | string
    jobTitle?: StringFilter<"WorkExperience"> | string
    employmentType?: EnumJobTypeEnumNullableFilter<"WorkExperience"> | $Enums.JobTypeEnum | null
    startDate?: DateTimeFilter<"WorkExperience"> | Date | string
    endDate?: DateTimeNullableFilter<"WorkExperience"> | Date | string | null
    isCurrent?: BoolFilter<"WorkExperience"> | boolean
    location?: StringNullableFilter<"WorkExperience"> | string | null
    description?: StringNullableFilter<"WorkExperience"> | string | null
    descriptionJp?: StringNullableFilter<"WorkExperience"> | string | null
    responsibilities?: StringNullableListFilter<"WorkExperience">
    keyToolsTechnologies?: StringNullableListFilter<"WorkExperience">
    createdAt?: DateTimeFilter<"WorkExperience"> | Date | string
    updatedAt?: DateTimeFilter<"WorkExperience"> | Date | string
  }

  export type ProjectUpsertWithWhereUniqueWithoutCandidateInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutCandidateInput, ProjectUncheckedUpdateWithoutCandidateInput>
    create: XOR<ProjectCreateWithoutCandidateInput, ProjectUncheckedCreateWithoutCandidateInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutCandidateInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutCandidateInput, ProjectUncheckedUpdateWithoutCandidateInput>
  }

  export type ProjectUpdateManyWithWhereWithoutCandidateInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutCandidateInput>
  }

  export type ProjectScalarWhereInput = {
    AND?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    OR?: ProjectScalarWhereInput[]
    NOT?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    id?: IntFilter<"Project"> | number
    candidateId?: IntFilter<"Project"> | number
    title?: StringFilter<"Project"> | string
    titleJp?: StringNullableFilter<"Project"> | string | null
    url?: StringNullableFilter<"Project"> | string | null
    purpose?: StringNullableFilter<"Project"> | string | null
    purposeJp?: StringNullableFilter<"Project"> | string | null
    description?: StringNullableFilter<"Project"> | string | null
    descriptionJp?: StringNullableFilter<"Project"> | string | null
    bulletPoints?: StringNullableListFilter<"Project">
    technologiesUsed?: StringNullableListFilter<"Project">
    teamDetails?: StringNullableFilter<"Project"> | string | null
    duration?: StringNullableFilter<"Project"> | string | null
    startDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    createdAt?: DateTimeFilter<"Project"> | Date | string
    updatedAt?: DateTimeFilter<"Project"> | Date | string
  }

  export type QualificationUpsertWithWhereUniqueWithoutCandidateInput = {
    where: QualificationWhereUniqueInput
    update: XOR<QualificationUpdateWithoutCandidateInput, QualificationUncheckedUpdateWithoutCandidateInput>
    create: XOR<QualificationCreateWithoutCandidateInput, QualificationUncheckedCreateWithoutCandidateInput>
  }

  export type QualificationUpdateWithWhereUniqueWithoutCandidateInput = {
    where: QualificationWhereUniqueInput
    data: XOR<QualificationUpdateWithoutCandidateInput, QualificationUncheckedUpdateWithoutCandidateInput>
  }

  export type QualificationUpdateManyWithWhereWithoutCandidateInput = {
    where: QualificationScalarWhereInput
    data: XOR<QualificationUpdateManyMutationInput, QualificationUncheckedUpdateManyWithoutCandidateInput>
  }

  export type QualificationScalarWhereInput = {
    AND?: QualificationScalarWhereInput | QualificationScalarWhereInput[]
    OR?: QualificationScalarWhereInput[]
    NOT?: QualificationScalarWhereInput | QualificationScalarWhereInput[]
    id?: IntFilter<"Qualification"> | number
    candidateId?: IntFilter<"Qualification"> | number
    name?: StringFilter<"Qualification"> | string
    issuingOrganization?: StringNullableFilter<"Qualification"> | string | null
    issueDate?: DateTimeNullableFilter<"Qualification"> | Date | string | null
    expiryDate?: DateTimeNullableFilter<"Qualification"> | Date | string | null
    credentialId?: StringNullableFilter<"Qualification"> | string | null
    credentialUrl?: StringNullableFilter<"Qualification"> | string | null
    description?: StringNullableFilter<"Qualification"> | string | null
    createdAt?: DateTimeFilter<"Qualification"> | Date | string
    updatedAt?: DateTimeFilter<"Qualification"> | Date | string
  }

  export type AwardUpsertWithWhereUniqueWithoutCandidateInput = {
    where: AwardWhereUniqueInput
    update: XOR<AwardUpdateWithoutCandidateInput, AwardUncheckedUpdateWithoutCandidateInput>
    create: XOR<AwardCreateWithoutCandidateInput, AwardUncheckedCreateWithoutCandidateInput>
  }

  export type AwardUpdateWithWhereUniqueWithoutCandidateInput = {
    where: AwardWhereUniqueInput
    data: XOR<AwardUpdateWithoutCandidateInput, AwardUncheckedUpdateWithoutCandidateInput>
  }

  export type AwardUpdateManyWithWhereWithoutCandidateInput = {
    where: AwardScalarWhereInput
    data: XOR<AwardUpdateManyMutationInput, AwardUncheckedUpdateManyWithoutCandidateInput>
  }

  export type AwardScalarWhereInput = {
    AND?: AwardScalarWhereInput | AwardScalarWhereInput[]
    OR?: AwardScalarWhereInput[]
    NOT?: AwardScalarWhereInput | AwardScalarWhereInput[]
    id?: IntFilter<"Award"> | number
    candidateId?: IntFilter<"Award"> | number
    title?: StringFilter<"Award"> | string
    issuer?: StringNullableFilter<"Award"> | string | null
    date?: DateTimeNullableFilter<"Award"> | Date | string | null
    description?: StringNullableFilter<"Award"> | string | null
    createdAt?: DateTimeFilter<"Award"> | Date | string
    updatedAt?: DateTimeFilter<"Award"> | Date | string
  }

  export type CandidateMediaUpsertWithWhereUniqueWithoutCandidateInput = {
    where: CandidateMediaWhereUniqueInput
    update: XOR<CandidateMediaUpdateWithoutCandidateInput, CandidateMediaUncheckedUpdateWithoutCandidateInput>
    create: XOR<CandidateMediaCreateWithoutCandidateInput, CandidateMediaUncheckedCreateWithoutCandidateInput>
  }

  export type CandidateMediaUpdateWithWhereUniqueWithoutCandidateInput = {
    where: CandidateMediaWhereUniqueInput
    data: XOR<CandidateMediaUpdateWithoutCandidateInput, CandidateMediaUncheckedUpdateWithoutCandidateInput>
  }

  export type CandidateMediaUpdateManyWithWhereWithoutCandidateInput = {
    where: CandidateMediaScalarWhereInput
    data: XOR<CandidateMediaUpdateManyMutationInput, CandidateMediaUncheckedUpdateManyWithoutCandidateInput>
  }

  export type CandidateMediaScalarWhereInput = {
    AND?: CandidateMediaScalarWhereInput | CandidateMediaScalarWhereInput[]
    OR?: CandidateMediaScalarWhereInput[]
    NOT?: CandidateMediaScalarWhereInput | CandidateMediaScalarWhereInput[]
    id?: IntFilter<"CandidateMedia"> | number
    candidateId?: IntFilter<"CandidateMedia"> | number
    mediaType?: EnumMediaTypeFilter<"CandidateMedia"> | $Enums.MediaType
    title?: StringNullableFilter<"CandidateMedia"> | string | null
    url?: StringFilter<"CandidateMedia"> | string
    thumbnailUrl?: StringNullableFilter<"CandidateMedia"> | string | null
    description?: StringNullableFilter<"CandidateMedia"> | string | null
    createdAt?: DateTimeFilter<"CandidateMedia"> | Date | string
    updatedAt?: DateTimeFilter<"CandidateMedia"> | Date | string
  }

  export type EmployerCreateWithoutJobsInput = {
    companyName: string
    companyNameKana?: string | null
    companyNameJp?: string | null
    companyLogoUrl?: string | null
    companyWebsite?: string | null
    companyDescription?: string | null
    companyDescriptionJp?: string | null
    businessOverview?: string | null
    businessOverviewJp?: string | null
    companyAddress?: string | null
    companyAddressJp?: string | null
    companyPhone?: string | null
    establishmentDate?: Date | string | null
    representativeName?: string | null
    representativeTitle?: string | null
    vietnamBranchExists?: boolean | null
    companySize?: $Enums.CompanySizeType | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutEmployerInput
  }

  export type EmployerUncheckedCreateWithoutJobsInput = {
    id?: number
    userId: number
    companyName: string
    companyNameKana?: string | null
    companyNameJp?: string | null
    companyLogoUrl?: string | null
    companyWebsite?: string | null
    companyDescription?: string | null
    companyDescriptionJp?: string | null
    businessOverview?: string | null
    businessOverviewJp?: string | null
    companyAddress?: string | null
    companyAddressJp?: string | null
    companyPhone?: string | null
    establishmentDate?: Date | string | null
    representativeName?: string | null
    representativeTitle?: string | null
    vietnamBranchExists?: boolean | null
    companySize?: $Enums.CompanySizeType | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EmployerCreateOrConnectWithoutJobsInput = {
    where: EmployerWhereUniqueInput
    create: XOR<EmployerCreateWithoutJobsInput, EmployerUncheckedCreateWithoutJobsInput>
  }

  export type IndustryCreateWithoutJobsInput = {
    name: string
    nameJp?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IndustryUncheckedCreateWithoutJobsInput = {
    id?: number
    name: string
    nameJp?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IndustryCreateOrConnectWithoutJobsInput = {
    where: IndustryWhereUniqueInput
    create: XOR<IndustryCreateWithoutJobsInput, IndustryUncheckedCreateWithoutJobsInput>
  }

  export type JobSkillCreateWithoutJobInput = {
    importanceLevel?: number | null
    requiredYears?: number | null
    skill: SkillCreateNestedOneWithoutJobSkillsInput
  }

  export type JobSkillUncheckedCreateWithoutJobInput = {
    id?: number
    skillId: number
    importanceLevel?: number | null
    requiredYears?: number | null
  }

  export type JobSkillCreateOrConnectWithoutJobInput = {
    where: JobSkillWhereUniqueInput
    create: XOR<JobSkillCreateWithoutJobInput, JobSkillUncheckedCreateWithoutJobInput>
  }

  export type JobSkillCreateManyJobInputEnvelope = {
    data: JobSkillCreateManyJobInput | JobSkillCreateManyJobInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationCreateWithoutJobInput = {
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate: CandidateCreateNestedOneWithoutApplicationsInput
    cv: CVCreateNestedOneWithoutApplicationsInput
    lastUpdatedBy?: UserCreateNestedOneWithoutApplicationsUpdatedInput
  }

  export type ApplicationUncheckedCreateWithoutJobInput = {
    id?: number
    candidateId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type ApplicationCreateOrConnectWithoutJobInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutJobInput, ApplicationUncheckedCreateWithoutJobInput>
  }

  export type ApplicationCreateManyJobInputEnvelope = {
    data: ApplicationCreateManyJobInput | ApplicationCreateManyJobInput[]
    skipDuplicates?: boolean
  }

  export type JobDocumentCreateWithoutJobInput = {
    documentName: string
    documentUrl: string
    documentType: $Enums.DocumentType
    thumbnailUrl?: string | null
    uploadedAt?: Date | string
  }

  export type JobDocumentUncheckedCreateWithoutJobInput = {
    id?: number
    documentName: string
    documentUrl: string
    documentType: $Enums.DocumentType
    thumbnailUrl?: string | null
    uploadedAt?: Date | string
  }

  export type JobDocumentCreateOrConnectWithoutJobInput = {
    where: JobDocumentWhereUniqueInput
    create: XOR<JobDocumentCreateWithoutJobInput, JobDocumentUncheckedCreateWithoutJobInput>
  }

  export type JobDocumentCreateManyJobInputEnvelope = {
    data: JobDocumentCreateManyJobInput | JobDocumentCreateManyJobInput[]
    skipDuplicates?: boolean
  }

  export type EmployerUpsertWithoutJobsInput = {
    update: XOR<EmployerUpdateWithoutJobsInput, EmployerUncheckedUpdateWithoutJobsInput>
    create: XOR<EmployerCreateWithoutJobsInput, EmployerUncheckedCreateWithoutJobsInput>
    where?: EmployerWhereInput
  }

  export type EmployerUpdateToOneWithWhereWithoutJobsInput = {
    where?: EmployerWhereInput
    data: XOR<EmployerUpdateWithoutJobsInput, EmployerUncheckedUpdateWithoutJobsInput>
  }

  export type EmployerUpdateWithoutJobsInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutEmployerNestedInput
  }

  export type EmployerUncheckedUpdateWithoutJobsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyNameKana?: NullableStringFieldUpdateOperationsInput | string | null
    companyNameJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    companyDescriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverview?: NullableStringFieldUpdateOperationsInput | string | null
    businessOverviewJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    establishmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    representativeName?: NullableStringFieldUpdateOperationsInput | string | null
    representativeTitle?: NullableStringFieldUpdateOperationsInput | string | null
    vietnamBranchExists?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companySize?: NullableEnumCompanySizeTypeFieldUpdateOperationsInput | $Enums.CompanySizeType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IndustryUpsertWithoutJobsInput = {
    update: XOR<IndustryUpdateWithoutJobsInput, IndustryUncheckedUpdateWithoutJobsInput>
    create: XOR<IndustryCreateWithoutJobsInput, IndustryUncheckedCreateWithoutJobsInput>
    where?: IndustryWhereInput
  }

  export type IndustryUpdateToOneWithWhereWithoutJobsInput = {
    where?: IndustryWhereInput
    data: XOR<IndustryUpdateWithoutJobsInput, IndustryUncheckedUpdateWithoutJobsInput>
  }

  export type IndustryUpdateWithoutJobsInput = {
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IndustryUncheckedUpdateWithoutJobsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobSkillUpsertWithWhereUniqueWithoutJobInput = {
    where: JobSkillWhereUniqueInput
    update: XOR<JobSkillUpdateWithoutJobInput, JobSkillUncheckedUpdateWithoutJobInput>
    create: XOR<JobSkillCreateWithoutJobInput, JobSkillUncheckedCreateWithoutJobInput>
  }

  export type JobSkillUpdateWithWhereUniqueWithoutJobInput = {
    where: JobSkillWhereUniqueInput
    data: XOR<JobSkillUpdateWithoutJobInput, JobSkillUncheckedUpdateWithoutJobInput>
  }

  export type JobSkillUpdateManyWithWhereWithoutJobInput = {
    where: JobSkillScalarWhereInput
    data: XOR<JobSkillUpdateManyMutationInput, JobSkillUncheckedUpdateManyWithoutJobInput>
  }

  export type ApplicationUpsertWithWhereUniqueWithoutJobInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutJobInput, ApplicationUncheckedUpdateWithoutJobInput>
    create: XOR<ApplicationCreateWithoutJobInput, ApplicationUncheckedCreateWithoutJobInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutJobInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutJobInput, ApplicationUncheckedUpdateWithoutJobInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutJobInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutJobInput>
  }

  export type JobDocumentUpsertWithWhereUniqueWithoutJobInput = {
    where: JobDocumentWhereUniqueInput
    update: XOR<JobDocumentUpdateWithoutJobInput, JobDocumentUncheckedUpdateWithoutJobInput>
    create: XOR<JobDocumentCreateWithoutJobInput, JobDocumentUncheckedCreateWithoutJobInput>
  }

  export type JobDocumentUpdateWithWhereUniqueWithoutJobInput = {
    where: JobDocumentWhereUniqueInput
    data: XOR<JobDocumentUpdateWithoutJobInput, JobDocumentUncheckedUpdateWithoutJobInput>
  }

  export type JobDocumentUpdateManyWithWhereWithoutJobInput = {
    where: JobDocumentScalarWhereInput
    data: XOR<JobDocumentUpdateManyMutationInput, JobDocumentUncheckedUpdateManyWithoutJobInput>
  }

  export type JobDocumentScalarWhereInput = {
    AND?: JobDocumentScalarWhereInput | JobDocumentScalarWhereInput[]
    OR?: JobDocumentScalarWhereInput[]
    NOT?: JobDocumentScalarWhereInput | JobDocumentScalarWhereInput[]
    id?: IntFilter<"JobDocument"> | number
    jobId?: IntFilter<"JobDocument"> | number
    documentName?: StringFilter<"JobDocument"> | string
    documentUrl?: StringFilter<"JobDocument"> | string
    documentType?: EnumDocumentTypeFilter<"JobDocument"> | $Enums.DocumentType
    thumbnailUrl?: StringNullableFilter<"JobDocument"> | string | null
    uploadedAt?: DateTimeFilter<"JobDocument"> | Date | string
  }

  export type JobCreateWithoutSkillsInput = {
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer: EmployerCreateNestedOneWithoutJobsInput
    industry?: IndustryCreateNestedOneWithoutJobsInput
    applications?: ApplicationCreateNestedManyWithoutJobInput
    documents?: JobDocumentCreateNestedManyWithoutJobInput
  }

  export type JobUncheckedCreateWithoutSkillsInput = {
    id?: number
    employerId: number
    industryId?: number | null
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: ApplicationUncheckedCreateNestedManyWithoutJobInput
    documents?: JobDocumentUncheckedCreateNestedManyWithoutJobInput
  }

  export type JobCreateOrConnectWithoutSkillsInput = {
    where: JobWhereUniqueInput
    create: XOR<JobCreateWithoutSkillsInput, JobUncheckedCreateWithoutSkillsInput>
  }

  export type SkillCreateWithoutJobSkillsInput = {
    name: string
    nameJp?: string | null
    category?: $Enums.SkillCategory | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidateSkills?: CandidateSkillCreateNestedManyWithoutSkillInput
  }

  export type SkillUncheckedCreateWithoutJobSkillsInput = {
    id?: number
    name: string
    nameJp?: string | null
    category?: $Enums.SkillCategory | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    candidateSkills?: CandidateSkillUncheckedCreateNestedManyWithoutSkillInput
  }

  export type SkillCreateOrConnectWithoutJobSkillsInput = {
    where: SkillWhereUniqueInput
    create: XOR<SkillCreateWithoutJobSkillsInput, SkillUncheckedCreateWithoutJobSkillsInput>
  }

  export type JobUpsertWithoutSkillsInput = {
    update: XOR<JobUpdateWithoutSkillsInput, JobUncheckedUpdateWithoutSkillsInput>
    create: XOR<JobCreateWithoutSkillsInput, JobUncheckedCreateWithoutSkillsInput>
    where?: JobWhereInput
  }

  export type JobUpdateToOneWithWhereWithoutSkillsInput = {
    where?: JobWhereInput
    data: XOR<JobUpdateWithoutSkillsInput, JobUncheckedUpdateWithoutSkillsInput>
  }

  export type JobUpdateWithoutSkillsInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneRequiredWithoutJobsNestedInput
    industry?: IndustryUpdateOneWithoutJobsNestedInput
    applications?: ApplicationUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateWithoutSkillsInput = {
    id?: IntFieldUpdateOperationsInput | number
    employerId?: IntFieldUpdateOperationsInput | number
    industryId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: ApplicationUncheckedUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUncheckedUpdateManyWithoutJobNestedInput
  }

  export type SkillUpsertWithoutJobSkillsInput = {
    update: XOR<SkillUpdateWithoutJobSkillsInput, SkillUncheckedUpdateWithoutJobSkillsInput>
    create: XOR<SkillCreateWithoutJobSkillsInput, SkillUncheckedCreateWithoutJobSkillsInput>
    where?: SkillWhereInput
  }

  export type SkillUpdateToOneWithWhereWithoutJobSkillsInput = {
    where?: SkillWhereInput
    data: XOR<SkillUpdateWithoutJobSkillsInput, SkillUncheckedUpdateWithoutJobSkillsInput>
  }

  export type SkillUpdateWithoutJobSkillsInput = {
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidateSkills?: CandidateSkillUpdateManyWithoutSkillNestedInput
  }

  export type SkillUncheckedUpdateWithoutJobSkillsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidateSkills?: CandidateSkillUncheckedUpdateManyWithoutSkillNestedInput
  }

  export type CandidateCreateWithoutSkillsInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutSkillsInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutSkillsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutSkillsInput, CandidateUncheckedCreateWithoutSkillsInput>
  }

  export type SkillCreateWithoutCandidateSkillsInput = {
    name: string
    nameJp?: string | null
    category?: $Enums.SkillCategory | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobSkills?: JobSkillCreateNestedManyWithoutSkillInput
  }

  export type SkillUncheckedCreateWithoutCandidateSkillsInput = {
    id?: number
    name: string
    nameJp?: string | null
    category?: $Enums.SkillCategory | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jobSkills?: JobSkillUncheckedCreateNestedManyWithoutSkillInput
  }

  export type SkillCreateOrConnectWithoutCandidateSkillsInput = {
    where: SkillWhereUniqueInput
    create: XOR<SkillCreateWithoutCandidateSkillsInput, SkillUncheckedCreateWithoutCandidateSkillsInput>
  }

  export type CandidateUpsertWithoutSkillsInput = {
    update: XOR<CandidateUpdateWithoutSkillsInput, CandidateUncheckedUpdateWithoutSkillsInput>
    create: XOR<CandidateCreateWithoutSkillsInput, CandidateUncheckedCreateWithoutSkillsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutSkillsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutSkillsInput, CandidateUncheckedUpdateWithoutSkillsInput>
  }

  export type CandidateUpdateWithoutSkillsInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutSkillsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type SkillUpsertWithoutCandidateSkillsInput = {
    update: XOR<SkillUpdateWithoutCandidateSkillsInput, SkillUncheckedUpdateWithoutCandidateSkillsInput>
    create: XOR<SkillCreateWithoutCandidateSkillsInput, SkillUncheckedCreateWithoutCandidateSkillsInput>
    where?: SkillWhereInput
  }

  export type SkillUpdateToOneWithWhereWithoutCandidateSkillsInput = {
    where?: SkillWhereInput
    data: XOR<SkillUpdateWithoutCandidateSkillsInput, SkillUncheckedUpdateWithoutCandidateSkillsInput>
  }

  export type SkillUpdateWithoutCandidateSkillsInput = {
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobSkills?: JobSkillUpdateManyWithoutSkillNestedInput
  }

  export type SkillUncheckedUpdateWithoutCandidateSkillsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    nameJp?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableEnumSkillCategoryFieldUpdateOperationsInput | $Enums.SkillCategory | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobSkills?: JobSkillUncheckedUpdateManyWithoutSkillNestedInput
  }

  export type CandidateCreateWithoutCvsInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutCvsInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutCvsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutCvsInput, CandidateUncheckedCreateWithoutCvsInput>
  }

  export type ApplicationCreateWithoutCvInput = {
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate: CandidateCreateNestedOneWithoutApplicationsInput
    job: JobCreateNestedOneWithoutApplicationsInput
    lastUpdatedBy?: UserCreateNestedOneWithoutApplicationsUpdatedInput
  }

  export type ApplicationUncheckedCreateWithoutCvInput = {
    id?: number
    candidateId: number
    jobId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type ApplicationCreateOrConnectWithoutCvInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutCvInput, ApplicationUncheckedCreateWithoutCvInput>
  }

  export type ApplicationCreateManyCvInputEnvelope = {
    data: ApplicationCreateManyCvInput | ApplicationCreateManyCvInput[]
    skipDuplicates?: boolean
  }

  export type CandidateUpsertWithoutCvsInput = {
    update: XOR<CandidateUpdateWithoutCvsInput, CandidateUncheckedUpdateWithoutCvsInput>
    create: XOR<CandidateCreateWithoutCvsInput, CandidateUncheckedCreateWithoutCvsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutCvsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutCvsInput, CandidateUncheckedUpdateWithoutCvsInput>
  }

  export type CandidateUpdateWithoutCvsInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutCvsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type ApplicationUpsertWithWhereUniqueWithoutCvInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutCvInput, ApplicationUncheckedUpdateWithoutCvInput>
    create: XOR<ApplicationCreateWithoutCvInput, ApplicationUncheckedCreateWithoutCvInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutCvInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutCvInput, ApplicationUncheckedUpdateWithoutCvInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutCvInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutCvInput>
  }

  export type CandidateCreateWithoutApplicationsInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutApplicationsInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutApplicationsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutApplicationsInput, CandidateUncheckedCreateWithoutApplicationsInput>
  }

  export type JobCreateWithoutApplicationsInput = {
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer: EmployerCreateNestedOneWithoutJobsInput
    industry?: IndustryCreateNestedOneWithoutJobsInput
    skills?: JobSkillCreateNestedManyWithoutJobInput
    documents?: JobDocumentCreateNestedManyWithoutJobInput
  }

  export type JobUncheckedCreateWithoutApplicationsInput = {
    id?: number
    employerId: number
    industryId?: number | null
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: JobSkillUncheckedCreateNestedManyWithoutJobInput
    documents?: JobDocumentUncheckedCreateNestedManyWithoutJobInput
  }

  export type JobCreateOrConnectWithoutApplicationsInput = {
    where: JobWhereUniqueInput
    create: XOR<JobCreateWithoutApplicationsInput, JobUncheckedCreateWithoutApplicationsInput>
  }

  export type CVCreateWithoutApplicationsInput = {
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
    candidate: CandidateCreateNestedOneWithoutCvsInput
  }

  export type CVUncheckedCreateWithoutApplicationsInput = {
    id?: number
    candidateId: number
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
  }

  export type CVCreateOrConnectWithoutApplicationsInput = {
    where: CVWhereUniqueInput
    create: XOR<CVCreateWithoutApplicationsInput, CVUncheckedCreateWithoutApplicationsInput>
  }

  export type UserCreateWithoutApplicationsUpdatedInput = {
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerCreateNestedOneWithoutUserInput
    candidate?: CandidateCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutApplicationsUpdatedInput = {
    id?: number
    email: string
    passwordHash: string
    fullName: string
    phoneNumber?: string | null
    userType: $Enums.UserType
    avatarUrl?: string | null
    isActive?: boolean
    isEmailVerified?: boolean
    emailVerifyToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer?: EmployerUncheckedCreateNestedOneWithoutUserInput
    candidate?: CandidateUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutApplicationsUpdatedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApplicationsUpdatedInput, UserUncheckedCreateWithoutApplicationsUpdatedInput>
  }

  export type CandidateUpsertWithoutApplicationsInput = {
    update: XOR<CandidateUpdateWithoutApplicationsInput, CandidateUncheckedUpdateWithoutApplicationsInput>
    create: XOR<CandidateCreateWithoutApplicationsInput, CandidateUncheckedCreateWithoutApplicationsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutApplicationsInput, CandidateUncheckedUpdateWithoutApplicationsInput>
  }

  export type CandidateUpdateWithoutApplicationsInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutApplicationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type JobUpsertWithoutApplicationsInput = {
    update: XOR<JobUpdateWithoutApplicationsInput, JobUncheckedUpdateWithoutApplicationsInput>
    create: XOR<JobCreateWithoutApplicationsInput, JobUncheckedCreateWithoutApplicationsInput>
    where?: JobWhereInput
  }

  export type JobUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: JobWhereInput
    data: XOR<JobUpdateWithoutApplicationsInput, JobUncheckedUpdateWithoutApplicationsInput>
  }

  export type JobUpdateWithoutApplicationsInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneRequiredWithoutJobsNestedInput
    industry?: IndustryUpdateOneWithoutJobsNestedInput
    skills?: JobSkillUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateWithoutApplicationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    employerId?: IntFieldUpdateOperationsInput | number
    industryId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: JobSkillUncheckedUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUncheckedUpdateManyWithoutJobNestedInput
  }

  export type CVUpsertWithoutApplicationsInput = {
    update: XOR<CVUpdateWithoutApplicationsInput, CVUncheckedUpdateWithoutApplicationsInput>
    create: XOR<CVCreateWithoutApplicationsInput, CVUncheckedCreateWithoutApplicationsInput>
    where?: CVWhereInput
  }

  export type CVUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: CVWhereInput
    data: XOR<CVUpdateWithoutApplicationsInput, CVUncheckedUpdateWithoutApplicationsInput>
  }

  export type CVUpdateWithoutApplicationsInput = {
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    candidate?: CandidateUpdateOneRequiredWithoutCvsNestedInput
  }

  export type CVUncheckedUpdateWithoutApplicationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutApplicationsUpdatedInput = {
    update: XOR<UserUpdateWithoutApplicationsUpdatedInput, UserUncheckedUpdateWithoutApplicationsUpdatedInput>
    create: XOR<UserCreateWithoutApplicationsUpdatedInput, UserUncheckedCreateWithoutApplicationsUpdatedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApplicationsUpdatedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApplicationsUpdatedInput, UserUncheckedUpdateWithoutApplicationsUpdatedInput>
  }

  export type UserUpdateWithoutApplicationsUpdatedInput = {
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneWithoutUserNestedInput
    candidate?: CandidateUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutApplicationsUpdatedInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isEmailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifyToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUncheckedUpdateOneWithoutUserNestedInput
    candidate?: CandidateUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CandidateCreateWithoutEducationInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutEducationInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutEducationInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutEducationInput, CandidateUncheckedCreateWithoutEducationInput>
  }

  export type CandidateUpsertWithoutEducationInput = {
    update: XOR<CandidateUpdateWithoutEducationInput, CandidateUncheckedUpdateWithoutEducationInput>
    create: XOR<CandidateCreateWithoutEducationInput, CandidateUncheckedCreateWithoutEducationInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutEducationInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutEducationInput, CandidateUncheckedUpdateWithoutEducationInput>
  }

  export type CandidateUpdateWithoutEducationInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutEducationInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateCreateWithoutWorkExperienceInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutWorkExperienceInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutWorkExperienceInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutWorkExperienceInput, CandidateUncheckedCreateWithoutWorkExperienceInput>
  }

  export type CandidateUpsertWithoutWorkExperienceInput = {
    update: XOR<CandidateUpdateWithoutWorkExperienceInput, CandidateUncheckedUpdateWithoutWorkExperienceInput>
    create: XOR<CandidateCreateWithoutWorkExperienceInput, CandidateUncheckedCreateWithoutWorkExperienceInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutWorkExperienceInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutWorkExperienceInput, CandidateUncheckedUpdateWithoutWorkExperienceInput>
  }

  export type CandidateUpdateWithoutWorkExperienceInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutWorkExperienceInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateCreateWithoutProjectsInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutProjectsInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutProjectsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutProjectsInput, CandidateUncheckedCreateWithoutProjectsInput>
  }

  export type CandidateUpsertWithoutProjectsInput = {
    update: XOR<CandidateUpdateWithoutProjectsInput, CandidateUncheckedUpdateWithoutProjectsInput>
    create: XOR<CandidateCreateWithoutProjectsInput, CandidateUncheckedCreateWithoutProjectsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutProjectsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutProjectsInput, CandidateUncheckedUpdateWithoutProjectsInput>
  }

  export type CandidateUpdateWithoutProjectsInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateCreateWithoutQualificationsInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutQualificationsInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutQualificationsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutQualificationsInput, CandidateUncheckedCreateWithoutQualificationsInput>
  }

  export type CandidateUpsertWithoutQualificationsInput = {
    update: XOR<CandidateUpdateWithoutQualificationsInput, CandidateUncheckedUpdateWithoutQualificationsInput>
    create: XOR<CandidateCreateWithoutQualificationsInput, CandidateUncheckedCreateWithoutQualificationsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutQualificationsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutQualificationsInput, CandidateUncheckedUpdateWithoutQualificationsInput>
  }

  export type CandidateUpdateWithoutQualificationsInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutQualificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateCreateWithoutAwardsInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutAwardsInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    media?: CandidateMediaUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutAwardsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutAwardsInput, CandidateUncheckedCreateWithoutAwardsInput>
  }

  export type CandidateUpsertWithoutAwardsInput = {
    update: XOR<CandidateUpdateWithoutAwardsInput, CandidateUncheckedUpdateWithoutAwardsInput>
    create: XOR<CandidateCreateWithoutAwardsInput, CandidateUncheckedCreateWithoutAwardsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutAwardsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutAwardsInput, CandidateUncheckedUpdateWithoutAwardsInput>
  }

  export type CandidateUpdateWithoutAwardsInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutAwardsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    media?: CandidateMediaUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateCreateWithoutMediaInput = {
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCandidateInput
    skills?: CandidateSkillCreateNestedManyWithoutCandidateInput
    cvs?: CVCreateNestedManyWithoutCandidateInput
    applications?: ApplicationCreateNestedManyWithoutCandidateInput
    education?: EducationCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceCreateNestedManyWithoutCandidateInput
    projects?: ProjectCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationCreateNestedManyWithoutCandidateInput
    awards?: AwardCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutMediaInput = {
    id?: number
    userId: number
    nameKana?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.GenderType | null
    nationality?: string | null
    currentAddressJp?: string | null
    homeCountryAddress?: string | null
    country?: string | null
    headline?: string | null
    headlineJp?: string | null
    professionalSummary?: string | null
    professionalSummaryJp?: string | null
    appealStatement?: string | null
    appealStatementJp?: string | null
    keyStrengths?: CandidateCreatekeyStrengthsInput | string[]
    motivationStatement?: string | null
    careerGoals?: string | null
    linkedinUrl?: string | null
    githubUrl?: string | null
    portfolioUrl?: string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: $Enums.SalaryType | null
    preferredJobTypes?: CandidateCreatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateCreatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateCreatejobExpectationsInput | string[]
    interestsTags?: CandidateCreateinterestsTagsInput | string[]
    currentVisaStatusJp?: string | null
    visaExpiryDateJp?: Date | string | null
    desiredVisaSupport?: boolean | null
    japaneseProficiency?: $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: boolean | null
    arrivalInJapanDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    currentYearOfStudy?: number | null
    studentId?: string | null
    isSearchable?: boolean
    profileCompleteness?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: CandidateSkillUncheckedCreateNestedManyWithoutCandidateInput
    cvs?: CVUncheckedCreateNestedManyWithoutCandidateInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    education?: EducationUncheckedCreateNestedManyWithoutCandidateInput
    workExperience?: WorkExperienceUncheckedCreateNestedManyWithoutCandidateInput
    projects?: ProjectUncheckedCreateNestedManyWithoutCandidateInput
    qualifications?: QualificationUncheckedCreateNestedManyWithoutCandidateInput
    awards?: AwardUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutMediaInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutMediaInput, CandidateUncheckedCreateWithoutMediaInput>
  }

  export type CandidateUpsertWithoutMediaInput = {
    update: XOR<CandidateUpdateWithoutMediaInput, CandidateUncheckedUpdateWithoutMediaInput>
    create: XOR<CandidateCreateWithoutMediaInput, CandidateUncheckedCreateWithoutMediaInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutMediaInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutMediaInput, CandidateUncheckedUpdateWithoutMediaInput>
  }

  export type CandidateUpdateWithoutMediaInput = {
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCandidateNestedInput
    skills?: CandidateSkillUpdateManyWithoutCandidateNestedInput
    cvs?: CVUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUpdateManyWithoutCandidateNestedInput
    education?: EducationUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUpdateManyWithoutCandidateNestedInput
    awards?: AwardUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutMediaInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nameKana?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderTypeFieldUpdateOperationsInput | $Enums.GenderType | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddressJp?: NullableStringFieldUpdateOperationsInput | string | null
    homeCountryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    headline?: NullableStringFieldUpdateOperationsInput | string | null
    headlineJp?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummary?: NullableStringFieldUpdateOperationsInput | string | null
    professionalSummaryJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatement?: NullableStringFieldUpdateOperationsInput | string | null
    appealStatementJp?: NullableStringFieldUpdateOperationsInput | string | null
    keyStrengths?: CandidateUpdatekeyStrengthsInput | string[]
    motivationStatement?: NullableStringFieldUpdateOperationsInput | string | null
    careerGoals?: NullableStringFieldUpdateOperationsInput | string | null
    linkedinUrl?: NullableStringFieldUpdateOperationsInput | string | null
    githubUrl?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioUrl?: NullableStringFieldUpdateOperationsInput | string | null
    otherSocialProfiles?: NullableJsonNullValueInput | InputJsonValue
    desiredSalaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    desiredSalaryType?: NullableEnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType | null
    preferredJobTypes?: CandidateUpdatepreferredJobTypesInput | $Enums.JobTypeEnum[]
    preferredWorkLocations?: CandidateUpdatepreferredWorkLocationsInput | string[]
    jobExpectations?: CandidateUpdatejobExpectationsInput | string[]
    interestsTags?: CandidateUpdateinterestsTagsInput | string[]
    currentVisaStatusJp?: NullableStringFieldUpdateOperationsInput | string | null
    visaExpiryDateJp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    desiredVisaSupport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    japaneseProficiency?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    englishProficiency?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguages?: NullableJsonNullValueInput | InputJsonValue
    willingToRelocateInJapan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    arrivalInJapanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentYearOfStudy?: NullableIntFieldUpdateOperationsInput | number | null
    studentId?: NullableStringFieldUpdateOperationsInput | string | null
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    profileCompleteness?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: CandidateSkillUncheckedUpdateManyWithoutCandidateNestedInput
    cvs?: CVUncheckedUpdateManyWithoutCandidateNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    education?: EducationUncheckedUpdateManyWithoutCandidateNestedInput
    workExperience?: WorkExperienceUncheckedUpdateManyWithoutCandidateNestedInput
    projects?: ProjectUncheckedUpdateManyWithoutCandidateNestedInput
    qualifications?: QualificationUncheckedUpdateManyWithoutCandidateNestedInput
    awards?: AwardUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type JobCreateWithoutDocumentsInput = {
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employer: EmployerCreateNestedOneWithoutJobsInput
    industry?: IndustryCreateNestedOneWithoutJobsInput
    skills?: JobSkillCreateNestedManyWithoutJobInput
    applications?: ApplicationCreateNestedManyWithoutJobInput
  }

  export type JobUncheckedCreateWithoutDocumentsInput = {
    id?: number
    employerId: number
    industryId?: number | null
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: JobSkillUncheckedCreateNestedManyWithoutJobInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutJobInput
  }

  export type JobCreateOrConnectWithoutDocumentsInput = {
    where: JobWhereUniqueInput
    create: XOR<JobCreateWithoutDocumentsInput, JobUncheckedCreateWithoutDocumentsInput>
  }

  export type JobUpsertWithoutDocumentsInput = {
    update: XOR<JobUpdateWithoutDocumentsInput, JobUncheckedUpdateWithoutDocumentsInput>
    create: XOR<JobCreateWithoutDocumentsInput, JobUncheckedCreateWithoutDocumentsInput>
    where?: JobWhereInput
  }

  export type JobUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: JobWhereInput
    data: XOR<JobUpdateWithoutDocumentsInput, JobUncheckedUpdateWithoutDocumentsInput>
  }

  export type JobUpdateWithoutDocumentsInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneRequiredWithoutJobsNestedInput
    industry?: IndustryUpdateOneWithoutJobsNestedInput
    skills?: JobSkillUpdateManyWithoutJobNestedInput
    applications?: ApplicationUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateWithoutDocumentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    employerId?: IntFieldUpdateOperationsInput | number
    industryId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: JobSkillUncheckedUpdateManyWithoutJobNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutJobNestedInput
  }

  export type JobCreateManyIndustryInput = {
    id?: number
    employerId: number
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobUpdateWithoutIndustryInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employer?: EmployerUpdateOneRequiredWithoutJobsNestedInput
    skills?: JobSkillUpdateManyWithoutJobNestedInput
    applications?: ApplicationUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateWithoutIndustryInput = {
    id?: IntFieldUpdateOperationsInput | number
    employerId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: JobSkillUncheckedUpdateManyWithoutJobNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUncheckedUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateManyWithoutIndustryInput = {
    id?: IntFieldUpdateOperationsInput | number
    employerId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobSkillCreateManySkillInput = {
    id?: number
    jobId: number
    importanceLevel?: number | null
    requiredYears?: number | null
  }

  export type CandidateSkillCreateManySkillInput = {
    id?: number
    candidateId: number
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
  }

  export type JobSkillUpdateWithoutSkillInput = {
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
    job?: JobUpdateOneRequiredWithoutSkillsNestedInput
  }

  export type JobSkillUncheckedUpdateWithoutSkillInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type JobSkillUncheckedUpdateManyWithoutSkillInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CandidateSkillUpdateWithoutSkillInput = {
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    candidate?: CandidateUpdateOneRequiredWithoutSkillsNestedInput
  }

  export type CandidateSkillUncheckedUpdateWithoutSkillInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CandidateSkillUncheckedUpdateManyWithoutSkillInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ApplicationCreateManyLastUpdatedByInput = {
    id?: number
    candidateId: number
    jobId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expiresAt: Date | string
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type ApplicationUpdateWithoutLastUpdatedByInput = {
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate?: CandidateUpdateOneRequiredWithoutApplicationsNestedInput
    job?: JobUpdateOneRequiredWithoutApplicationsNestedInput
    cv?: CVUpdateOneRequiredWithoutApplicationsNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutLastUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ApplicationUncheckedUpdateManyWithoutLastUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobCreateManyEmployerInput = {
    id?: number
    industryId?: number | null
    title: string
    titleJp?: string | null
    description: string
    descriptionJp?: string | null
    requirements: string
    requirementsJp?: string | null
    benefits?: string | null
    benefitsJp?: string | null
    appealPoints?: JobCreateappealPointsInput | string[]
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryType?: $Enums.SalaryType
    salaryDetails?: string | null
    country?: string
    prefecture?: string | null
    city?: string | null
    addressDetail?: string | null
    nearestStation?: string | null
    isRemote?: boolean
    remoteDetails?: string | null
    jobType: $Enums.JobTypeEnum
    status?: $Enums.JobStatus
    postedDate?: Date | string
    expiryDate?: Date | string | null
    externalApplicationUrl?: string | null
    hiringStages?: JobCreatehiringStagesInput | string[]
    workingHoursDescription?: string | null
    isFlexTime?: boolean | null
    coreTimeDescription?: string | null
    actualWorkingHoursPerDay?: Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: string | null
    visaSupportAvailable?: boolean | null
    relocationSupportAvailable?: boolean | null
    housingSupportDetails?: string | null
    foreignFriendlyEnvironment?: boolean | null
    targetCandidateDescription?: string | null
    numberOfHires?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobUpdateWithoutEmployerInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    industry?: IndustryUpdateOneWithoutJobsNestedInput
    skills?: JobSkillUpdateManyWithoutJobNestedInput
    applications?: ApplicationUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateWithoutEmployerInput = {
    id?: IntFieldUpdateOperationsInput | number
    industryId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: JobSkillUncheckedUpdateManyWithoutJobNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutJobNestedInput
    documents?: JobDocumentUncheckedUpdateManyWithoutJobNestedInput
  }

  export type JobUncheckedUpdateManyWithoutEmployerInput = {
    id?: IntFieldUpdateOperationsInput | number
    industryId?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    requirements?: StringFieldUpdateOperationsInput | string
    requirementsJp?: NullableStringFieldUpdateOperationsInput | string | null
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    benefitsJp?: NullableStringFieldUpdateOperationsInput | string | null
    appealPoints?: JobUpdateappealPointsInput | string[]
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryType?: EnumSalaryTypeFieldUpdateOperationsInput | $Enums.SalaryType
    salaryDetails?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    prefecture?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    addressDetail?: NullableStringFieldUpdateOperationsInput | string | null
    nearestStation?: NullableStringFieldUpdateOperationsInput | string | null
    isRemote?: BoolFieldUpdateOperationsInput | boolean
    remoteDetails?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: EnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    postedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalApplicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    hiringStages?: JobUpdatehiringStagesInput | string[]
    workingHoursDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isFlexTime?: NullableBoolFieldUpdateOperationsInput | boolean | null
    coreTimeDescription?: NullableStringFieldUpdateOperationsInput | string | null
    actualWorkingHoursPerDay?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avgOvertimeHoursPerMonth?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requiredJapaneseLevel?: NullableEnumJapaneseProficiencyLevelFieldUpdateOperationsInput | $Enums.JapaneseProficiencyLevel | null
    requiredEnglishLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    otherLanguageRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    visaSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    relocationSupportAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    housingSupportDetails?: NullableStringFieldUpdateOperationsInput | string | null
    foreignFriendlyEnvironment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    targetCandidateDescription?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfHires?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateSkillCreateManyCandidateInput = {
    id?: number
    skillId: number
    proficiencyLevel?: $Enums.ProficiencyLevel | null
    experienceMonths?: number | null
  }

  export type CVCreateManyCandidateInput = {
    id?: number
    fileName: string
    fileUrl: string
    fileType?: $Enums.FileTypeEnum | null
    language?: string | null
    isPrimary?: boolean
    uploadedAt?: Date | string
  }

  export type ApplicationCreateManyCandidateInput = {
    id?: number
    jobId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type EducationCreateManyCandidateInput = {
    id?: number
    universityName: string
    facultyDepartment?: string | null
    degree?: string | null
    major?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    expectedGraduationDate?: Date | string | null
    gpa?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    descriptionJp?: string | null
    country?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WorkExperienceCreateManyCandidateInput = {
    id?: number
    companyName: string
    jobTitle: string
    employmentType?: $Enums.JobTypeEnum | null
    startDate: Date | string
    endDate?: Date | string | null
    isCurrent?: boolean
    location?: string | null
    description?: string | null
    descriptionJp?: string | null
    responsibilities?: WorkExperienceCreateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceCreatekeyToolsTechnologiesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProjectCreateManyCandidateInput = {
    id?: number
    title: string
    titleJp?: string | null
    url?: string | null
    purpose?: string | null
    purposeJp?: string | null
    description?: string | null
    descriptionJp?: string | null
    bulletPoints?: ProjectCreatebulletPointsInput | string[]
    technologiesUsed?: ProjectCreatetechnologiesUsedInput | string[]
    teamDetails?: string | null
    duration?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualificationCreateManyCandidateInput = {
    id?: number
    name: string
    issuingOrganization?: string | null
    issueDate?: Date | string | null
    expiryDate?: Date | string | null
    credentialId?: string | null
    credentialUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AwardCreateManyCandidateInput = {
    id?: number
    title: string
    issuer?: string | null
    date?: Date | string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidateMediaCreateManyCandidateInput = {
    id?: number
    mediaType: $Enums.MediaType
    title?: string | null
    url: string
    thumbnailUrl?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidateSkillUpdateWithoutCandidateInput = {
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    skill?: SkillUpdateOneRequiredWithoutCandidateSkillsNestedInput
  }

  export type CandidateSkillUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CandidateSkillUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    proficiencyLevel?: NullableEnumProficiencyLevelFieldUpdateOperationsInput | $Enums.ProficiencyLevel | null
    experienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CVUpdateWithoutCandidateInput = {
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: ApplicationUpdateManyWithoutCvNestedInput
  }

  export type CVUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: ApplicationUncheckedUpdateManyWithoutCvNestedInput
  }

  export type CVUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileType?: NullableEnumFileTypeEnumFieldUpdateOperationsInput | $Enums.FileTypeEnum | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUpdateWithoutCandidateInput = {
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    job?: JobUpdateOneRequiredWithoutApplicationsNestedInput
    cv?: CVUpdateOneRequiredWithoutApplicationsNestedInput
    lastUpdatedBy?: UserUpdateOneWithoutApplicationsUpdatedNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ApplicationUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EducationUpdateWithoutCandidateInput = {
    universityName?: StringFieldUpdateOperationsInput | string
    facultyDepartment?: NullableStringFieldUpdateOperationsInput | string | null
    degree?: NullableStringFieldUpdateOperationsInput | string | null
    major?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gpa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EducationUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    universityName?: StringFieldUpdateOperationsInput | string
    facultyDepartment?: NullableStringFieldUpdateOperationsInput | string | null
    degree?: NullableStringFieldUpdateOperationsInput | string | null
    major?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gpa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EducationUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    universityName?: StringFieldUpdateOperationsInput | string
    facultyDepartment?: NullableStringFieldUpdateOperationsInput | string | null
    degree?: NullableStringFieldUpdateOperationsInput | string | null
    major?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedGraduationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gpa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkExperienceUpdateWithoutCandidateInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    employmentType?: NullableEnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isCurrent?: BoolFieldUpdateOperationsInput | boolean
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    responsibilities?: WorkExperienceUpdateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceUpdatekeyToolsTechnologiesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkExperienceUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    employmentType?: NullableEnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isCurrent?: BoolFieldUpdateOperationsInput | boolean
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    responsibilities?: WorkExperienceUpdateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceUpdatekeyToolsTechnologiesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkExperienceUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    employmentType?: NullableEnumJobTypeEnumFieldUpdateOperationsInput | $Enums.JobTypeEnum | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isCurrent?: BoolFieldUpdateOperationsInput | boolean
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    responsibilities?: WorkExperienceUpdateresponsibilitiesInput | string[]
    keyToolsTechnologies?: WorkExperienceUpdatekeyToolsTechnologiesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUpdateWithoutCandidateInput = {
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    purposeJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    bulletPoints?: ProjectUpdatebulletPointsInput | string[]
    technologiesUsed?: ProjectUpdatetechnologiesUsedInput | string[]
    teamDetails?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    purposeJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    bulletPoints?: ProjectUpdatebulletPointsInput | string[]
    technologiesUsed?: ProjectUpdatetechnologiesUsedInput | string[]
    teamDetails?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    titleJp?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    purposeJp?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    descriptionJp?: NullableStringFieldUpdateOperationsInput | string | null
    bulletPoints?: ProjectUpdatebulletPointsInput | string[]
    technologiesUsed?: ProjectUpdatetechnologiesUsedInput | string[]
    teamDetails?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualificationUpdateWithoutCandidateInput = {
    name?: StringFieldUpdateOperationsInput | string
    issuingOrganization?: NullableStringFieldUpdateOperationsInput | string | null
    issueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    credentialId?: NullableStringFieldUpdateOperationsInput | string | null
    credentialUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualificationUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    issuingOrganization?: NullableStringFieldUpdateOperationsInput | string | null
    issueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    credentialId?: NullableStringFieldUpdateOperationsInput | string | null
    credentialUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualificationUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    issuingOrganization?: NullableStringFieldUpdateOperationsInput | string | null
    issueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    credentialId?: NullableStringFieldUpdateOperationsInput | string | null
    credentialUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AwardUpdateWithoutCandidateInput = {
    title?: StringFieldUpdateOperationsInput | string
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AwardUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AwardUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateMediaUpdateWithoutCandidateInput = {
    mediaType?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateMediaUncheckedUpdateWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    mediaType?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidateMediaUncheckedUpdateManyWithoutCandidateInput = {
    id?: IntFieldUpdateOperationsInput | number
    mediaType?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobSkillCreateManyJobInput = {
    id?: number
    skillId: number
    importanceLevel?: number | null
    requiredYears?: number | null
  }

  export type ApplicationCreateManyJobInput = {
    id?: number
    candidateId: number
    cvId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type JobDocumentCreateManyJobInput = {
    id?: number
    documentName: string
    documentUrl: string
    documentType: $Enums.DocumentType
    thumbnailUrl?: string | null
    uploadedAt?: Date | string
  }

  export type JobSkillUpdateWithoutJobInput = {
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
    skill?: SkillUpdateOneRequiredWithoutJobSkillsNestedInput
  }

  export type JobSkillUncheckedUpdateWithoutJobInput = {
    id?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type JobSkillUncheckedUpdateManyWithoutJobInput = {
    id?: IntFieldUpdateOperationsInput | number
    skillId?: IntFieldUpdateOperationsInput | number
    importanceLevel?: NullableIntFieldUpdateOperationsInput | number | null
    requiredYears?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ApplicationUpdateWithoutJobInput = {
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate?: CandidateUpdateOneRequiredWithoutApplicationsNestedInput
    cv?: CVUpdateOneRequiredWithoutApplicationsNestedInput
    lastUpdatedBy?: UserUpdateOneWithoutApplicationsUpdatedNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutJobInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ApplicationUncheckedUpdateManyWithoutJobInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    cvId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type JobDocumentUpdateWithoutJobInput = {
    documentName?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobDocumentUncheckedUpdateWithoutJobInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentName?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobDocumentUncheckedUpdateManyWithoutJobInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentName?: StringFieldUpdateOperationsInput | string
    documentUrl?: StringFieldUpdateOperationsInput | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    thumbnailUrl?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationCreateManyCvInput = {
    id?: number
    candidateId: number
    jobId: number
    coverLetter?: string | null
    applicationDate?: Date | string
    status?: $Enums.ApplicationStatus
    statusMessage?: string | null
    currentStageIndex?: number | null
    internalNotes?: string | null
    candidateNotes?: string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: boolean | null
    matchScore?: Decimal | DecimalJsLike | number | string | null
    manualScore?: Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: number | null
  }

  export type ApplicationUpdateWithoutCvInput = {
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    candidate?: CandidateUpdateOneRequiredWithoutApplicationsNestedInput
    job?: JobUpdateOneRequiredWithoutApplicationsNestedInput
    lastUpdatedBy?: UserUpdateOneWithoutApplicationsUpdatedNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutCvInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ApplicationUncheckedUpdateManyWithoutCvInput = {
    id?: IntFieldUpdateOperationsInput | number
    candidateId?: IntFieldUpdateOperationsInput | number
    jobId?: IntFieldUpdateOperationsInput | number
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    applicationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    statusMessage?: NullableStringFieldUpdateOperationsInput | string | null
    currentStageIndex?: NullableIntFieldUpdateOperationsInput | number | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    candidateNotes?: NullableStringFieldUpdateOperationsInput | string | null
    processLog?: NullableJsonNullValueInput | InputJsonValue
    isBookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    matchScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    manualScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    offerDetails?: NullableJsonNullValueInput | InputJsonValue
    lastUpdatedById?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}